2023-12-17 21:02:18,725:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-17 21:02:18,725:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-17 21:02:18,725:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-17 21:02:18,725:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-17 21:04:15,919:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-17 21:04:15,921:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-17 21:04:15,921:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-17 21:04:15,921:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-17 21:07:27,564:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-17 21:07:27,564:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-17 21:07:27,564:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-17 21:07:27,564:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-17 21:07:44,012:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-17 21:07:44,013:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-17 21:07:44,013:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-17 21:07:44,013:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-17 21:07:44,537:INFO:PyCaret ClassificationExperiment
2023-12-17 21:07:44,537:INFO:Logging name: clf-default-name
2023-12-17 21:07:44,537:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-17 21:07:44,537:INFO:version 3.2.0
2023-12-17 21:07:44,538:INFO:Initializing setup()
2023-12-17 21:07:44,538:INFO:self.USI: bb00
2023-12-17 21:07:44,538:INFO:self._variable_keys: {'fold_generator', 'exp_name_log', 'USI', 'data', 'pipeline', 'exp_id', 'y_train', 'X_train', 'y', 'fold_shuffle_param', '_ml_usecase', 'idx', 'logging_param', 'gpu_n_jobs_param', 'X_test', 'y_test', 'log_plots_param', 'fix_imbalance', '_available_plots', 'seed', 'memory', 'n_jobs_param', 'html_param', 'target_param', 'fold_groups_param', 'is_multiclass', 'gpu_param', 'X'}
2023-12-17 21:07:44,538:INFO:Checking environment
2023-12-17 21:07:44,538:INFO:python_version: 3.10.4
2023-12-17 21:07:44,538:INFO:python_build: ('tags/v3.10.4:9d38120', 'Mar 23 2022 23:13:41')
2023-12-17 21:07:44,538:INFO:machine: AMD64
2023-12-17 21:07:44,547:INFO:platform: Windows-10-10.0.19045-SP0
2023-12-17 21:07:44,551:INFO:Memory: svmem(total=34029125632, available=17728888832, percent=47.9, used=16300236800, free=17728888832)
2023-12-17 21:07:44,551:INFO:Physical Core: 14
2023-12-17 21:07:44,551:INFO:Logical Core: 20
2023-12-17 21:07:44,551:INFO:Checking libraries
2023-12-17 21:07:44,551:INFO:System:
2023-12-17 21:07:44,551:INFO:    python: 3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit (AMD64)]
2023-12-17 21:07:44,551:INFO:executable: C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\python.exe
2023-12-17 21:07:44,551:INFO:   machine: Windows-10-10.0.19045-SP0
2023-12-17 21:07:44,551:INFO:PyCaret required dependencies:
2023-12-17 21:07:44,597:INFO:                 pip: 22.0.4
2023-12-17 21:07:44,597:INFO:          setuptools: 58.1.0
2023-12-17 21:07:44,597:INFO:             pycaret: 3.2.0
2023-12-17 21:07:44,597:INFO:             IPython: 8.18.1
2023-12-17 21:07:44,597:INFO:          ipywidgets: 8.1.1
2023-12-17 21:07:44,597:INFO:                tqdm: 4.66.1
2023-12-17 21:07:44,597:INFO:               numpy: 1.25.2
2023-12-17 21:07:44,597:INFO:              pandas: 1.5.3
2023-12-17 21:07:44,597:INFO:              jinja2: 3.1.2
2023-12-17 21:07:44,597:INFO:               scipy: 1.10.1
2023-12-17 21:07:44,597:INFO:              joblib: 1.3.2
2023-12-17 21:07:44,597:INFO:             sklearn: 1.2.2
2023-12-17 21:07:44,597:INFO:                pyod: 1.1.2
2023-12-17 21:07:44,597:INFO:            imblearn: 0.11.0
2023-12-17 21:07:44,597:INFO:   category_encoders: 2.6.3
2023-12-17 21:07:44,597:INFO:            lightgbm: 4.1.0
2023-12-17 21:07:44,597:INFO:               numba: 0.58.1
2023-12-17 21:07:44,597:INFO:            requests: 2.31.0
2023-12-17 21:07:44,597:INFO:          matplotlib: 3.6.0
2023-12-17 21:07:44,597:INFO:          scikitplot: 0.3.7
2023-12-17 21:07:44,597:INFO:         yellowbrick: 1.5
2023-12-17 21:07:44,597:INFO:              plotly: 5.18.0
2023-12-17 21:07:44,597:INFO:    plotly-resampler: Not installed
2023-12-17 21:07:44,597:INFO:             kaleido: 0.2.1
2023-12-17 21:07:44,597:INFO:           schemdraw: 0.15
2023-12-17 21:07:44,597:INFO:         statsmodels: 0.14.1
2023-12-17 21:07:44,597:INFO:              sktime: 0.21.1
2023-12-17 21:07:44,597:INFO:               tbats: 1.1.3
2023-12-17 21:07:44,597:INFO:            pmdarima: 2.0.4
2023-12-17 21:07:44,597:INFO:              psutil: 5.9.7
2023-12-17 21:07:44,597:INFO:          markupsafe: 2.1.3
2023-12-17 21:07:44,597:INFO:             pickle5: Not installed
2023-12-17 21:07:44,597:INFO:         cloudpickle: 3.0.0
2023-12-17 21:07:44,597:INFO:         deprecation: 2.1.0
2023-12-17 21:07:44,597:INFO:              xxhash: 3.4.1
2023-12-17 21:07:44,597:INFO:           wurlitzer: Not installed
2023-12-17 21:07:44,597:INFO:PyCaret optional dependencies:
2023-12-17 21:07:44,606:INFO:                shap: Not installed
2023-12-17 21:07:44,606:INFO:           interpret: Not installed
2023-12-17 21:07:44,606:INFO:                umap: Not installed
2023-12-17 21:07:44,606:INFO:     ydata_profiling: Not installed
2023-12-17 21:07:44,606:INFO:  explainerdashboard: Not installed
2023-12-17 21:07:44,606:INFO:             autoviz: Not installed
2023-12-17 21:07:44,606:INFO:           fairlearn: Not installed
2023-12-17 21:07:44,606:INFO:          deepchecks: Not installed
2023-12-17 21:07:44,606:INFO:             xgboost: Not installed
2023-12-17 21:07:44,606:INFO:            catboost: Not installed
2023-12-17 21:07:44,606:INFO:              kmodes: Not installed
2023-12-17 21:07:44,606:INFO:             mlxtend: Not installed
2023-12-17 21:07:44,606:INFO:       statsforecast: Not installed
2023-12-17 21:07:44,606:INFO:        tune_sklearn: Not installed
2023-12-17 21:07:44,606:INFO:                 ray: Not installed
2023-12-17 21:07:44,606:INFO:            hyperopt: Not installed
2023-12-17 21:07:44,606:INFO:              optuna: Not installed
2023-12-17 21:07:44,606:INFO:               skopt: Not installed
2023-12-17 21:07:44,606:INFO:              mlflow: Not installed
2023-12-17 21:07:44,606:INFO:              gradio: Not installed
2023-12-17 21:07:44,606:INFO:             fastapi: Not installed
2023-12-17 21:07:44,606:INFO:             uvicorn: Not installed
2023-12-17 21:07:44,606:INFO:              m2cgen: Not installed
2023-12-17 21:07:44,606:INFO:           evidently: Not installed
2023-12-17 21:07:44,606:INFO:               fugue: Not installed
2023-12-17 21:07:44,606:INFO:           streamlit: Not installed
2023-12-17 21:07:44,606:INFO:             prophet: Not installed
2023-12-17 21:07:44,606:INFO:None
2023-12-17 21:07:44,606:INFO:Set up data.
2023-12-17 21:07:44,618:INFO:Set up folding strategy.
2023-12-17 21:07:44,618:INFO:Set up train/test split.
2023-12-17 21:07:44,640:INFO:Set up index.
2023-12-17 21:07:44,640:INFO:Assigning column types.
2023-12-17 21:07:44,642:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-17 21:07:44,665:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-17 21:07:44,667:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-17 21:07:44,685:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:07:44,685:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:07:44,706:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-17 21:07:44,706:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-17 21:07:44,720:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:07:44,720:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:07:44,720:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-17 21:07:44,743:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-17 21:07:44,757:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:07:44,757:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:07:44,779:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-17 21:07:44,793:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:07:44,794:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:07:44,794:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-17 21:07:44,830:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:07:44,830:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:07:44,866:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:07:44,867:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:07:44,875:INFO:Preparing preprocessing pipeline...
2023-12-17 21:07:44,876:INFO:Set up label encoding.
2023-12-17 21:07:44,876:INFO:Set up date feature engineering.
2023-12-17 21:07:44,876:INFO:Set up simple imputation.
2023-12-17 21:07:44,879:INFO:Set up encoding of categorical features.
2023-12-17 21:07:44,879:INFO:Set up column name cleaning.
2023-12-17 21:07:44,978:INFO:Finished creating preprocessing pipeline.
2023-12-17 21:07:44,984:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MAXIMI~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['tmsp'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_i...
                 TransformerWrapper(exclude=None, include=['country', 'card'],
                                    transformer=OneHotEncoder(cols=['country',
                                                                    'card'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-17 21:07:44,984:INFO:Creating final display dataframe.
2023-12-17 21:07:45,210:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               1795
1                        Target                                                PSP
2                   Target type                                         Multiclass
3                Target mapping  Goldcard: 0, Moneycard: 1, Simplecard: 2, UK_C...
4           Original data shape                                         (50410, 8)
5        Transformed data shape                                        (50410, 14)
6   Transformed train set shape                                        (35287, 14)
7    Transformed test set shape                                        (15123, 14)
8              Numeric features                                                  4
9                 Date features                                                  1
10         Categorical features                                                  2
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                  5
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               bb00
2023-12-17 21:07:45,248:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:07:45,248:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:07:45,286:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:07:45,286:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:07:45,286:INFO:setup() successfully completed in 0.75s...............
2023-12-17 21:08:57,987:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-17 21:08:57,988:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-17 21:08:57,988:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-17 21:08:57,988:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-17 21:08:58,489:INFO:PyCaret ClassificationExperiment
2023-12-17 21:08:58,490:INFO:Logging name: clf-default-name
2023-12-17 21:08:58,490:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-17 21:08:58,490:INFO:version 3.2.0
2023-12-17 21:08:58,490:INFO:Initializing setup()
2023-12-17 21:08:58,490:INFO:self.USI: 5329
2023-12-17 21:08:58,490:INFO:self._variable_keys: {'target_param', 'y_test', 'pipeline', 'gpu_n_jobs_param', 'y_train', 'html_param', '_ml_usecase', 'fold_shuffle_param', 'X_test', 'fold_generator', 'is_multiclass', 'seed', 'logging_param', 'gpu_param', 'exp_id', 'memory', 'idx', 'y', 'X_train', 'X', '_available_plots', 'exp_name_log', 'log_plots_param', 'fix_imbalance', 'data', 'n_jobs_param', 'USI', 'fold_groups_param'}
2023-12-17 21:08:58,490:INFO:Checking environment
2023-12-17 21:08:58,490:INFO:python_version: 3.10.4
2023-12-17 21:08:58,490:INFO:python_build: ('tags/v3.10.4:9d38120', 'Mar 23 2022 23:13:41')
2023-12-17 21:08:58,490:INFO:machine: AMD64
2023-12-17 21:08:58,500:INFO:platform: Windows-10-10.0.19045-SP0
2023-12-17 21:08:58,503:INFO:Memory: svmem(total=34029125632, available=17679990784, percent=48.0, used=16349134848, free=17679990784)
2023-12-17 21:08:58,503:INFO:Physical Core: 14
2023-12-17 21:08:58,503:INFO:Logical Core: 20
2023-12-17 21:08:58,503:INFO:Checking libraries
2023-12-17 21:08:58,503:INFO:System:
2023-12-17 21:08:58,503:INFO:    python: 3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit (AMD64)]
2023-12-17 21:08:58,503:INFO:executable: C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\python.exe
2023-12-17 21:08:58,503:INFO:   machine: Windows-10-10.0.19045-SP0
2023-12-17 21:08:58,503:INFO:PyCaret required dependencies:
2023-12-17 21:08:58,514:INFO:                 pip: 22.0.4
2023-12-17 21:08:58,514:INFO:          setuptools: 58.1.0
2023-12-17 21:08:58,514:INFO:             pycaret: 3.2.0
2023-12-17 21:08:58,514:INFO:             IPython: 8.18.1
2023-12-17 21:08:58,514:INFO:          ipywidgets: 8.1.1
2023-12-17 21:08:58,514:INFO:                tqdm: 4.66.1
2023-12-17 21:08:58,514:INFO:               numpy: 1.25.2
2023-12-17 21:08:58,514:INFO:              pandas: 1.5.3
2023-12-17 21:08:58,514:INFO:              jinja2: 3.1.2
2023-12-17 21:08:58,514:INFO:               scipy: 1.10.1
2023-12-17 21:08:58,515:INFO:              joblib: 1.3.2
2023-12-17 21:08:58,515:INFO:             sklearn: 1.2.2
2023-12-17 21:08:58,515:INFO:                pyod: 1.1.2
2023-12-17 21:08:58,515:INFO:            imblearn: 0.11.0
2023-12-17 21:08:58,515:INFO:   category_encoders: 2.6.3
2023-12-17 21:08:58,515:INFO:            lightgbm: 4.1.0
2023-12-17 21:08:58,515:INFO:               numba: 0.58.1
2023-12-17 21:08:58,515:INFO:            requests: 2.31.0
2023-12-17 21:08:58,515:INFO:          matplotlib: 3.6.0
2023-12-17 21:08:58,515:INFO:          scikitplot: 0.3.7
2023-12-17 21:08:58,515:INFO:         yellowbrick: 1.5
2023-12-17 21:08:58,515:INFO:              plotly: 5.18.0
2023-12-17 21:08:58,515:INFO:    plotly-resampler: Not installed
2023-12-17 21:08:58,515:INFO:             kaleido: 0.2.1
2023-12-17 21:08:58,515:INFO:           schemdraw: 0.15
2023-12-17 21:08:58,515:INFO:         statsmodels: 0.14.1
2023-12-17 21:08:58,515:INFO:              sktime: 0.21.1
2023-12-17 21:08:58,515:INFO:               tbats: 1.1.3
2023-12-17 21:08:58,515:INFO:            pmdarima: 2.0.4
2023-12-17 21:08:58,515:INFO:              psutil: 5.9.7
2023-12-17 21:08:58,515:INFO:          markupsafe: 2.1.3
2023-12-17 21:08:58,515:INFO:             pickle5: Not installed
2023-12-17 21:08:58,515:INFO:         cloudpickle: 3.0.0
2023-12-17 21:08:58,515:INFO:         deprecation: 2.1.0
2023-12-17 21:08:58,515:INFO:              xxhash: 3.4.1
2023-12-17 21:08:58,515:INFO:           wurlitzer: Not installed
2023-12-17 21:08:58,515:INFO:PyCaret optional dependencies:
2023-12-17 21:08:58,523:INFO:                shap: Not installed
2023-12-17 21:08:58,523:INFO:           interpret: Not installed
2023-12-17 21:08:58,523:INFO:                umap: Not installed
2023-12-17 21:08:58,523:INFO:     ydata_profiling: Not installed
2023-12-17 21:08:58,523:INFO:  explainerdashboard: Not installed
2023-12-17 21:08:58,523:INFO:             autoviz: Not installed
2023-12-17 21:08:58,523:INFO:           fairlearn: Not installed
2023-12-17 21:08:58,523:INFO:          deepchecks: Not installed
2023-12-17 21:08:58,523:INFO:             xgboost: Not installed
2023-12-17 21:08:58,523:INFO:            catboost: Not installed
2023-12-17 21:08:58,524:INFO:              kmodes: Not installed
2023-12-17 21:08:58,524:INFO:             mlxtend: Not installed
2023-12-17 21:08:58,524:INFO:       statsforecast: Not installed
2023-12-17 21:08:58,524:INFO:        tune_sklearn: Not installed
2023-12-17 21:08:58,524:INFO:                 ray: Not installed
2023-12-17 21:08:58,524:INFO:            hyperopt: Not installed
2023-12-17 21:08:58,524:INFO:              optuna: Not installed
2023-12-17 21:08:58,524:INFO:               skopt: Not installed
2023-12-17 21:08:58,524:INFO:              mlflow: Not installed
2023-12-17 21:08:58,524:INFO:              gradio: Not installed
2023-12-17 21:08:58,524:INFO:             fastapi: Not installed
2023-12-17 21:08:58,524:INFO:             uvicorn: Not installed
2023-12-17 21:08:58,524:INFO:              m2cgen: Not installed
2023-12-17 21:08:58,524:INFO:           evidently: Not installed
2023-12-17 21:08:58,524:INFO:               fugue: Not installed
2023-12-17 21:08:58,524:INFO:           streamlit: Not installed
2023-12-17 21:08:58,524:INFO:             prophet: Not installed
2023-12-17 21:08:58,524:INFO:None
2023-12-17 21:08:58,524:INFO:Set up data.
2023-12-17 21:08:58,536:INFO:Set up folding strategy.
2023-12-17 21:08:58,536:INFO:Set up train/test split.
2023-12-17 21:08:58,557:INFO:Set up index.
2023-12-17 21:08:58,558:INFO:Assigning column types.
2023-12-17 21:08:58,560:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-17 21:08:58,583:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-17 21:08:58,585:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-17 21:08:58,606:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:08:58,606:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:08:58,635:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-17 21:08:58,636:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-17 21:08:58,654:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:08:58,654:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:08:58,654:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-17 21:08:58,684:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-17 21:08:58,703:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:08:58,703:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:08:58,733:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-17 21:08:58,751:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:08:58,751:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:08:58,752:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-17 21:08:58,803:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:08:58,803:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:08:58,852:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:08:58,852:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:08:58,853:INFO:Preparing preprocessing pipeline...
2023-12-17 21:08:58,854:INFO:Set up label encoding.
2023-12-17 21:08:58,854:INFO:Set up date feature engineering.
2023-12-17 21:08:58,854:INFO:Set up simple imputation.
2023-12-17 21:08:58,857:INFO:Set up encoding of categorical features.
2023-12-17 21:08:58,857:INFO:Set up column name cleaning.
2023-12-17 21:08:58,961:INFO:Finished creating preprocessing pipeline.
2023-12-17 21:08:58,967:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MAXIMI~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['tmsp'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_i...
                 TransformerWrapper(exclude=None, include=['country', 'card'],
                                    transformer=OneHotEncoder(cols=['country',
                                                                    'card'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-17 21:08:58,967:INFO:Creating final display dataframe.
2023-12-17 21:08:59,193:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               2191
1                        Target                                                PSP
2                   Target type                                         Multiclass
3                Target mapping  Goldcard: 0, Moneycard: 1, Simplecard: 2, UK_C...
4           Original data shape                                         (50410, 8)
5        Transformed data shape                                        (50410, 14)
6   Transformed train set shape                                        (35287, 14)
7    Transformed test set shape                                        (15123, 14)
8              Numeric features                                                  4
9                 Date features                                                  1
10         Categorical features                                                  2
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                  5
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               5329
2023-12-17 21:08:59,230:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:08:59,230:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:08:59,265:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:08:59,266:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-17 21:08:59,266:INFO:setup() successfully completed in 0.78s...............
2023-12-17 21:08:59,266:INFO:Initializing compare_models()
2023-12-17 21:08:59,266:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A7CF55720>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000022A7CF55720>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-12-17 21:08:59,266:INFO:Checking exceptions
2023-12-17 21:08:59,269:INFO:Preparing display monitor
2023-12-17 21:08:59,273:INFO:Initializing Logistic Regression
2023-12-17 21:08:59,273:INFO:Total runtime is 0.0 minutes
2023-12-17 21:08:59,273:INFO:SubProcess create_model() called ==================================
2023-12-17 21:08:59,273:INFO:Initializing create_model()
2023-12-17 21:08:59,273:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A7CF55720>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A2BA14E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-17 21:08:59,273:INFO:Checking exceptions
2023-12-17 21:08:59,273:INFO:Importing libraries
2023-12-17 21:08:59,273:INFO:Copying training dataset
2023-12-17 21:08:59,277:INFO:Defining folds
2023-12-17 21:08:59,278:INFO:Declaring metric variables
2023-12-17 21:08:59,278:INFO:Importing untrained model
2023-12-17 21:08:59,278:INFO:Logistic Regression Imported successfully
2023-12-17 21:08:59,278:INFO:Starting cross validation
2023-12-17 21:08:59,278:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-17 21:09:01,691:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:01,692:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:01,713:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:01,713:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:01,725:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:01,725:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:01,726:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:01,734:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:01,734:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:01,748:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:01,761:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:01,770:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:01,862:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:01,869:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:01,881:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:01,888:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:01,892:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:01,899:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:01,900:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:01,907:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:01,938:INFO:Calculating mean and std
2023-12-17 21:09:01,941:INFO:Creating metrics dataframe
2023-12-17 21:09:01,944:INFO:Uploading results into container
2023-12-17 21:09:01,944:INFO:Uploading model into container now
2023-12-17 21:09:01,945:INFO:_master_model_container: 1
2023-12-17 21:09:01,945:INFO:_display_container: 2
2023-12-17 21:09:01,945:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2191, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-17 21:09:01,945:INFO:create_model() successfully completed......................................
2023-12-17 21:09:01,980:INFO:SubProcess create_model() end ==================================
2023-12-17 21:09:01,980:INFO:Creating metrics dataframe
2023-12-17 21:09:01,982:INFO:Initializing K Neighbors Classifier
2023-12-17 21:09:01,982:INFO:Total runtime is 0.04515689214070638 minutes
2023-12-17 21:09:01,982:INFO:SubProcess create_model() called ==================================
2023-12-17 21:09:01,982:INFO:Initializing create_model()
2023-12-17 21:09:01,982:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A7CF55720>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A2BA14E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-17 21:09:01,982:INFO:Checking exceptions
2023-12-17 21:09:01,982:INFO:Importing libraries
2023-12-17 21:09:01,982:INFO:Copying training dataset
2023-12-17 21:09:01,986:INFO:Defining folds
2023-12-17 21:09:01,986:INFO:Declaring metric variables
2023-12-17 21:09:01,987:INFO:Importing untrained model
2023-12-17 21:09:01,987:INFO:K Neighbors Classifier Imported successfully
2023-12-17 21:09:01,987:INFO:Starting cross validation
2023-12-17 21:09:01,987:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-17 21:09:03,775:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:03,784:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:03,785:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:03,785:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:03,796:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:03,797:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:03,806:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:03,807:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:03,807:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:03,818:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:03,819:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:03,828:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:03,828:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:03,839:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:03,869:INFO:Calculating mean and std
2023-12-17 21:09:03,870:INFO:Creating metrics dataframe
2023-12-17 21:09:03,872:INFO:Uploading results into container
2023-12-17 21:09:03,872:INFO:Uploading model into container now
2023-12-17 21:09:03,872:INFO:_master_model_container: 2
2023-12-17 21:09:03,873:INFO:_display_container: 2
2023-12-17 21:09:03,873:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-12-17 21:09:03,873:INFO:create_model() successfully completed......................................
2023-12-17 21:09:03,912:INFO:SubProcess create_model() end ==================================
2023-12-17 21:09:03,913:INFO:Creating metrics dataframe
2023-12-17 21:09:03,915:INFO:Initializing Naive Bayes
2023-12-17 21:09:03,915:INFO:Total runtime is 0.07736579974492391 minutes
2023-12-17 21:09:03,915:INFO:SubProcess create_model() called ==================================
2023-12-17 21:09:03,915:INFO:Initializing create_model()
2023-12-17 21:09:03,915:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A7CF55720>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A2BA14E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-17 21:09:03,915:INFO:Checking exceptions
2023-12-17 21:09:03,915:INFO:Importing libraries
2023-12-17 21:09:03,915:INFO:Copying training dataset
2023-12-17 21:09:03,920:INFO:Defining folds
2023-12-17 21:09:03,920:INFO:Declaring metric variables
2023-12-17 21:09:03,920:INFO:Importing untrained model
2023-12-17 21:09:03,920:INFO:Naive Bayes Imported successfully
2023-12-17 21:09:03,920:INFO:Starting cross validation
2023-12-17 21:09:03,921:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-17 21:09:05,480:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:05,481:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:05,481:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:05,483:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:05,486:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:05,500:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:05,501:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:05,501:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:05,504:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:05,507:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:05,513:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:05,513:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:05,514:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:05,517:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:05,519:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:05,522:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:05,522:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:05,522:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:05,526:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:05,528:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:05,559:INFO:Calculating mean and std
2023-12-17 21:09:05,560:INFO:Creating metrics dataframe
2023-12-17 21:09:05,563:INFO:Uploading results into container
2023-12-17 21:09:05,564:INFO:Uploading model into container now
2023-12-17 21:09:05,564:INFO:_master_model_container: 3
2023-12-17 21:09:05,564:INFO:_display_container: 2
2023-12-17 21:09:05,564:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-12-17 21:09:05,564:INFO:create_model() successfully completed......................................
2023-12-17 21:09:05,607:INFO:SubProcess create_model() end ==================================
2023-12-17 21:09:05,608:INFO:Creating metrics dataframe
2023-12-17 21:09:05,610:INFO:Initializing Decision Tree Classifier
2023-12-17 21:09:05,610:INFO:Total runtime is 0.10560982624689738 minutes
2023-12-17 21:09:05,610:INFO:SubProcess create_model() called ==================================
2023-12-17 21:09:05,610:INFO:Initializing create_model()
2023-12-17 21:09:05,610:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A7CF55720>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A2BA14E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-17 21:09:05,610:INFO:Checking exceptions
2023-12-17 21:09:05,610:INFO:Importing libraries
2023-12-17 21:09:05,610:INFO:Copying training dataset
2023-12-17 21:09:05,615:INFO:Defining folds
2023-12-17 21:09:05,615:INFO:Declaring metric variables
2023-12-17 21:09:05,615:INFO:Importing untrained model
2023-12-17 21:09:05,615:INFO:Decision Tree Classifier Imported successfully
2023-12-17 21:09:05,615:INFO:Starting cross validation
2023-12-17 21:09:05,616:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-17 21:09:07,265:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:07,269:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:07,269:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:07,270:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:07,276:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:07,288:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:07,291:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:07,292:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:07,292:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:07,298:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:07,310:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:07,313:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:07,314:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:07,315:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:07,321:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:07,362:INFO:Calculating mean and std
2023-12-17 21:09:07,364:INFO:Creating metrics dataframe
2023-12-17 21:09:07,367:INFO:Uploading results into container
2023-12-17 21:09:07,367:INFO:Uploading model into container now
2023-12-17 21:09:07,367:INFO:_master_model_container: 4
2023-12-17 21:09:07,367:INFO:_display_container: 2
2023-12-17 21:09:07,367:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2191, splitter='best')
2023-12-17 21:09:07,369:INFO:create_model() successfully completed......................................
2023-12-17 21:09:07,405:INFO:SubProcess create_model() end ==================================
2023-12-17 21:09:07,406:INFO:Creating metrics dataframe
2023-12-17 21:09:07,408:INFO:Initializing SVM - Linear Kernel
2023-12-17 21:09:07,408:INFO:Total runtime is 0.13559203545252482 minutes
2023-12-17 21:09:07,408:INFO:SubProcess create_model() called ==================================
2023-12-17 21:09:07,408:INFO:Initializing create_model()
2023-12-17 21:09:07,408:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A7CF55720>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A2BA14E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-17 21:09:07,408:INFO:Checking exceptions
2023-12-17 21:09:07,408:INFO:Importing libraries
2023-12-17 21:09:07,408:INFO:Copying training dataset
2023-12-17 21:09:07,413:INFO:Defining folds
2023-12-17 21:09:07,413:INFO:Declaring metric variables
2023-12-17 21:09:07,413:INFO:Importing untrained model
2023-12-17 21:09:07,413:INFO:SVM - Linear Kernel Imported successfully
2023-12-17 21:09:07,414:INFO:Starting cross validation
2023-12-17 21:09:07,414:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-17 21:09:08,711:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-17 21:09:08,727:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:08,761:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:08,775:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:08,785:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:08,817:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-17 21:09:08,826:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:08,844:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-17 21:09:08,848:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:08,853:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:08,861:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:08,870:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:08,876:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:08,889:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:08,897:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:08,929:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-17 21:09:08,938:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:08,958:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:08,970:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:08,978:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:09,008:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-17 21:09:09,015:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:09,035:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:09,046:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:09,053:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:09,090:INFO:Calculating mean and std
2023-12-17 21:09:09,090:INFO:Creating metrics dataframe
2023-12-17 21:09:09,092:INFO:Uploading results into container
2023-12-17 21:09:09,092:INFO:Uploading model into container now
2023-12-17 21:09:09,092:INFO:_master_model_container: 5
2023-12-17 21:09:09,092:INFO:_display_container: 2
2023-12-17 21:09:09,093:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2191, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-12-17 21:09:09,093:INFO:create_model() successfully completed......................................
2023-12-17 21:09:09,124:INFO:SubProcess create_model() end ==================================
2023-12-17 21:09:09,124:INFO:Creating metrics dataframe
2023-12-17 21:09:09,126:INFO:Initializing Ridge Classifier
2023-12-17 21:09:09,126:INFO:Total runtime is 0.164216947555542 minutes
2023-12-17 21:09:09,126:INFO:SubProcess create_model() called ==================================
2023-12-17 21:09:09,127:INFO:Initializing create_model()
2023-12-17 21:09:09,127:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A7CF55720>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A2BA14E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-17 21:09:09,127:INFO:Checking exceptions
2023-12-17 21:09:09,127:INFO:Importing libraries
2023-12-17 21:09:09,127:INFO:Copying training dataset
2023-12-17 21:09:09,131:INFO:Defining folds
2023-12-17 21:09:09,131:INFO:Declaring metric variables
2023-12-17 21:09:09,131:INFO:Importing untrained model
2023-12-17 21:09:09,131:INFO:Ridge Classifier Imported successfully
2023-12-17 21:09:09,132:INFO:Starting cross validation
2023-12-17 21:09:09,132:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-17 21:09:09,283:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-17 21:09:09,291:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:09,298:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-17 21:09:09,299:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-17 21:09:09,303:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-17 21:09:09,306:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-17 21:09:09,307:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:09,308:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:09,311:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:09,313:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:09,314:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:09,327:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:09,328:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:09,329:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:09,332:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:09,336:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:09,336:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:09,340:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:09,341:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:09,345:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:09,348:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:09,349:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:09,350:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:09,353:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:09,357:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:09,391:INFO:Calculating mean and std
2023-12-17 21:09:09,391:INFO:Creating metrics dataframe
2023-12-17 21:09:09,393:INFO:Uploading results into container
2023-12-17 21:09:09,393:INFO:Uploading model into container now
2023-12-17 21:09:09,394:INFO:_master_model_container: 6
2023-12-17 21:09:09,394:INFO:_display_container: 2
2023-12-17 21:09:09,394:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2191, solver='auto',
                tol=0.0001)
2023-12-17 21:09:09,394:INFO:create_model() successfully completed......................................
2023-12-17 21:09:09,430:INFO:SubProcess create_model() end ==================================
2023-12-17 21:09:09,430:INFO:Creating metrics dataframe
2023-12-17 21:09:09,432:INFO:Initializing Random Forest Classifier
2023-12-17 21:09:09,432:INFO:Total runtime is 0.16931695540746053 minutes
2023-12-17 21:09:09,432:INFO:SubProcess create_model() called ==================================
2023-12-17 21:09:09,432:INFO:Initializing create_model()
2023-12-17 21:09:09,432:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A7CF55720>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A2BA14E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-17 21:09:09,432:INFO:Checking exceptions
2023-12-17 21:09:09,432:INFO:Importing libraries
2023-12-17 21:09:09,432:INFO:Copying training dataset
2023-12-17 21:09:09,437:INFO:Defining folds
2023-12-17 21:09:09,437:INFO:Declaring metric variables
2023-12-17 21:09:09,437:INFO:Importing untrained model
2023-12-17 21:09:09,437:INFO:Random Forest Classifier Imported successfully
2023-12-17 21:09:09,437:INFO:Starting cross validation
2023-12-17 21:09:09,438:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-17 21:09:11,201:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:11,293:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:11,342:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:11,343:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:11,355:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:11,355:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:11,392:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:11,393:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:11,427:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:11,435:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:11,445:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:11,472:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:11,683:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:11,704:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:11,724:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:11,763:INFO:Calculating mean and std
2023-12-17 21:09:11,765:INFO:Creating metrics dataframe
2023-12-17 21:09:11,771:INFO:Uploading results into container
2023-12-17 21:09:11,771:INFO:Uploading model into container now
2023-12-17 21:09:11,771:INFO:_master_model_container: 7
2023-12-17 21:09:11,771:INFO:_display_container: 2
2023-12-17 21:09:11,772:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2191, verbose=0, warm_start=False)
2023-12-17 21:09:11,772:INFO:create_model() successfully completed......................................
2023-12-17 21:09:11,809:INFO:SubProcess create_model() end ==================================
2023-12-17 21:09:11,809:INFO:Creating metrics dataframe
2023-12-17 21:09:11,811:INFO:Initializing Quadratic Discriminant Analysis
2023-12-17 21:09:11,812:INFO:Total runtime is 0.20896841684977213 minutes
2023-12-17 21:09:11,812:INFO:SubProcess create_model() called ==================================
2023-12-17 21:09:11,812:INFO:Initializing create_model()
2023-12-17 21:09:11,812:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A7CF55720>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A2BA14E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-17 21:09:11,812:INFO:Checking exceptions
2023-12-17 21:09:11,812:INFO:Importing libraries
2023-12-17 21:09:11,812:INFO:Copying training dataset
2023-12-17 21:09:11,816:INFO:Defining folds
2023-12-17 21:09:11,816:INFO:Declaring metric variables
2023-12-17 21:09:11,816:INFO:Importing untrained model
2023-12-17 21:09:11,816:INFO:Quadratic Discriminant Analysis Imported successfully
2023-12-17 21:09:11,817:INFO:Starting cross validation
2023-12-17 21:09:11,817:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-17 21:09:11,943:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-17 21:09:11,943:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-17 21:09:11,943:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-17 21:09:11,945:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-17 21:09:12,009:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:12,010:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:12,010:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:12,010:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:12,020:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:12,031:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:12,032:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:12,032:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:12,032:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:12,043:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:12,054:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:12,054:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:12,054:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:12,055:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:12,067:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:12,111:INFO:Calculating mean and std
2023-12-17 21:09:12,111:INFO:Creating metrics dataframe
2023-12-17 21:09:12,113:INFO:Uploading results into container
2023-12-17 21:09:12,113:INFO:Uploading model into container now
2023-12-17 21:09:12,113:INFO:_master_model_container: 8
2023-12-17 21:09:12,113:INFO:_display_container: 2
2023-12-17 21:09:12,113:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-12-17 21:09:12,114:INFO:create_model() successfully completed......................................
2023-12-17 21:09:12,148:INFO:SubProcess create_model() end ==================================
2023-12-17 21:09:12,148:INFO:Creating metrics dataframe
2023-12-17 21:09:12,150:INFO:Initializing Ada Boost Classifier
2023-12-17 21:09:12,151:INFO:Total runtime is 0.21463714838027953 minutes
2023-12-17 21:09:12,151:INFO:SubProcess create_model() called ==================================
2023-12-17 21:09:12,151:INFO:Initializing create_model()
2023-12-17 21:09:12,151:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A7CF55720>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A2BA14E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-17 21:09:12,151:INFO:Checking exceptions
2023-12-17 21:09:12,151:INFO:Importing libraries
2023-12-17 21:09:12,151:INFO:Copying training dataset
2023-12-17 21:09:12,156:INFO:Defining folds
2023-12-17 21:09:12,156:INFO:Declaring metric variables
2023-12-17 21:09:12,156:INFO:Importing untrained model
2023-12-17 21:09:12,156:INFO:Ada Boost Classifier Imported successfully
2023-12-17 21:09:12,156:INFO:Starting cross validation
2023-12-17 21:09:12,157:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-17 21:09:13,184:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:13,185:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:13,201:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:13,207:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:13,207:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:13,218:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:13,220:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:13,222:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:13,229:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:13,229:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:13,239:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:13,240:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:13,243:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:13,252:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:13,253:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:13,261:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:13,262:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:13,293:INFO:Calculating mean and std
2023-12-17 21:09:13,293:INFO:Creating metrics dataframe
2023-12-17 21:09:13,295:INFO:Uploading results into container
2023-12-17 21:09:13,295:INFO:Uploading model into container now
2023-12-17 21:09:13,295:INFO:_master_model_container: 9
2023-12-17 21:09:13,295:INFO:_display_container: 2
2023-12-17 21:09:13,296:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2191)
2023-12-17 21:09:13,296:INFO:create_model() successfully completed......................................
2023-12-17 21:09:13,330:INFO:SubProcess create_model() end ==================================
2023-12-17 21:09:13,330:INFO:Creating metrics dataframe
2023-12-17 21:09:13,332:INFO:Initializing Gradient Boosting Classifier
2023-12-17 21:09:13,332:INFO:Total runtime is 0.2343094229698181 minutes
2023-12-17 21:09:13,333:INFO:SubProcess create_model() called ==================================
2023-12-17 21:09:13,333:INFO:Initializing create_model()
2023-12-17 21:09:13,333:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A7CF55720>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A2BA14E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-17 21:09:13,333:INFO:Checking exceptions
2023-12-17 21:09:13,333:INFO:Importing libraries
2023-12-17 21:09:13,333:INFO:Copying training dataset
2023-12-17 21:09:13,338:INFO:Defining folds
2023-12-17 21:09:13,338:INFO:Declaring metric variables
2023-12-17 21:09:13,338:INFO:Importing untrained model
2023-12-17 21:09:13,338:INFO:Gradient Boosting Classifier Imported successfully
2023-12-17 21:09:13,338:INFO:Starting cross validation
2023-12-17 21:09:13,339:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-17 21:09:24,967:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:24,992:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:25,017:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:25,031:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:25,039:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:25,057:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:25,065:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:25,082:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:25,091:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:25,109:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:25,134:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:25,147:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:25,158:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:25,170:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:25,193:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:25,225:INFO:Calculating mean and std
2023-12-17 21:09:25,225:INFO:Creating metrics dataframe
2023-12-17 21:09:25,227:INFO:Uploading results into container
2023-12-17 21:09:25,228:INFO:Uploading model into container now
2023-12-17 21:09:25,228:INFO:_master_model_container: 10
2023-12-17 21:09:25,228:INFO:_display_container: 2
2023-12-17 21:09:25,228:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2191, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-17 21:09:25,228:INFO:create_model() successfully completed......................................
2023-12-17 21:09:25,262:INFO:SubProcess create_model() end ==================================
2023-12-17 21:09:25,263:INFO:Creating metrics dataframe
2023-12-17 21:09:25,265:INFO:Initializing Linear Discriminant Analysis
2023-12-17 21:09:25,265:INFO:Total runtime is 0.4332070549329122 minutes
2023-12-17 21:09:25,265:INFO:SubProcess create_model() called ==================================
2023-12-17 21:09:25,266:INFO:Initializing create_model()
2023-12-17 21:09:25,266:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A7CF55720>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A2BA14E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-17 21:09:25,266:INFO:Checking exceptions
2023-12-17 21:09:25,266:INFO:Importing libraries
2023-12-17 21:09:25,266:INFO:Copying training dataset
2023-12-17 21:09:25,270:INFO:Defining folds
2023-12-17 21:09:25,270:INFO:Declaring metric variables
2023-12-17 21:09:25,271:INFO:Importing untrained model
2023-12-17 21:09:25,271:INFO:Linear Discriminant Analysis Imported successfully
2023-12-17 21:09:25,271:INFO:Starting cross validation
2023-12-17 21:09:25,271:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-17 21:09:25,461:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:25,478:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:25,479:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:25,487:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:25,489:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:25,495:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:25,504:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:25,505:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:25,506:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:25,513:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:25,516:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:25,520:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:25,522:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:25,522:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:25,529:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:25,531:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:25,532:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:25,537:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:25,539:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:25,548:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:25,592:INFO:Calculating mean and std
2023-12-17 21:09:25,592:INFO:Creating metrics dataframe
2023-12-17 21:09:25,595:INFO:Uploading results into container
2023-12-17 21:09:25,595:INFO:Uploading model into container now
2023-12-17 21:09:25,595:INFO:_master_model_container: 11
2023-12-17 21:09:25,595:INFO:_display_container: 2
2023-12-17 21:09:25,596:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-12-17 21:09:25,596:INFO:create_model() successfully completed......................................
2023-12-17 21:09:25,632:INFO:SubProcess create_model() end ==================================
2023-12-17 21:09:25,632:INFO:Creating metrics dataframe
2023-12-17 21:09:25,635:INFO:Initializing Extra Trees Classifier
2023-12-17 21:09:25,635:INFO:Total runtime is 0.43937251170476277 minutes
2023-12-17 21:09:25,635:INFO:SubProcess create_model() called ==================================
2023-12-17 21:09:25,636:INFO:Initializing create_model()
2023-12-17 21:09:25,636:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A7CF55720>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A2BA14E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-17 21:09:25,636:INFO:Checking exceptions
2023-12-17 21:09:25,636:INFO:Importing libraries
2023-12-17 21:09:25,636:INFO:Copying training dataset
2023-12-17 21:09:25,641:INFO:Defining folds
2023-12-17 21:09:25,641:INFO:Declaring metric variables
2023-12-17 21:09:25,641:INFO:Importing untrained model
2023-12-17 21:09:25,641:INFO:Extra Trees Classifier Imported successfully
2023-12-17 21:09:25,642:INFO:Starting cross validation
2023-12-17 21:09:25,642:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-17 21:09:27,779:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:27,789:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:27,808:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:27,845:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:27,861:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:27,868:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:27,893:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:27,934:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:27,948:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:27,956:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:27,957:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:27,987:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:28,222:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:28,262:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:28,301:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:28,362:INFO:Calculating mean and std
2023-12-17 21:09:28,363:INFO:Creating metrics dataframe
2023-12-17 21:09:28,367:INFO:Uploading results into container
2023-12-17 21:09:28,367:INFO:Uploading model into container now
2023-12-17 21:09:28,368:INFO:_master_model_container: 12
2023-12-17 21:09:28,368:INFO:_display_container: 2
2023-12-17 21:09:28,368:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2191, verbose=0, warm_start=False)
2023-12-17 21:09:28,368:INFO:create_model() successfully completed......................................
2023-12-17 21:09:28,441:INFO:SubProcess create_model() end ==================================
2023-12-17 21:09:28,441:INFO:Creating metrics dataframe
2023-12-17 21:09:28,445:INFO:Initializing Light Gradient Boosting Machine
2023-12-17 21:09:28,445:INFO:Total runtime is 0.48620868523915606 minutes
2023-12-17 21:09:28,445:INFO:SubProcess create_model() called ==================================
2023-12-17 21:09:28,445:INFO:Initializing create_model()
2023-12-17 21:09:28,445:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A7CF55720>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A2BA14E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-17 21:09:28,445:INFO:Checking exceptions
2023-12-17 21:09:28,445:INFO:Importing libraries
2023-12-17 21:09:28,445:INFO:Copying training dataset
2023-12-17 21:09:28,452:INFO:Defining folds
2023-12-17 21:09:28,452:INFO:Declaring metric variables
2023-12-17 21:09:28,452:INFO:Importing untrained model
2023-12-17 21:09:28,453:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-17 21:09:28,453:INFO:Starting cross validation
2023-12-17 21:09:28,454:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-17 21:09:31,453:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:31,503:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:31,523:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:31,546:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:31,564:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:31,584:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:31,602:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:31,603:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:31,613:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:31,663:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:31,666:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:31,715:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:31,826:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:31,870:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:31,907:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:31,951:INFO:Calculating mean and std
2023-12-17 21:09:31,951:INFO:Creating metrics dataframe
2023-12-17 21:09:31,954:INFO:Uploading results into container
2023-12-17 21:09:31,954:INFO:Uploading model into container now
2023-12-17 21:09:31,955:INFO:_master_model_container: 13
2023-12-17 21:09:31,955:INFO:_display_container: 2
2023-12-17 21:09:31,955:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2191, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-17 21:09:31,955:INFO:create_model() successfully completed......................................
2023-12-17 21:09:31,992:INFO:SubProcess create_model() end ==================================
2023-12-17 21:09:31,992:INFO:Creating metrics dataframe
2023-12-17 21:09:31,995:INFO:Initializing Dummy Classifier
2023-12-17 21:09:31,995:INFO:Total runtime is 0.5453617612520854 minutes
2023-12-17 21:09:31,996:INFO:SubProcess create_model() called ==================================
2023-12-17 21:09:31,996:INFO:Initializing create_model()
2023-12-17 21:09:31,996:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A7CF55720>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A2BA14E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-17 21:09:31,996:INFO:Checking exceptions
2023-12-17 21:09:31,996:INFO:Importing libraries
2023-12-17 21:09:31,996:INFO:Copying training dataset
2023-12-17 21:09:32,001:INFO:Defining folds
2023-12-17 21:09:32,001:INFO:Declaring metric variables
2023-12-17 21:09:32,001:INFO:Importing untrained model
2023-12-17 21:09:32,002:INFO:Dummy Classifier Imported successfully
2023-12-17 21:09:32,002:INFO:Starting cross validation
2023-12-17 21:09:32,003:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-17 21:09:32,194:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:32,200:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:32,207:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:32,207:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:32,210:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:32,221:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:32,227:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:32,234:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:32,234:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:32,236:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:32,237:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:32,242:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:32,247:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:32,250:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:32,250:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:32,253:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:32,253:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-17 21:09:32,260:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:32,261:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:32,264:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-17 21:09:32,315:INFO:Calculating mean and std
2023-12-17 21:09:32,316:INFO:Creating metrics dataframe
2023-12-17 21:09:32,318:INFO:Uploading results into container
2023-12-17 21:09:32,318:INFO:Uploading model into container now
2023-12-17 21:09:32,319:INFO:_master_model_container: 14
2023-12-17 21:09:32,319:INFO:_display_container: 2
2023-12-17 21:09:32,319:INFO:DummyClassifier(constant=None, random_state=2191, strategy='prior')
2023-12-17 21:09:32,319:INFO:create_model() successfully completed......................................
2023-12-17 21:09:32,356:INFO:SubProcess create_model() end ==================================
2023-12-17 21:09:32,356:INFO:Creating metrics dataframe
2023-12-17 21:09:32,360:INFO:Initializing create_model()
2023-12-17 21:09:32,360:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A7CF55720>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2191, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-17 21:09:32,360:INFO:Checking exceptions
2023-12-17 21:09:32,361:INFO:Importing libraries
2023-12-17 21:09:32,361:INFO:Copying training dataset
2023-12-17 21:09:32,366:INFO:Defining folds
2023-12-17 21:09:32,366:INFO:Declaring metric variables
2023-12-17 21:09:32,366:INFO:Importing untrained model
2023-12-17 21:09:32,366:INFO:Declaring custom model
2023-12-17 21:09:32,367:INFO:Logistic Regression Imported successfully
2023-12-17 21:09:32,367:INFO:Cross validation set to False
2023-12-17 21:09:32,367:INFO:Fitting Model
2023-12-17 21:09:32,877:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2191, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-17 21:09:32,877:INFO:create_model() successfully completed......................................
2023-12-17 21:09:32,914:INFO:Initializing create_model()
2023-12-17 21:09:32,914:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A7CF55720>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-17 21:09:32,914:INFO:Checking exceptions
2023-12-17 21:09:32,914:INFO:Importing libraries
2023-12-17 21:09:32,915:INFO:Copying training dataset
2023-12-17 21:09:32,919:INFO:Defining folds
2023-12-17 21:09:32,919:INFO:Declaring metric variables
2023-12-17 21:09:32,919:INFO:Importing untrained model
2023-12-17 21:09:32,919:INFO:Declaring custom model
2023-12-17 21:09:32,920:INFO:Naive Bayes Imported successfully
2023-12-17 21:09:32,920:INFO:Cross validation set to False
2023-12-17 21:09:32,920:INFO:Fitting Model
2023-12-17 21:09:33,004:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-12-17 21:09:33,004:INFO:create_model() successfully completed......................................
2023-12-17 21:09:33,038:INFO:Initializing create_model()
2023-12-17 21:09:33,038:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A7CF55720>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2191, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-17 21:09:33,038:INFO:Checking exceptions
2023-12-17 21:09:33,038:INFO:Importing libraries
2023-12-17 21:09:33,038:INFO:Copying training dataset
2023-12-17 21:09:33,043:INFO:Defining folds
2023-12-17 21:09:33,043:INFO:Declaring metric variables
2023-12-17 21:09:33,043:INFO:Importing untrained model
2023-12-17 21:09:33,043:INFO:Declaring custom model
2023-12-17 21:09:33,043:INFO:Ridge Classifier Imported successfully
2023-12-17 21:09:33,044:INFO:Cross validation set to False
2023-12-17 21:09:33,044:INFO:Fitting Model
2023-12-17 21:09:33,133:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2191, solver='auto',
                tol=0.0001)
2023-12-17 21:09:33,134:INFO:create_model() successfully completed......................................
2023-12-17 21:09:33,179:INFO:_master_model_container: 14
2023-12-17 21:09:33,179:INFO:_display_container: 2
2023-12-17 21:09:33,179:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2191, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), GaussianNB(priors=None, var_smoothing=1e-09), RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2191, solver='auto',
                tol=0.0001)]
2023-12-17 21:09:33,180:INFO:compare_models() successfully completed......................................
2023-12-18 08:24:40,341:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:24:40,341:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:24:40,341:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:24:40,341:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:24:41,457:INFO:PyCaret ClassificationExperiment
2023-12-18 08:24:41,457:INFO:Logging name: clf-default-name
2023-12-18 08:24:41,457:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-18 08:24:41,457:INFO:version 3.2.0
2023-12-18 08:24:41,457:INFO:Initializing setup()
2023-12-18 08:24:41,457:INFO:self.USI: 5f8a
2023-12-18 08:24:41,457:INFO:self._variable_keys: {'gpu_param', 'gpu_n_jobs_param', 'n_jobs_param', 'fold_groups_param', 'X_train', 'seed', 'pipeline', 'y_test', 'USI', 'X_test', 'fold_generator', 'fix_imbalance', 'memory', '_available_plots', 'exp_id', 'is_multiclass', 'fold_shuffle_param', 'html_param', 'X', 'logging_param', 'target_param', 'y_train', 'log_plots_param', 'idx', 'y', 'exp_name_log', '_ml_usecase', 'data'}
2023-12-18 08:24:41,457:INFO:Checking environment
2023-12-18 08:24:41,457:INFO:python_version: 3.10.4
2023-12-18 08:24:41,457:INFO:python_build: ('tags/v3.10.4:9d38120', 'Mar 23 2022 23:13:41')
2023-12-18 08:24:41,457:INFO:machine: AMD64
2023-12-18 08:24:41,466:INFO:platform: Windows-10-10.0.19045-SP0
2023-12-18 08:24:41,469:INFO:Memory: svmem(total=34029125632, available=18145685504, percent=46.7, used=15883440128, free=18145685504)
2023-12-18 08:24:41,469:INFO:Physical Core: 14
2023-12-18 08:24:41,469:INFO:Logical Core: 20
2023-12-18 08:24:41,469:INFO:Checking libraries
2023-12-18 08:24:41,469:INFO:System:
2023-12-18 08:24:41,469:INFO:    python: 3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit (AMD64)]
2023-12-18 08:24:41,469:INFO:executable: C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\python.exe
2023-12-18 08:24:41,469:INFO:   machine: Windows-10-10.0.19045-SP0
2023-12-18 08:24:41,469:INFO:PyCaret required dependencies:
2023-12-18 08:24:41,505:INFO:                 pip: 22.0.4
2023-12-18 08:24:41,506:INFO:          setuptools: 58.1.0
2023-12-18 08:24:41,506:INFO:             pycaret: 3.2.0
2023-12-18 08:24:41,506:INFO:             IPython: 8.18.1
2023-12-18 08:24:41,506:INFO:          ipywidgets: 8.1.1
2023-12-18 08:24:41,506:INFO:                tqdm: 4.66.1
2023-12-18 08:24:41,506:INFO:               numpy: 1.25.2
2023-12-18 08:24:41,506:INFO:              pandas: 1.5.3
2023-12-18 08:24:41,506:INFO:              jinja2: 3.1.2
2023-12-18 08:24:41,506:INFO:               scipy: 1.10.1
2023-12-18 08:24:41,506:INFO:              joblib: 1.3.2
2023-12-18 08:24:41,506:INFO:             sklearn: 1.2.2
2023-12-18 08:24:41,506:INFO:                pyod: 1.1.2
2023-12-18 08:24:41,506:INFO:            imblearn: 0.11.0
2023-12-18 08:24:41,506:INFO:   category_encoders: 2.6.3
2023-12-18 08:24:41,506:INFO:            lightgbm: 4.1.0
2023-12-18 08:24:41,506:INFO:               numba: 0.58.1
2023-12-18 08:24:41,506:INFO:            requests: 2.31.0
2023-12-18 08:24:41,506:INFO:          matplotlib: 3.6.0
2023-12-18 08:24:41,506:INFO:          scikitplot: 0.3.7
2023-12-18 08:24:41,506:INFO:         yellowbrick: 1.5
2023-12-18 08:24:41,506:INFO:              plotly: 5.18.0
2023-12-18 08:24:41,506:INFO:    plotly-resampler: Not installed
2023-12-18 08:24:41,506:INFO:             kaleido: 0.2.1
2023-12-18 08:24:41,506:INFO:           schemdraw: 0.15
2023-12-18 08:24:41,506:INFO:         statsmodels: 0.14.1
2023-12-18 08:24:41,506:INFO:              sktime: 0.21.1
2023-12-18 08:24:41,506:INFO:               tbats: 1.1.3
2023-12-18 08:24:41,506:INFO:            pmdarima: 2.0.4
2023-12-18 08:24:41,506:INFO:              psutil: 5.9.7
2023-12-18 08:24:41,506:INFO:          markupsafe: 2.1.3
2023-12-18 08:24:41,506:INFO:             pickle5: Not installed
2023-12-18 08:24:41,506:INFO:         cloudpickle: 3.0.0
2023-12-18 08:24:41,506:INFO:         deprecation: 2.1.0
2023-12-18 08:24:41,506:INFO:              xxhash: 3.4.1
2023-12-18 08:24:41,506:INFO:           wurlitzer: Not installed
2023-12-18 08:24:41,506:INFO:PyCaret optional dependencies:
2023-12-18 08:24:41,515:INFO:                shap: Not installed
2023-12-18 08:24:41,515:INFO:           interpret: Not installed
2023-12-18 08:24:41,515:INFO:                umap: Not installed
2023-12-18 08:24:41,515:INFO:     ydata_profiling: Not installed
2023-12-18 08:24:41,515:INFO:  explainerdashboard: Not installed
2023-12-18 08:24:41,515:INFO:             autoviz: Not installed
2023-12-18 08:24:41,515:INFO:           fairlearn: Not installed
2023-12-18 08:24:41,515:INFO:          deepchecks: Not installed
2023-12-18 08:24:41,515:INFO:             xgboost: Not installed
2023-12-18 08:24:41,515:INFO:            catboost: Not installed
2023-12-18 08:24:41,515:INFO:              kmodes: Not installed
2023-12-18 08:24:41,515:INFO:             mlxtend: Not installed
2023-12-18 08:24:41,515:INFO:       statsforecast: Not installed
2023-12-18 08:24:41,515:INFO:        tune_sklearn: Not installed
2023-12-18 08:24:41,515:INFO:                 ray: Not installed
2023-12-18 08:24:41,515:INFO:            hyperopt: Not installed
2023-12-18 08:24:41,515:INFO:              optuna: Not installed
2023-12-18 08:24:41,515:INFO:               skopt: Not installed
2023-12-18 08:24:41,515:INFO:              mlflow: Not installed
2023-12-18 08:24:41,515:INFO:              gradio: Not installed
2023-12-18 08:24:41,515:INFO:             fastapi: Not installed
2023-12-18 08:24:41,515:INFO:             uvicorn: Not installed
2023-12-18 08:24:41,515:INFO:              m2cgen: Not installed
2023-12-18 08:24:41,515:INFO:           evidently: Not installed
2023-12-18 08:24:41,515:INFO:               fugue: Not installed
2023-12-18 08:24:41,515:INFO:           streamlit: Not installed
2023-12-18 08:24:41,515:INFO:             prophet: Not installed
2023-12-18 08:24:41,515:INFO:None
2023-12-18 08:24:41,515:INFO:Set up data.
2023-12-18 08:24:41,529:INFO:Set up folding strategy.
2023-12-18 08:24:41,529:INFO:Set up train/test split.
2023-12-18 08:24:41,553:INFO:Set up index.
2023-12-18 08:24:41,554:INFO:Assigning column types.
2023-12-18 08:24:41,556:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-18 08:24:41,581:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 08:24:41,583:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:24:41,602:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:24:41,602:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:24:41,626:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 08:24:41,627:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:24:41,642:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:24:41,642:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:24:41,642:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-18 08:24:41,669:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:24:41,683:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:24:41,683:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:24:41,706:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:24:41,721:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:24:41,721:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:24:41,721:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-18 08:24:41,759:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:24:41,759:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:24:41,808:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:24:41,808:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:24:41,818:INFO:Preparing preprocessing pipeline...
2023-12-18 08:24:41,819:INFO:Set up label encoding.
2023-12-18 08:24:41,819:INFO:Set up date feature engineering.
2023-12-18 08:24:41,819:INFO:Set up simple imputation.
2023-12-18 08:24:41,822:INFO:Set up encoding of categorical features.
2023-12-18 08:24:41,822:INFO:Set up column name cleaning.
2023-12-18 08:24:41,937:INFO:Finished creating preprocessing pipeline.
2023-12-18 08:24:41,944:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MAXIMI~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['tmsp'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_i...
                 TransformerWrapper(exclude=None, include=['country', 'card'],
                                    transformer=OneHotEncoder(cols=['country',
                                                                    'card'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-18 08:24:41,944:INFO:Creating final display dataframe.
2023-12-18 08:24:42,194:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               5214
1                        Target                                                PSP
2                   Target type                                         Multiclass
3                Target mapping  Goldcard: 0, Moneycard: 1, Simplecard: 2, UK_C...
4           Original data shape                                         (50410, 8)
5        Transformed data shape                                        (50410, 14)
6   Transformed train set shape                                        (35287, 14)
7    Transformed test set shape                                        (15123, 14)
8              Numeric features                                                  4
9                 Date features                                                  1
10         Categorical features                                                  2
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                  5
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               5f8a
2023-12-18 08:24:42,237:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:24:42,237:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:24:42,276:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:24:42,276:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:24:42,277:INFO:setup() successfully completed in 0.82s...............
2023-12-18 08:25:49,945:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:25:49,945:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:25:49,945:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:25:49,945:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:25:50,452:INFO:PyCaret ClassificationExperiment
2023-12-18 08:25:50,452:INFO:Logging name: clf-default-name
2023-12-18 08:25:50,452:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-18 08:25:50,452:INFO:version 3.2.0
2023-12-18 08:25:50,452:INFO:Initializing setup()
2023-12-18 08:25:50,452:INFO:self.USI: c8df
2023-12-18 08:25:50,452:INFO:self._variable_keys: {'logging_param', 'target_param', 'X_test', 'y_train', 'USI', 'data', 'X', 'n_jobs_param', 'gpu_param', 'exp_id', 'fold_generator', 'pipeline', 'fold_shuffle_param', 'memory', 'X_train', 'is_multiclass', 'html_param', '_ml_usecase', 'idx', 'y', 'gpu_n_jobs_param', '_available_plots', 'fix_imbalance', 'fold_groups_param', 'y_test', 'log_plots_param', 'seed', 'exp_name_log'}
2023-12-18 08:25:50,452:INFO:Checking environment
2023-12-18 08:25:50,452:INFO:python_version: 3.10.4
2023-12-18 08:25:50,452:INFO:python_build: ('tags/v3.10.4:9d38120', 'Mar 23 2022 23:13:41')
2023-12-18 08:25:50,452:INFO:machine: AMD64
2023-12-18 08:25:50,460:INFO:platform: Windows-10-10.0.19045-SP0
2023-12-18 08:25:50,464:INFO:Memory: svmem(total=34029125632, available=18058702848, percent=46.9, used=15970422784, free=18058702848)
2023-12-18 08:25:50,464:INFO:Physical Core: 14
2023-12-18 08:25:50,464:INFO:Logical Core: 20
2023-12-18 08:25:50,464:INFO:Checking libraries
2023-12-18 08:25:50,464:INFO:System:
2023-12-18 08:25:50,464:INFO:    python: 3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit (AMD64)]
2023-12-18 08:25:50,464:INFO:executable: C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\python.exe
2023-12-18 08:25:50,464:INFO:   machine: Windows-10-10.0.19045-SP0
2023-12-18 08:25:50,464:INFO:PyCaret required dependencies:
2023-12-18 08:25:50,476:INFO:                 pip: 22.0.4
2023-12-18 08:25:50,476:INFO:          setuptools: 58.1.0
2023-12-18 08:25:50,476:INFO:             pycaret: 3.2.0
2023-12-18 08:25:50,476:INFO:             IPython: 8.18.1
2023-12-18 08:25:50,476:INFO:          ipywidgets: 8.1.1
2023-12-18 08:25:50,476:INFO:                tqdm: 4.66.1
2023-12-18 08:25:50,476:INFO:               numpy: 1.25.2
2023-12-18 08:25:50,476:INFO:              pandas: 1.5.3
2023-12-18 08:25:50,476:INFO:              jinja2: 3.1.2
2023-12-18 08:25:50,476:INFO:               scipy: 1.10.1
2023-12-18 08:25:50,476:INFO:              joblib: 1.3.2
2023-12-18 08:25:50,476:INFO:             sklearn: 1.2.2
2023-12-18 08:25:50,476:INFO:                pyod: 1.1.2
2023-12-18 08:25:50,476:INFO:            imblearn: 0.11.0
2023-12-18 08:25:50,476:INFO:   category_encoders: 2.6.3
2023-12-18 08:25:50,476:INFO:            lightgbm: 4.1.0
2023-12-18 08:25:50,476:INFO:               numba: 0.58.1
2023-12-18 08:25:50,476:INFO:            requests: 2.31.0
2023-12-18 08:25:50,476:INFO:          matplotlib: 3.6.0
2023-12-18 08:25:50,476:INFO:          scikitplot: 0.3.7
2023-12-18 08:25:50,476:INFO:         yellowbrick: 1.5
2023-12-18 08:25:50,476:INFO:              plotly: 5.18.0
2023-12-18 08:25:50,476:INFO:    plotly-resampler: Not installed
2023-12-18 08:25:50,476:INFO:             kaleido: 0.2.1
2023-12-18 08:25:50,476:INFO:           schemdraw: 0.15
2023-12-18 08:25:50,477:INFO:         statsmodels: 0.14.1
2023-12-18 08:25:50,477:INFO:              sktime: 0.21.1
2023-12-18 08:25:50,477:INFO:               tbats: 1.1.3
2023-12-18 08:25:50,477:INFO:            pmdarima: 2.0.4
2023-12-18 08:25:50,477:INFO:              psutil: 5.9.7
2023-12-18 08:25:50,477:INFO:          markupsafe: 2.1.3
2023-12-18 08:25:50,477:INFO:             pickle5: Not installed
2023-12-18 08:25:50,477:INFO:         cloudpickle: 3.0.0
2023-12-18 08:25:50,477:INFO:         deprecation: 2.1.0
2023-12-18 08:25:50,477:INFO:              xxhash: 3.4.1
2023-12-18 08:25:50,477:INFO:           wurlitzer: Not installed
2023-12-18 08:25:50,477:INFO:PyCaret optional dependencies:
2023-12-18 08:25:50,486:INFO:                shap: Not installed
2023-12-18 08:25:50,486:INFO:           interpret: Not installed
2023-12-18 08:25:50,486:INFO:                umap: Not installed
2023-12-18 08:25:50,486:INFO:     ydata_profiling: Not installed
2023-12-18 08:25:50,486:INFO:  explainerdashboard: Not installed
2023-12-18 08:25:50,486:INFO:             autoviz: Not installed
2023-12-18 08:25:50,486:INFO:           fairlearn: Not installed
2023-12-18 08:25:50,486:INFO:          deepchecks: Not installed
2023-12-18 08:25:50,486:INFO:             xgboost: Not installed
2023-12-18 08:25:50,486:INFO:            catboost: Not installed
2023-12-18 08:25:50,486:INFO:              kmodes: Not installed
2023-12-18 08:25:50,486:INFO:             mlxtend: Not installed
2023-12-18 08:25:50,486:INFO:       statsforecast: Not installed
2023-12-18 08:25:50,486:INFO:        tune_sklearn: Not installed
2023-12-18 08:25:50,486:INFO:                 ray: Not installed
2023-12-18 08:25:50,486:INFO:            hyperopt: Not installed
2023-12-18 08:25:50,486:INFO:              optuna: Not installed
2023-12-18 08:25:50,486:INFO:               skopt: Not installed
2023-12-18 08:25:50,486:INFO:              mlflow: Not installed
2023-12-18 08:25:50,486:INFO:              gradio: Not installed
2023-12-18 08:25:50,486:INFO:             fastapi: Not installed
2023-12-18 08:25:50,486:INFO:             uvicorn: Not installed
2023-12-18 08:25:50,486:INFO:              m2cgen: Not installed
2023-12-18 08:25:50,486:INFO:           evidently: Not installed
2023-12-18 08:25:50,486:INFO:               fugue: Not installed
2023-12-18 08:25:50,486:INFO:           streamlit: Not installed
2023-12-18 08:25:50,486:INFO:             prophet: Not installed
2023-12-18 08:25:50,486:INFO:None
2023-12-18 08:25:50,486:INFO:Set up data.
2023-12-18 08:25:50,498:INFO:Set up folding strategy.
2023-12-18 08:25:50,498:INFO:Set up train/test split.
2023-12-18 08:25:50,519:INFO:Set up index.
2023-12-18 08:25:50,520:INFO:Assigning column types.
2023-12-18 08:25:50,522:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-18 08:25:50,544:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 08:25:50,546:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:25:50,564:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:25:50,565:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:25:50,586:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 08:25:50,587:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:25:50,600:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:25:50,600:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:25:50,600:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-18 08:25:50,623:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:25:50,637:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:25:50,637:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:25:50,659:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:25:50,672:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:25:50,673:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:25:50,673:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-18 08:25:50,708:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:25:50,708:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:25:50,744:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:25:50,744:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:25:50,746:INFO:Preparing preprocessing pipeline...
2023-12-18 08:25:50,746:INFO:Set up label encoding.
2023-12-18 08:25:50,747:INFO:Set up date feature engineering.
2023-12-18 08:25:50,747:INFO:Set up simple imputation.
2023-12-18 08:25:50,749:INFO:Set up encoding of categorical features.
2023-12-18 08:25:50,749:INFO:Set up column name cleaning.
2023-12-18 08:25:50,848:INFO:Finished creating preprocessing pipeline.
2023-12-18 08:25:50,852:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MAXIMI~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['tmsp'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_i...
                 TransformerWrapper(exclude=None, include=['country', 'card'],
                                    transformer=OneHotEncoder(cols=['country',
                                                                    'card'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-18 08:25:50,853:INFO:Creating final display dataframe.
2023-12-18 08:25:51,077:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               5893
1                        Target                                                PSP
2                   Target type                                         Multiclass
3                Target mapping  Goldcard: 0, Moneycard: 1, Simplecard: 2, UK_C...
4           Original data shape                                         (50410, 8)
5        Transformed data shape                                        (50410, 14)
6   Transformed train set shape                                        (35287, 14)
7    Transformed test set shape                                        (15123, 14)
8              Numeric features                                                  4
9                 Date features                                                  1
10         Categorical features                                                  2
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                  5
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               c8df
2023-12-18 08:25:51,116:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:25:51,117:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:25:51,153:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:25:51,154:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:25:51,154:INFO:setup() successfully completed in 0.7s...............
2023-12-18 08:25:51,154:INFO:Initializing get_config()
2023-12-18 08:25:51,154:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001795CC75690>, variable=X_train)
2023-12-18 08:25:51,154:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2023-12-18 08:25:51,164:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:321: UserWarning: Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-12-18 08:25:51,172:INFO:Variable:  returned as        Unnamed: 0                tmsp      country  ...  success  3D_secured    card
9309         9309 2019-01-10 06:14:37  Switzerland  ...        0           0  Master
46836       46836 2019-02-24 15:41:12      Austria  ...        0           1    Visa
6380         6380 2019-01-07 04:57:10      Germany  ...        0           1  Master
25942       25942 2019-01-31 13:13:50  Switzerland  ...        1           0  Master
43750       43750 2019-02-20 12:04:30  Switzerland  ...        0           1  Master
...           ...                 ...          ...  ...      ...         ...     ...
23740       23740 2019-01-28 21:49:18      Germany  ...        0           0  Master
25092       25092 2019-01-30 11:58:38      Germany  ...        0           0  Master
46628       46628 2019-02-24 07:11:42      Germany  ...        0           0    Visa
28229       28229 2019-02-02 19:05:03      Germany  ...        1           0  Master
4514         4514 2019-01-04 22:53:35      Austria  ...        1           1  Master

[35287 rows x 7 columns]
2023-12-18 08:25:51,172:INFO:get_config() successfully completed......................................
2023-12-18 08:26:25,498:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:26:25,498:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:26:25,498:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:26:25,498:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:26:26,017:INFO:PyCaret ClassificationExperiment
2023-12-18 08:26:26,017:INFO:Logging name: clf-default-name
2023-12-18 08:26:26,017:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-18 08:26:26,017:INFO:version 3.2.0
2023-12-18 08:26:26,017:INFO:Initializing setup()
2023-12-18 08:26:26,017:INFO:self.USI: ecb1
2023-12-18 08:26:26,017:INFO:self._variable_keys: {'idx', 'y', 'fold_groups_param', 'USI', 'target_param', 'fix_imbalance', 'gpu_n_jobs_param', '_ml_usecase', 'X_test', 'X', 'fold_shuffle_param', 'gpu_param', 'memory', 'data', 'exp_name_log', 'n_jobs_param', 'X_train', 'y_test', 'is_multiclass', 'fold_generator', '_available_plots', 'log_plots_param', 'pipeline', 'html_param', 'exp_id', 'y_train', 'logging_param', 'seed'}
2023-12-18 08:26:26,017:INFO:Checking environment
2023-12-18 08:26:26,017:INFO:python_version: 3.10.4
2023-12-18 08:26:26,017:INFO:python_build: ('tags/v3.10.4:9d38120', 'Mar 23 2022 23:13:41')
2023-12-18 08:26:26,017:INFO:machine: AMD64
2023-12-18 08:26:26,027:INFO:platform: Windows-10-10.0.19045-SP0
2023-12-18 08:26:26,031:INFO:Memory: svmem(total=34029125632, available=17805955072, percent=47.7, used=16223170560, free=17805955072)
2023-12-18 08:26:26,031:INFO:Physical Core: 14
2023-12-18 08:26:26,032:INFO:Logical Core: 20
2023-12-18 08:26:26,032:INFO:Checking libraries
2023-12-18 08:26:26,032:INFO:System:
2023-12-18 08:26:26,032:INFO:    python: 3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit (AMD64)]
2023-12-18 08:26:26,032:INFO:executable: C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\python.exe
2023-12-18 08:26:26,032:INFO:   machine: Windows-10-10.0.19045-SP0
2023-12-18 08:26:26,032:INFO:PyCaret required dependencies:
2023-12-18 08:26:26,044:INFO:                 pip: 22.0.4
2023-12-18 08:26:26,044:INFO:          setuptools: 58.1.0
2023-12-18 08:26:26,044:INFO:             pycaret: 3.2.0
2023-12-18 08:26:26,044:INFO:             IPython: 8.18.1
2023-12-18 08:26:26,044:INFO:          ipywidgets: 8.1.1
2023-12-18 08:26:26,044:INFO:                tqdm: 4.66.1
2023-12-18 08:26:26,044:INFO:               numpy: 1.25.2
2023-12-18 08:26:26,044:INFO:              pandas: 1.5.3
2023-12-18 08:26:26,044:INFO:              jinja2: 3.1.2
2023-12-18 08:26:26,044:INFO:               scipy: 1.10.1
2023-12-18 08:26:26,044:INFO:              joblib: 1.3.2
2023-12-18 08:26:26,044:INFO:             sklearn: 1.2.2
2023-12-18 08:26:26,044:INFO:                pyod: 1.1.2
2023-12-18 08:26:26,044:INFO:            imblearn: 0.11.0
2023-12-18 08:26:26,044:INFO:   category_encoders: 2.6.3
2023-12-18 08:26:26,044:INFO:            lightgbm: 4.1.0
2023-12-18 08:26:26,044:INFO:               numba: 0.58.1
2023-12-18 08:26:26,044:INFO:            requests: 2.31.0
2023-12-18 08:26:26,044:INFO:          matplotlib: 3.6.0
2023-12-18 08:26:26,044:INFO:          scikitplot: 0.3.7
2023-12-18 08:26:26,044:INFO:         yellowbrick: 1.5
2023-12-18 08:26:26,044:INFO:              plotly: 5.18.0
2023-12-18 08:26:26,044:INFO:    plotly-resampler: Not installed
2023-12-18 08:26:26,044:INFO:             kaleido: 0.2.1
2023-12-18 08:26:26,044:INFO:           schemdraw: 0.15
2023-12-18 08:26:26,044:INFO:         statsmodels: 0.14.1
2023-12-18 08:26:26,044:INFO:              sktime: 0.21.1
2023-12-18 08:26:26,044:INFO:               tbats: 1.1.3
2023-12-18 08:26:26,044:INFO:            pmdarima: 2.0.4
2023-12-18 08:26:26,044:INFO:              psutil: 5.9.7
2023-12-18 08:26:26,044:INFO:          markupsafe: 2.1.3
2023-12-18 08:26:26,044:INFO:             pickle5: Not installed
2023-12-18 08:26:26,044:INFO:         cloudpickle: 3.0.0
2023-12-18 08:26:26,044:INFO:         deprecation: 2.1.0
2023-12-18 08:26:26,044:INFO:              xxhash: 3.4.1
2023-12-18 08:26:26,044:INFO:           wurlitzer: Not installed
2023-12-18 08:26:26,044:INFO:PyCaret optional dependencies:
2023-12-18 08:26:26,054:INFO:                shap: Not installed
2023-12-18 08:26:26,054:INFO:           interpret: Not installed
2023-12-18 08:26:26,054:INFO:                umap: Not installed
2023-12-18 08:26:26,054:INFO:     ydata_profiling: Not installed
2023-12-18 08:26:26,054:INFO:  explainerdashboard: Not installed
2023-12-18 08:26:26,054:INFO:             autoviz: Not installed
2023-12-18 08:26:26,054:INFO:           fairlearn: Not installed
2023-12-18 08:26:26,054:INFO:          deepchecks: Not installed
2023-12-18 08:26:26,054:INFO:             xgboost: Not installed
2023-12-18 08:26:26,054:INFO:            catboost: Not installed
2023-12-18 08:26:26,054:INFO:              kmodes: Not installed
2023-12-18 08:26:26,054:INFO:             mlxtend: Not installed
2023-12-18 08:26:26,054:INFO:       statsforecast: Not installed
2023-12-18 08:26:26,054:INFO:        tune_sklearn: Not installed
2023-12-18 08:26:26,054:INFO:                 ray: Not installed
2023-12-18 08:26:26,054:INFO:            hyperopt: Not installed
2023-12-18 08:26:26,054:INFO:              optuna: Not installed
2023-12-18 08:26:26,054:INFO:               skopt: Not installed
2023-12-18 08:26:26,054:INFO:              mlflow: Not installed
2023-12-18 08:26:26,054:INFO:              gradio: Not installed
2023-12-18 08:26:26,054:INFO:             fastapi: Not installed
2023-12-18 08:26:26,054:INFO:             uvicorn: Not installed
2023-12-18 08:26:26,054:INFO:              m2cgen: Not installed
2023-12-18 08:26:26,054:INFO:           evidently: Not installed
2023-12-18 08:26:26,054:INFO:               fugue: Not installed
2023-12-18 08:26:26,054:INFO:           streamlit: Not installed
2023-12-18 08:26:26,054:INFO:             prophet: Not installed
2023-12-18 08:26:26,054:INFO:None
2023-12-18 08:26:26,054:INFO:Set up data.
2023-12-18 08:26:26,066:INFO:Set up folding strategy.
2023-12-18 08:26:26,066:INFO:Set up train/test split.
2023-12-18 08:26:26,089:INFO:Set up index.
2023-12-18 08:26:26,089:INFO:Assigning column types.
2023-12-18 08:26:26,091:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-18 08:26:26,115:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 08:26:26,117:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:26:26,135:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:26,135:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:26,158:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 08:26:26,158:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:26:26,172:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:26,172:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:26,172:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-18 08:26:26,195:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:26:26,209:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:26,209:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:26,232:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:26:26,246:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:26,246:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:26,247:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-18 08:26:26,283:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:26,283:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:26,320:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:26,320:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:26,321:INFO:Preparing preprocessing pipeline...
2023-12-18 08:26:26,323:INFO:Set up label encoding.
2023-12-18 08:26:26,323:INFO:Set up date feature engineering.
2023-12-18 08:26:26,323:INFO:Set up simple imputation.
2023-12-18 08:26:26,325:INFO:Set up encoding of categorical features.
2023-12-18 08:26:26,325:INFO:Set up column name cleaning.
2023-12-18 08:26:26,428:INFO:Finished creating preprocessing pipeline.
2023-12-18 08:26:26,433:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MAXIMI~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['tmsp'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_i...
                 TransformerWrapper(exclude=None, include=['country', 'card'],
                                    transformer=OneHotEncoder(cols=['country',
                                                                    'card'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-18 08:26:26,433:INFO:Creating final display dataframe.
2023-12-18 08:26:26,674:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               8379
1                        Target                                                PSP
2                   Target type                                         Multiclass
3                Target mapping  Goldcard: 0, Moneycard: 1, Simplecard: 2, UK_C...
4           Original data shape                                         (50410, 8)
5        Transformed data shape                                        (50410, 14)
6   Transformed train set shape                                        (35287, 14)
7    Transformed test set shape                                        (15123, 14)
8              Numeric features                                                  4
9                 Date features                                                  1
10         Categorical features                                                  2
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                  5
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               ecb1
2023-12-18 08:26:26,716:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:26,716:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:26,754:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:26,754:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:26,755:INFO:setup() successfully completed in 0.74s...............
2023-12-18 08:26:26,755:INFO:Initializing get_config()
2023-12-18 08:26:26,755:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F6812D9690>, variable=X_transformed)
2023-12-18 08:26:26,878:INFO:Variable: X returned as        Unnamed 0  tmsp_year  tmsp_month  ...  card_Visa  card_Master  card_Diners
31790    31790.0       2019           2  ...        1.0          0.0          0.0
35161    35161.0       2019           2  ...        0.0          1.0          0.0
12891    12891.0       2019           1  ...        0.0          0.0          1.0
750        750.0       2019           1  ...        1.0          0.0          0.0
47540    47540.0       2019           2  ...        0.0          1.0          0.0
...          ...        ...         ...  ...        ...          ...          ...
214        214.0       2019           1  ...        0.0          1.0          0.0
23320    23320.0       2019           1  ...        0.0          1.0          0.0
1769      1769.0       2019           1  ...        0.0          1.0          0.0
31021    31021.0       2019           2  ...        0.0          1.0          0.0
37027    37027.0       2019           2  ...        1.0          0.0          0.0

[50410 rows x 13 columns]
2023-12-18 08:26:26,878:INFO:get_config() successfully completed......................................
2023-12-18 08:26:58,460:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:26:58,460:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:26:58,460:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:26:58,460:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:26:58,977:INFO:PyCaret ClassificationExperiment
2023-12-18 08:26:58,977:INFO:Logging name: clf-default-name
2023-12-18 08:26:58,977:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-18 08:26:58,977:INFO:version 3.2.0
2023-12-18 08:26:58,977:INFO:Initializing setup()
2023-12-18 08:26:58,977:INFO:self.USI: 4cd8
2023-12-18 08:26:58,977:INFO:self._variable_keys: {'y', 'exp_id', 'X_test', 'html_param', 'log_plots_param', 'idx', 'exp_name_log', '_ml_usecase', 'fold_groups_param', 'y_test', 'USI', 'is_multiclass', 'y_train', 'X', '_available_plots', 'seed', 'pipeline', 'gpu_param', 'gpu_n_jobs_param', 'fold_generator', 'fold_shuffle_param', 'memory', 'data', 'fix_imbalance', 'X_train', 'target_param', 'logging_param', 'n_jobs_param'}
2023-12-18 08:26:58,977:INFO:Checking environment
2023-12-18 08:26:58,977:INFO:python_version: 3.10.4
2023-12-18 08:26:58,977:INFO:python_build: ('tags/v3.10.4:9d38120', 'Mar 23 2022 23:13:41')
2023-12-18 08:26:58,977:INFO:machine: AMD64
2023-12-18 08:26:58,985:INFO:platform: Windows-10-10.0.19045-SP0
2023-12-18 08:26:58,988:INFO:Memory: svmem(total=34029125632, available=17794965504, percent=47.7, used=16234160128, free=17794965504)
2023-12-18 08:26:58,989:INFO:Physical Core: 14
2023-12-18 08:26:58,989:INFO:Logical Core: 20
2023-12-18 08:26:58,989:INFO:Checking libraries
2023-12-18 08:26:58,989:INFO:System:
2023-12-18 08:26:58,989:INFO:    python: 3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit (AMD64)]
2023-12-18 08:26:58,989:INFO:executable: C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\python.exe
2023-12-18 08:26:58,989:INFO:   machine: Windows-10-10.0.19045-SP0
2023-12-18 08:26:58,989:INFO:PyCaret required dependencies:
2023-12-18 08:26:59,001:INFO:                 pip: 22.0.4
2023-12-18 08:26:59,001:INFO:          setuptools: 58.1.0
2023-12-18 08:26:59,001:INFO:             pycaret: 3.2.0
2023-12-18 08:26:59,001:INFO:             IPython: 8.18.1
2023-12-18 08:26:59,001:INFO:          ipywidgets: 8.1.1
2023-12-18 08:26:59,001:INFO:                tqdm: 4.66.1
2023-12-18 08:26:59,001:INFO:               numpy: 1.25.2
2023-12-18 08:26:59,001:INFO:              pandas: 1.5.3
2023-12-18 08:26:59,001:INFO:              jinja2: 3.1.2
2023-12-18 08:26:59,001:INFO:               scipy: 1.10.1
2023-12-18 08:26:59,001:INFO:              joblib: 1.3.2
2023-12-18 08:26:59,001:INFO:             sklearn: 1.2.2
2023-12-18 08:26:59,001:INFO:                pyod: 1.1.2
2023-12-18 08:26:59,001:INFO:            imblearn: 0.11.0
2023-12-18 08:26:59,001:INFO:   category_encoders: 2.6.3
2023-12-18 08:26:59,001:INFO:            lightgbm: 4.1.0
2023-12-18 08:26:59,001:INFO:               numba: 0.58.1
2023-12-18 08:26:59,001:INFO:            requests: 2.31.0
2023-12-18 08:26:59,002:INFO:          matplotlib: 3.6.0
2023-12-18 08:26:59,002:INFO:          scikitplot: 0.3.7
2023-12-18 08:26:59,002:INFO:         yellowbrick: 1.5
2023-12-18 08:26:59,002:INFO:              plotly: 5.18.0
2023-12-18 08:26:59,002:INFO:    plotly-resampler: Not installed
2023-12-18 08:26:59,002:INFO:             kaleido: 0.2.1
2023-12-18 08:26:59,002:INFO:           schemdraw: 0.15
2023-12-18 08:26:59,002:INFO:         statsmodels: 0.14.1
2023-12-18 08:26:59,002:INFO:              sktime: 0.21.1
2023-12-18 08:26:59,002:INFO:               tbats: 1.1.3
2023-12-18 08:26:59,002:INFO:            pmdarima: 2.0.4
2023-12-18 08:26:59,002:INFO:              psutil: 5.9.7
2023-12-18 08:26:59,002:INFO:          markupsafe: 2.1.3
2023-12-18 08:26:59,002:INFO:             pickle5: Not installed
2023-12-18 08:26:59,002:INFO:         cloudpickle: 3.0.0
2023-12-18 08:26:59,002:INFO:         deprecation: 2.1.0
2023-12-18 08:26:59,002:INFO:              xxhash: 3.4.1
2023-12-18 08:26:59,002:INFO:           wurlitzer: Not installed
2023-12-18 08:26:59,002:INFO:PyCaret optional dependencies:
2023-12-18 08:26:59,011:INFO:                shap: Not installed
2023-12-18 08:26:59,011:INFO:           interpret: Not installed
2023-12-18 08:26:59,011:INFO:                umap: Not installed
2023-12-18 08:26:59,011:INFO:     ydata_profiling: Not installed
2023-12-18 08:26:59,011:INFO:  explainerdashboard: Not installed
2023-12-18 08:26:59,011:INFO:             autoviz: Not installed
2023-12-18 08:26:59,011:INFO:           fairlearn: Not installed
2023-12-18 08:26:59,011:INFO:          deepchecks: Not installed
2023-12-18 08:26:59,011:INFO:             xgboost: Not installed
2023-12-18 08:26:59,011:INFO:            catboost: Not installed
2023-12-18 08:26:59,011:INFO:              kmodes: Not installed
2023-12-18 08:26:59,011:INFO:             mlxtend: Not installed
2023-12-18 08:26:59,011:INFO:       statsforecast: Not installed
2023-12-18 08:26:59,011:INFO:        tune_sklearn: Not installed
2023-12-18 08:26:59,011:INFO:                 ray: Not installed
2023-12-18 08:26:59,011:INFO:            hyperopt: Not installed
2023-12-18 08:26:59,011:INFO:              optuna: Not installed
2023-12-18 08:26:59,011:INFO:               skopt: Not installed
2023-12-18 08:26:59,011:INFO:              mlflow: Not installed
2023-12-18 08:26:59,011:INFO:              gradio: Not installed
2023-12-18 08:26:59,011:INFO:             fastapi: Not installed
2023-12-18 08:26:59,011:INFO:             uvicorn: Not installed
2023-12-18 08:26:59,011:INFO:              m2cgen: Not installed
2023-12-18 08:26:59,011:INFO:           evidently: Not installed
2023-12-18 08:26:59,011:INFO:               fugue: Not installed
2023-12-18 08:26:59,011:INFO:           streamlit: Not installed
2023-12-18 08:26:59,011:INFO:             prophet: Not installed
2023-12-18 08:26:59,011:INFO:None
2023-12-18 08:26:59,011:INFO:Set up data.
2023-12-18 08:26:59,024:INFO:Set up folding strategy.
2023-12-18 08:26:59,024:INFO:Set up train/test split.
2023-12-18 08:26:59,047:INFO:Set up index.
2023-12-18 08:26:59,047:INFO:Assigning column types.
2023-12-18 08:26:59,050:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-18 08:26:59,073:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 08:26:59,074:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:26:59,092:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:59,093:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:59,115:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 08:26:59,115:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:26:59,129:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:59,129:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:59,129:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-18 08:26:59,152:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:26:59,166:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:59,166:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:59,186:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:26:59,200:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:59,200:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:59,200:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-18 08:26:59,235:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:59,235:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:59,270:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:59,271:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:59,272:INFO:Preparing preprocessing pipeline...
2023-12-18 08:26:59,273:INFO:Set up label encoding.
2023-12-18 08:26:59,273:INFO:Set up date feature engineering.
2023-12-18 08:26:59,273:INFO:Set up simple imputation.
2023-12-18 08:26:59,276:INFO:Set up encoding of categorical features.
2023-12-18 08:26:59,276:INFO:Set up column name cleaning.
2023-12-18 08:26:59,375:INFO:Finished creating preprocessing pipeline.
2023-12-18 08:26:59,379:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MAXIMI~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['tmsp'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_i...
                 TransformerWrapper(exclude=None, include=['country', 'card'],
                                    transformer=OneHotEncoder(cols=['country',
                                                                    'card'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-18 08:26:59,380:INFO:Creating final display dataframe.
2023-12-18 08:26:59,612:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               8865
1                        Target                                                PSP
2                   Target type                                         Multiclass
3                Target mapping  Goldcard: 0, Moneycard: 1, Simplecard: 2, UK_C...
4           Original data shape                                         (50410, 8)
5        Transformed data shape                                        (50410, 14)
6   Transformed train set shape                                        (35287, 14)
7    Transformed test set shape                                        (15123, 14)
8              Numeric features                                                  4
9                 Date features                                                  1
10         Categorical features                                                  2
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                  5
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               4cd8
2023-12-18 08:26:59,650:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:59,650:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:59,687:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:59,687:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:26:59,687:INFO:setup() successfully completed in 0.71s...............
2023-12-18 08:26:59,687:INFO:Initializing get_config()
2023-12-18 08:26:59,687:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018032005690>, variable=X)
2023-12-18 08:26:59,694:INFO:Variable:  returned as        Unnamed: 0                tmsp      country  ...  success  3D_secured    card
10376       10376 2019-01-11 09:36:07  Switzerland  ...        0           1    Visa
38699       38699 2019-02-14 00:23:16      Germany  ...        0           0  Diners
34696       34696 2019-02-09 07:53:49      Austria  ...        1           0  Master
30144       30144 2019-02-04 16:51:43      Germany  ...        0           0  Master
5385         5385 2019-01-05 22:56:50      Germany  ...        1           1  Diners
...           ...                 ...          ...  ...      ...         ...     ...
19571       19571 2019-01-23 05:16:55      Austria  ...        0           1  Diners
28934       28934 2019-02-03 12:51:16      Germany  ...        0           0  Diners
20707       20707 2019-01-24 13:50:03      Austria  ...        1           0  Master
20652       20652 2019-01-24 12:23:42      Germany  ...        0           0  Diners
37623       37623 2019-02-12 20:34:37      Germany  ...        0           0    Visa

[50410 rows x 7 columns]
2023-12-18 08:26:59,695:INFO:get_config() successfully completed......................................
2023-12-18 08:28:17,060:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:28:17,060:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:28:17,060:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:28:17,060:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:28:17,963:INFO:PyCaret ClassificationExperiment
2023-12-18 08:28:17,964:INFO:Logging name: clf-default-name
2023-12-18 08:28:17,964:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-18 08:28:17,964:INFO:version 3.2.0
2023-12-18 08:28:17,964:INFO:Initializing setup()
2023-12-18 08:28:17,964:INFO:self.USI: f9cd
2023-12-18 08:28:17,964:INFO:self._variable_keys: {'y_test', 'X_test', 'logging_param', 'X', 'log_plots_param', 'fold_generator', 'data', 'html_param', '_available_plots', 'USI', 'n_jobs_param', 'fix_imbalance', 'seed', 'idx', 'gpu_n_jobs_param', 'fold_groups_param', '_ml_usecase', 'fold_shuffle_param', 'X_train', 'exp_id', 'y', 'exp_name_log', 'pipeline', 'target_param', 'is_multiclass', 'memory', 'y_train', 'gpu_param'}
2023-12-18 08:28:17,964:INFO:Checking environment
2023-12-18 08:28:17,964:INFO:python_version: 3.10.4
2023-12-18 08:28:17,964:INFO:python_build: ('tags/v3.10.4:9d38120', 'Mar 23 2022 23:13:41')
2023-12-18 08:28:17,964:INFO:machine: AMD64
2023-12-18 08:28:17,974:INFO:platform: Windows-10-10.0.19045-SP0
2023-12-18 08:28:17,977:INFO:Memory: svmem(total=34029125632, available=17771741184, percent=47.8, used=16257384448, free=17771741184)
2023-12-18 08:28:17,977:INFO:Physical Core: 14
2023-12-18 08:28:17,977:INFO:Logical Core: 20
2023-12-18 08:28:17,977:INFO:Checking libraries
2023-12-18 08:28:17,977:INFO:System:
2023-12-18 08:28:17,977:INFO:    python: 3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit (AMD64)]
2023-12-18 08:28:17,977:INFO:executable: C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\python.exe
2023-12-18 08:28:17,977:INFO:   machine: Windows-10-10.0.19045-SP0
2023-12-18 08:28:17,977:INFO:PyCaret required dependencies:
2023-12-18 08:28:18,010:INFO:                 pip: 22.0.4
2023-12-18 08:28:18,010:INFO:          setuptools: 58.1.0
2023-12-18 08:28:18,011:INFO:             pycaret: 3.2.0
2023-12-18 08:28:18,011:INFO:             IPython: 8.18.1
2023-12-18 08:28:18,011:INFO:          ipywidgets: 8.1.1
2023-12-18 08:28:18,011:INFO:                tqdm: 4.66.1
2023-12-18 08:28:18,011:INFO:               numpy: 1.25.2
2023-12-18 08:28:18,011:INFO:              pandas: 1.5.3
2023-12-18 08:28:18,011:INFO:              jinja2: 3.1.2
2023-12-18 08:28:18,011:INFO:               scipy: 1.10.1
2023-12-18 08:28:18,011:INFO:              joblib: 1.3.2
2023-12-18 08:28:18,011:INFO:             sklearn: 1.2.2
2023-12-18 08:28:18,011:INFO:                pyod: 1.1.2
2023-12-18 08:28:18,011:INFO:            imblearn: 0.11.0
2023-12-18 08:28:18,011:INFO:   category_encoders: 2.6.3
2023-12-18 08:28:18,011:INFO:            lightgbm: 4.1.0
2023-12-18 08:28:18,011:INFO:               numba: 0.58.1
2023-12-18 08:28:18,011:INFO:            requests: 2.31.0
2023-12-18 08:28:18,011:INFO:          matplotlib: 3.6.0
2023-12-18 08:28:18,011:INFO:          scikitplot: 0.3.7
2023-12-18 08:28:18,011:INFO:         yellowbrick: 1.5
2023-12-18 08:28:18,011:INFO:              plotly: 5.18.0
2023-12-18 08:28:18,011:INFO:    plotly-resampler: Not installed
2023-12-18 08:28:18,011:INFO:             kaleido: 0.2.1
2023-12-18 08:28:18,011:INFO:           schemdraw: 0.15
2023-12-18 08:28:18,011:INFO:         statsmodels: 0.14.1
2023-12-18 08:28:18,011:INFO:              sktime: 0.21.1
2023-12-18 08:28:18,011:INFO:               tbats: 1.1.3
2023-12-18 08:28:18,011:INFO:            pmdarima: 2.0.4
2023-12-18 08:28:18,011:INFO:              psutil: 5.9.7
2023-12-18 08:28:18,011:INFO:          markupsafe: 2.1.3
2023-12-18 08:28:18,011:INFO:             pickle5: Not installed
2023-12-18 08:28:18,011:INFO:         cloudpickle: 3.0.0
2023-12-18 08:28:18,011:INFO:         deprecation: 2.1.0
2023-12-18 08:28:18,011:INFO:              xxhash: 3.4.1
2023-12-18 08:28:18,011:INFO:           wurlitzer: Not installed
2023-12-18 08:28:18,011:INFO:PyCaret optional dependencies:
2023-12-18 08:28:18,021:INFO:                shap: Not installed
2023-12-18 08:28:18,021:INFO:           interpret: Not installed
2023-12-18 08:28:18,021:INFO:                umap: Not installed
2023-12-18 08:28:18,021:INFO:     ydata_profiling: Not installed
2023-12-18 08:28:18,021:INFO:  explainerdashboard: Not installed
2023-12-18 08:28:18,021:INFO:             autoviz: Not installed
2023-12-18 08:28:18,021:INFO:           fairlearn: Not installed
2023-12-18 08:28:18,021:INFO:          deepchecks: Not installed
2023-12-18 08:28:18,021:INFO:             xgboost: Not installed
2023-12-18 08:28:18,021:INFO:            catboost: Not installed
2023-12-18 08:28:18,021:INFO:              kmodes: Not installed
2023-12-18 08:28:18,021:INFO:             mlxtend: Not installed
2023-12-18 08:28:18,021:INFO:       statsforecast: Not installed
2023-12-18 08:28:18,021:INFO:        tune_sklearn: Not installed
2023-12-18 08:28:18,021:INFO:                 ray: Not installed
2023-12-18 08:28:18,021:INFO:            hyperopt: Not installed
2023-12-18 08:28:18,021:INFO:              optuna: Not installed
2023-12-18 08:28:18,021:INFO:               skopt: Not installed
2023-12-18 08:28:18,021:INFO:              mlflow: Not installed
2023-12-18 08:28:18,021:INFO:              gradio: Not installed
2023-12-18 08:28:18,021:INFO:             fastapi: Not installed
2023-12-18 08:28:18,021:INFO:             uvicorn: Not installed
2023-12-18 08:28:18,021:INFO:              m2cgen: Not installed
2023-12-18 08:28:18,021:INFO:           evidently: Not installed
2023-12-18 08:28:18,021:INFO:               fugue: Not installed
2023-12-18 08:28:18,021:INFO:           streamlit: Not installed
2023-12-18 08:28:18,021:INFO:             prophet: Not installed
2023-12-18 08:28:18,021:INFO:None
2023-12-18 08:28:18,021:INFO:Set up data.
2023-12-18 08:28:18,034:INFO:Set up folding strategy.
2023-12-18 08:28:18,034:INFO:Set up train/test split.
2023-12-18 08:28:18,057:INFO:Set up index.
2023-12-18 08:28:18,057:INFO:Assigning column types.
2023-12-18 08:28:18,060:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-18 08:28:18,084:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 08:28:18,085:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:28:18,105:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:28:18,105:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:28:18,129:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 08:28:18,129:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:28:18,144:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:28:18,144:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:28:18,144:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-18 08:28:18,166:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:28:18,180:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:28:18,180:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:28:18,204:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:28:18,218:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:28:18,218:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:28:18,218:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-18 08:28:18,256:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:28:18,256:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:28:18,294:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:28:18,294:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:28:18,302:INFO:Preparing preprocessing pipeline...
2023-12-18 08:28:18,303:INFO:Set up label encoding.
2023-12-18 08:28:18,303:INFO:Set up date feature engineering.
2023-12-18 08:28:18,303:INFO:Set up simple imputation.
2023-12-18 08:28:18,305:INFO:Set up encoding of categorical features.
2023-12-18 08:28:18,306:INFO:Set up column name cleaning.
2023-12-18 08:28:18,418:INFO:Finished creating preprocessing pipeline.
2023-12-18 08:28:18,423:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MAXIMI~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['tmsp'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_i...
                 TransformerWrapper(exclude=None, include=['country', 'card'],
                                    transformer=OneHotEncoder(cols=['country',
                                                                    'card'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-18 08:28:18,423:INFO:Creating final display dataframe.
2023-12-18 08:28:18,670:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               8630
1                        Target                                                PSP
2                   Target type                                         Multiclass
3                Target mapping  Goldcard: 0, Moneycard: 1, Simplecard: 2, UK_C...
4           Original data shape                                         (50410, 8)
5        Transformed data shape                                        (50410, 14)
6   Transformed train set shape                                        (35287, 14)
7    Transformed test set shape                                        (15123, 14)
8              Numeric features                                                  4
9                 Date features                                                  1
10         Categorical features                                                  2
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                  5
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               f9cd
2023-12-18 08:28:18,673:ERROR:Data Failed with exception:
 No module named 'ydata_profiling'
No output to show, continue with modeling.
2023-12-18 08:28:18,712:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:28:18,713:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:28:18,753:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:28:18,754:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:28:18,754:INFO:setup() successfully completed in 0.79s...............
2023-12-18 08:30:16,025:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:30:16,025:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:30:16,025:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:30:16,025:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:30:16,531:INFO:PyCaret ClassificationExperiment
2023-12-18 08:30:16,531:INFO:Logging name: clf-default-name
2023-12-18 08:30:16,531:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-18 08:30:16,532:INFO:version 3.2.0
2023-12-18 08:30:16,532:INFO:Initializing setup()
2023-12-18 08:30:16,532:INFO:self.USI: bbde
2023-12-18 08:30:16,532:INFO:self._variable_keys: {'idx', 'X_test', '_ml_usecase', 'data', 'fold_shuffle_param', 'exp_id', 'html_param', 'exp_name_log', 'target_param', 'memory', 'is_multiclass', 'fix_imbalance', 'X_train', 'gpu_n_jobs_param', 'n_jobs_param', 'pipeline', 'X', 'y_train', 'fold_generator', 'fold_groups_param', 'USI', 'logging_param', 'seed', '_available_plots', 'y_test', 'y', 'log_plots_param', 'gpu_param'}
2023-12-18 08:30:16,532:INFO:Checking environment
2023-12-18 08:30:16,532:INFO:python_version: 3.10.4
2023-12-18 08:30:16,532:INFO:python_build: ('tags/v3.10.4:9d38120', 'Mar 23 2022 23:13:41')
2023-12-18 08:30:16,532:INFO:machine: AMD64
2023-12-18 08:30:16,540:INFO:platform: Windows-10-10.0.19045-SP0
2023-12-18 08:30:16,544:INFO:Memory: svmem(total=34029125632, available=17672454144, percent=48.1, used=16356671488, free=17672454144)
2023-12-18 08:30:16,544:INFO:Physical Core: 14
2023-12-18 08:30:16,544:INFO:Logical Core: 20
2023-12-18 08:30:16,544:INFO:Checking libraries
2023-12-18 08:30:16,544:INFO:System:
2023-12-18 08:30:16,544:INFO:    python: 3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit (AMD64)]
2023-12-18 08:30:16,544:INFO:executable: C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\python.exe
2023-12-18 08:30:16,544:INFO:   machine: Windows-10-10.0.19045-SP0
2023-12-18 08:30:16,544:INFO:PyCaret required dependencies:
2023-12-18 08:30:16,557:INFO:                 pip: 22.0.4
2023-12-18 08:30:16,557:INFO:          setuptools: 58.1.0
2023-12-18 08:30:16,557:INFO:             pycaret: 3.2.0
2023-12-18 08:30:16,557:INFO:             IPython: 8.18.1
2023-12-18 08:30:16,557:INFO:          ipywidgets: 8.1.1
2023-12-18 08:30:16,557:INFO:                tqdm: 4.66.1
2023-12-18 08:30:16,557:INFO:               numpy: 1.25.2
2023-12-18 08:30:16,557:INFO:              pandas: 1.5.3
2023-12-18 08:30:16,557:INFO:              jinja2: 3.1.2
2023-12-18 08:30:16,557:INFO:               scipy: 1.10.1
2023-12-18 08:30:16,557:INFO:              joblib: 1.3.2
2023-12-18 08:30:16,557:INFO:             sklearn: 1.2.2
2023-12-18 08:30:16,557:INFO:                pyod: 1.1.2
2023-12-18 08:30:16,557:INFO:            imblearn: 0.11.0
2023-12-18 08:30:16,557:INFO:   category_encoders: 2.6.3
2023-12-18 08:30:16,557:INFO:            lightgbm: 4.1.0
2023-12-18 08:30:16,557:INFO:               numba: 0.58.1
2023-12-18 08:30:16,557:INFO:            requests: 2.31.0
2023-12-18 08:30:16,557:INFO:          matplotlib: 3.6.0
2023-12-18 08:30:16,557:INFO:          scikitplot: 0.3.7
2023-12-18 08:30:16,557:INFO:         yellowbrick: 1.5
2023-12-18 08:30:16,557:INFO:              plotly: 5.18.0
2023-12-18 08:30:16,557:INFO:    plotly-resampler: Not installed
2023-12-18 08:30:16,557:INFO:             kaleido: 0.2.1
2023-12-18 08:30:16,557:INFO:           schemdraw: 0.15
2023-12-18 08:30:16,557:INFO:         statsmodels: 0.14.1
2023-12-18 08:30:16,557:INFO:              sktime: 0.21.1
2023-12-18 08:30:16,557:INFO:               tbats: 1.1.3
2023-12-18 08:30:16,557:INFO:            pmdarima: 2.0.4
2023-12-18 08:30:16,557:INFO:              psutil: 5.9.7
2023-12-18 08:30:16,557:INFO:          markupsafe: 2.1.3
2023-12-18 08:30:16,557:INFO:             pickle5: Not installed
2023-12-18 08:30:16,558:INFO:         cloudpickle: 3.0.0
2023-12-18 08:30:16,558:INFO:         deprecation: 2.1.0
2023-12-18 08:30:16,558:INFO:              xxhash: 3.4.1
2023-12-18 08:30:16,558:INFO:           wurlitzer: Not installed
2023-12-18 08:30:16,558:INFO:PyCaret optional dependencies:
2023-12-18 08:30:16,567:INFO:                shap: Not installed
2023-12-18 08:30:16,567:INFO:           interpret: Not installed
2023-12-18 08:30:16,567:INFO:                umap: Not installed
2023-12-18 08:30:16,567:INFO:     ydata_profiling: Not installed
2023-12-18 08:30:16,567:INFO:  explainerdashboard: Not installed
2023-12-18 08:30:16,567:INFO:             autoviz: Not installed
2023-12-18 08:30:16,567:INFO:           fairlearn: Not installed
2023-12-18 08:30:16,567:INFO:          deepchecks: Not installed
2023-12-18 08:30:16,567:INFO:             xgboost: Not installed
2023-12-18 08:30:16,567:INFO:            catboost: Not installed
2023-12-18 08:30:16,567:INFO:              kmodes: Not installed
2023-12-18 08:30:16,567:INFO:             mlxtend: Not installed
2023-12-18 08:30:16,568:INFO:       statsforecast: Not installed
2023-12-18 08:30:16,568:INFO:        tune_sklearn: Not installed
2023-12-18 08:30:16,568:INFO:                 ray: Not installed
2023-12-18 08:30:16,568:INFO:            hyperopt: Not installed
2023-12-18 08:30:16,568:INFO:              optuna: Not installed
2023-12-18 08:30:16,568:INFO:               skopt: Not installed
2023-12-18 08:30:16,568:INFO:              mlflow: Not installed
2023-12-18 08:30:16,568:INFO:              gradio: Not installed
2023-12-18 08:30:16,568:INFO:             fastapi: Not installed
2023-12-18 08:30:16,568:INFO:             uvicorn: Not installed
2023-12-18 08:30:16,568:INFO:              m2cgen: Not installed
2023-12-18 08:30:16,568:INFO:           evidently: Not installed
2023-12-18 08:30:16,568:INFO:               fugue: Not installed
2023-12-18 08:30:16,568:INFO:           streamlit: Not installed
2023-12-18 08:30:16,568:INFO:             prophet: Not installed
2023-12-18 08:30:16,568:INFO:None
2023-12-18 08:30:16,568:INFO:Set up data.
2023-12-18 08:30:16,581:INFO:Set up folding strategy.
2023-12-18 08:30:16,581:INFO:Set up train/test split.
2023-12-18 08:30:16,604:INFO:Set up index.
2023-12-18 08:30:16,604:INFO:Assigning column types.
2023-12-18 08:30:16,607:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-18 08:30:16,629:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 08:30:16,630:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:30:16,649:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:16,649:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:16,672:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 08:30:16,672:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:30:16,686:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:16,686:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:16,686:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-18 08:30:16,709:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:30:16,723:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:16,723:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:16,746:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:30:16,761:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:16,761:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:16,761:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-18 08:30:16,796:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:16,797:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:16,833:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:16,833:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:16,835:INFO:Preparing preprocessing pipeline...
2023-12-18 08:30:16,836:INFO:Set up label encoding.
2023-12-18 08:30:16,836:INFO:Set up date feature engineering.
2023-12-18 08:30:16,836:INFO:Set up simple imputation.
2023-12-18 08:30:16,838:INFO:Set up encoding of categorical features.
2023-12-18 08:30:16,839:INFO:Set up column name cleaning.
2023-12-18 08:30:16,938:INFO:Finished creating preprocessing pipeline.
2023-12-18 08:30:16,943:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MAXIMI~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['tmsp'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_i...
                 TransformerWrapper(exclude=None, include=['country', 'card'],
                                    transformer=OneHotEncoder(cols=['country',
                                                                    'card'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-18 08:30:16,943:INFO:Creating final display dataframe.
2023-12-18 08:30:17,178:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               6347
1                        Target                                                PSP
2                   Target type                                         Multiclass
3                Target mapping  Goldcard: 0, Moneycard: 1, Simplecard: 2, UK_C...
4           Original data shape                                         (50410, 8)
5        Transformed data shape                                        (50410, 14)
6   Transformed train set shape                                        (35287, 14)
7    Transformed test set shape                                        (15123, 14)
8              Numeric features                                                  4
9                 Date features                                                  1
10         Categorical features                                                  2
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                  5
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               bbde
2023-12-18 08:30:17,181:ERROR:Data Failed with exception:
 No module named 'ydata_profiling'
No output to show, continue with modeling.
2023-12-18 08:30:17,220:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:17,220:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:17,258:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:17,258:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:17,259:INFO:setup() successfully completed in 0.73s...............
2023-12-18 08:30:17,259:INFO:Initializing get_config()
2023-12-18 08:30:17,259:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EFAA0797B0>, variable=prep_pipe)
2023-12-18 08:30:54,444:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:30:54,444:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:30:54,444:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:30:54,444:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:30:54,964:INFO:PyCaret ClassificationExperiment
2023-12-18 08:30:54,964:INFO:Logging name: clf-default-name
2023-12-18 08:30:54,964:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-18 08:30:54,964:INFO:version 3.2.0
2023-12-18 08:30:54,964:INFO:Initializing setup()
2023-12-18 08:30:54,964:INFO:self.USI: 1986
2023-12-18 08:30:54,964:INFO:self._variable_keys: {'X_train', 'data', 'X', 'y_test', 'y', 'target_param', 'gpu_n_jobs_param', 'gpu_param', 'html_param', 'fold_generator', 'seed', 'X_test', 'memory', 'log_plots_param', 'fold_groups_param', 'y_train', 'exp_id', '_ml_usecase', 'exp_name_log', 'USI', 'idx', 'is_multiclass', 'n_jobs_param', 'fix_imbalance', 'logging_param', 'pipeline', 'fold_shuffle_param', '_available_plots'}
2023-12-18 08:30:54,964:INFO:Checking environment
2023-12-18 08:30:54,964:INFO:python_version: 3.10.4
2023-12-18 08:30:54,964:INFO:python_build: ('tags/v3.10.4:9d38120', 'Mar 23 2022 23:13:41')
2023-12-18 08:30:54,964:INFO:machine: AMD64
2023-12-18 08:30:54,972:INFO:platform: Windows-10-10.0.19045-SP0
2023-12-18 08:30:54,976:INFO:Memory: svmem(total=34029125632, available=17721434112, percent=47.9, used=16307691520, free=17721434112)
2023-12-18 08:30:54,976:INFO:Physical Core: 14
2023-12-18 08:30:54,976:INFO:Logical Core: 20
2023-12-18 08:30:54,976:INFO:Checking libraries
2023-12-18 08:30:54,976:INFO:System:
2023-12-18 08:30:54,976:INFO:    python: 3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit (AMD64)]
2023-12-18 08:30:54,976:INFO:executable: C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\python.exe
2023-12-18 08:30:54,976:INFO:   machine: Windows-10-10.0.19045-SP0
2023-12-18 08:30:54,976:INFO:PyCaret required dependencies:
2023-12-18 08:30:54,988:INFO:                 pip: 22.0.4
2023-12-18 08:30:54,988:INFO:          setuptools: 58.1.0
2023-12-18 08:30:54,988:INFO:             pycaret: 3.2.0
2023-12-18 08:30:54,988:INFO:             IPython: 8.18.1
2023-12-18 08:30:54,988:INFO:          ipywidgets: 8.1.1
2023-12-18 08:30:54,988:INFO:                tqdm: 4.66.1
2023-12-18 08:30:54,988:INFO:               numpy: 1.25.2
2023-12-18 08:30:54,988:INFO:              pandas: 1.5.3
2023-12-18 08:30:54,988:INFO:              jinja2: 3.1.2
2023-12-18 08:30:54,988:INFO:               scipy: 1.10.1
2023-12-18 08:30:54,988:INFO:              joblib: 1.3.2
2023-12-18 08:30:54,988:INFO:             sklearn: 1.2.2
2023-12-18 08:30:54,988:INFO:                pyod: 1.1.2
2023-12-18 08:30:54,988:INFO:            imblearn: 0.11.0
2023-12-18 08:30:54,988:INFO:   category_encoders: 2.6.3
2023-12-18 08:30:54,988:INFO:            lightgbm: 4.1.0
2023-12-18 08:30:54,988:INFO:               numba: 0.58.1
2023-12-18 08:30:54,988:INFO:            requests: 2.31.0
2023-12-18 08:30:54,988:INFO:          matplotlib: 3.6.0
2023-12-18 08:30:54,988:INFO:          scikitplot: 0.3.7
2023-12-18 08:30:54,988:INFO:         yellowbrick: 1.5
2023-12-18 08:30:54,988:INFO:              plotly: 5.18.0
2023-12-18 08:30:54,988:INFO:    plotly-resampler: Not installed
2023-12-18 08:30:54,988:INFO:             kaleido: 0.2.1
2023-12-18 08:30:54,988:INFO:           schemdraw: 0.15
2023-12-18 08:30:54,988:INFO:         statsmodels: 0.14.1
2023-12-18 08:30:54,988:INFO:              sktime: 0.21.1
2023-12-18 08:30:54,988:INFO:               tbats: 1.1.3
2023-12-18 08:30:54,988:INFO:            pmdarima: 2.0.4
2023-12-18 08:30:54,988:INFO:              psutil: 5.9.7
2023-12-18 08:30:54,989:INFO:          markupsafe: 2.1.3
2023-12-18 08:30:54,989:INFO:             pickle5: Not installed
2023-12-18 08:30:54,989:INFO:         cloudpickle: 3.0.0
2023-12-18 08:30:54,989:INFO:         deprecation: 2.1.0
2023-12-18 08:30:54,989:INFO:              xxhash: 3.4.1
2023-12-18 08:30:54,989:INFO:           wurlitzer: Not installed
2023-12-18 08:30:54,989:INFO:PyCaret optional dependencies:
2023-12-18 08:30:54,998:INFO:                shap: Not installed
2023-12-18 08:30:54,998:INFO:           interpret: Not installed
2023-12-18 08:30:54,998:INFO:                umap: Not installed
2023-12-18 08:30:54,998:INFO:     ydata_profiling: Not installed
2023-12-18 08:30:54,998:INFO:  explainerdashboard: Not installed
2023-12-18 08:30:54,998:INFO:             autoviz: Not installed
2023-12-18 08:30:54,998:INFO:           fairlearn: Not installed
2023-12-18 08:30:54,998:INFO:          deepchecks: Not installed
2023-12-18 08:30:54,998:INFO:             xgboost: Not installed
2023-12-18 08:30:54,998:INFO:            catboost: Not installed
2023-12-18 08:30:54,998:INFO:              kmodes: Not installed
2023-12-18 08:30:54,998:INFO:             mlxtend: Not installed
2023-12-18 08:30:54,998:INFO:       statsforecast: Not installed
2023-12-18 08:30:54,998:INFO:        tune_sklearn: Not installed
2023-12-18 08:30:54,998:INFO:                 ray: Not installed
2023-12-18 08:30:54,998:INFO:            hyperopt: Not installed
2023-12-18 08:30:54,998:INFO:              optuna: Not installed
2023-12-18 08:30:54,998:INFO:               skopt: Not installed
2023-12-18 08:30:54,998:INFO:              mlflow: Not installed
2023-12-18 08:30:54,998:INFO:              gradio: Not installed
2023-12-18 08:30:54,998:INFO:             fastapi: Not installed
2023-12-18 08:30:54,998:INFO:             uvicorn: Not installed
2023-12-18 08:30:54,998:INFO:              m2cgen: Not installed
2023-12-18 08:30:54,998:INFO:           evidently: Not installed
2023-12-18 08:30:54,998:INFO:               fugue: Not installed
2023-12-18 08:30:54,998:INFO:           streamlit: Not installed
2023-12-18 08:30:54,998:INFO:             prophet: Not installed
2023-12-18 08:30:54,998:INFO:None
2023-12-18 08:30:54,998:INFO:Set up data.
2023-12-18 08:30:55,010:INFO:Set up folding strategy.
2023-12-18 08:30:55,010:INFO:Set up train/test split.
2023-12-18 08:30:55,032:INFO:Set up index.
2023-12-18 08:30:55,032:INFO:Assigning column types.
2023-12-18 08:30:55,035:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-18 08:30:55,057:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 08:30:55,059:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:30:55,077:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:55,077:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:55,099:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 08:30:55,100:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:30:55,113:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:55,113:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:55,114:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-18 08:30:55,136:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:30:55,150:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:55,150:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:55,172:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:30:55,186:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:55,186:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:55,186:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-18 08:30:55,222:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:55,222:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:55,258:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:55,258:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:55,260:INFO:Preparing preprocessing pipeline...
2023-12-18 08:30:55,261:INFO:Set up label encoding.
2023-12-18 08:30:55,261:INFO:Set up date feature engineering.
2023-12-18 08:30:55,261:INFO:Set up simple imputation.
2023-12-18 08:30:55,263:INFO:Set up encoding of categorical features.
2023-12-18 08:30:55,264:INFO:Set up column name cleaning.
2023-12-18 08:30:55,363:INFO:Finished creating preprocessing pipeline.
2023-12-18 08:30:55,368:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MAXIMI~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['tmsp'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_i...
                 TransformerWrapper(exclude=None, include=['country', 'card'],
                                    transformer=OneHotEncoder(cols=['country',
                                                                    'card'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-18 08:30:55,368:INFO:Creating final display dataframe.
2023-12-18 08:30:55,599:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               6989
1                        Target                                                PSP
2                   Target type                                         Multiclass
3                Target mapping  Goldcard: 0, Moneycard: 1, Simplecard: 2, UK_C...
4           Original data shape                                         (50410, 8)
5        Transformed data shape                                        (50410, 14)
6   Transformed train set shape                                        (35287, 14)
7    Transformed test set shape                                        (15123, 14)
8              Numeric features                                                  4
9                 Date features                                                  1
10         Categorical features                                                  2
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                  5
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               1986
2023-12-18 08:30:55,602:ERROR:Data Failed with exception:
 No module named 'ydata_profiling'
No output to show, continue with modeling.
2023-12-18 08:30:55,637:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:55,637:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:55,674:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:55,674:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:30:55,675:INFO:setup() successfully completed in 0.71s...............
2023-12-18 08:30:55,675:INFO:Initializing get_config()
2023-12-18 08:30:55,675:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002706BD857B0>, variable=data)
2023-12-18 08:30:55,681:INFO:Variable:  returned as        Unnamed: 0                tmsp  ...    card         PSP
34736       34736 2019-02-09 09:08:03  ...  Diners  Simplecard
49866       49866 2019-02-28 07:49:38  ...  Master     UK_Card
11649       11649 2019-01-13 02:35:15  ...  Diners   Moneycard
20896       20896 2019-01-24 20:23:34  ...  Diners  Simplecard
19686       19686 2019-01-23 08:13:21  ...  Diners     UK_Card
...           ...                 ...  ...     ...         ...
37320       37320 2019-02-12 13:10:31  ...    Visa     UK_Card
1324         1324 2019-01-02 01:45:09  ...    Visa   Moneycard
40537       40537 2019-02-16 08:22:27  ...  Diners     UK_Card
14239       14239 2019-01-16 07:48:39  ...  Master   Moneycard
21781       21781 2019-01-26 01:07:14  ...  Master     UK_Card

[50410 rows x 8 columns]
2023-12-18 08:30:55,682:INFO:get_config() successfully completed......................................
2023-12-18 08:31:07,670:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:31:07,670:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:31:07,670:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:31:07,670:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:31:08,175:INFO:PyCaret ClassificationExperiment
2023-12-18 08:31:08,175:INFO:Logging name: clf-default-name
2023-12-18 08:31:08,175:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-18 08:31:08,175:INFO:version 3.2.0
2023-12-18 08:31:08,175:INFO:Initializing setup()
2023-12-18 08:31:08,175:INFO:self.USI: 4bff
2023-12-18 08:31:08,175:INFO:self._variable_keys: {'X', 'idx', '_available_plots', 'fold_groups_param', 'is_multiclass', 'html_param', 'exp_id', '_ml_usecase', 'logging_param', 'target_param', 'memory', 'fold_shuffle_param', 'n_jobs_param', 'pipeline', 'data', 'X_train', 'gpu_n_jobs_param', 'seed', 'fix_imbalance', 'y_test', 'X_test', 'gpu_param', 'exp_name_log', 'y_train', 'y', 'fold_generator', 'USI', 'log_plots_param'}
2023-12-18 08:31:08,175:INFO:Checking environment
2023-12-18 08:31:08,175:INFO:python_version: 3.10.4
2023-12-18 08:31:08,175:INFO:python_build: ('tags/v3.10.4:9d38120', 'Mar 23 2022 23:13:41')
2023-12-18 08:31:08,175:INFO:machine: AMD64
2023-12-18 08:31:08,184:INFO:platform: Windows-10-10.0.19045-SP0
2023-12-18 08:31:08,187:INFO:Memory: svmem(total=34029125632, available=17801715712, percent=47.7, used=16227409920, free=17801715712)
2023-12-18 08:31:08,188:INFO:Physical Core: 14
2023-12-18 08:31:08,188:INFO:Logical Core: 20
2023-12-18 08:31:08,188:INFO:Checking libraries
2023-12-18 08:31:08,188:INFO:System:
2023-12-18 08:31:08,188:INFO:    python: 3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit (AMD64)]
2023-12-18 08:31:08,188:INFO:executable: C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\python.exe
2023-12-18 08:31:08,188:INFO:   machine: Windows-10-10.0.19045-SP0
2023-12-18 08:31:08,188:INFO:PyCaret required dependencies:
2023-12-18 08:31:08,200:INFO:                 pip: 22.0.4
2023-12-18 08:31:08,201:INFO:          setuptools: 58.1.0
2023-12-18 08:31:08,201:INFO:             pycaret: 3.2.0
2023-12-18 08:31:08,201:INFO:             IPython: 8.18.1
2023-12-18 08:31:08,201:INFO:          ipywidgets: 8.1.1
2023-12-18 08:31:08,201:INFO:                tqdm: 4.66.1
2023-12-18 08:31:08,201:INFO:               numpy: 1.25.2
2023-12-18 08:31:08,201:INFO:              pandas: 1.5.3
2023-12-18 08:31:08,201:INFO:              jinja2: 3.1.2
2023-12-18 08:31:08,201:INFO:               scipy: 1.10.1
2023-12-18 08:31:08,201:INFO:              joblib: 1.3.2
2023-12-18 08:31:08,201:INFO:             sklearn: 1.2.2
2023-12-18 08:31:08,201:INFO:                pyod: 1.1.2
2023-12-18 08:31:08,201:INFO:            imblearn: 0.11.0
2023-12-18 08:31:08,201:INFO:   category_encoders: 2.6.3
2023-12-18 08:31:08,201:INFO:            lightgbm: 4.1.0
2023-12-18 08:31:08,201:INFO:               numba: 0.58.1
2023-12-18 08:31:08,201:INFO:            requests: 2.31.0
2023-12-18 08:31:08,201:INFO:          matplotlib: 3.6.0
2023-12-18 08:31:08,201:INFO:          scikitplot: 0.3.7
2023-12-18 08:31:08,201:INFO:         yellowbrick: 1.5
2023-12-18 08:31:08,201:INFO:              plotly: 5.18.0
2023-12-18 08:31:08,201:INFO:    plotly-resampler: Not installed
2023-12-18 08:31:08,201:INFO:             kaleido: 0.2.1
2023-12-18 08:31:08,201:INFO:           schemdraw: 0.15
2023-12-18 08:31:08,201:INFO:         statsmodels: 0.14.1
2023-12-18 08:31:08,201:INFO:              sktime: 0.21.1
2023-12-18 08:31:08,201:INFO:               tbats: 1.1.3
2023-12-18 08:31:08,201:INFO:            pmdarima: 2.0.4
2023-12-18 08:31:08,201:INFO:              psutil: 5.9.7
2023-12-18 08:31:08,201:INFO:          markupsafe: 2.1.3
2023-12-18 08:31:08,201:INFO:             pickle5: Not installed
2023-12-18 08:31:08,201:INFO:         cloudpickle: 3.0.0
2023-12-18 08:31:08,201:INFO:         deprecation: 2.1.0
2023-12-18 08:31:08,201:INFO:              xxhash: 3.4.1
2023-12-18 08:31:08,201:INFO:           wurlitzer: Not installed
2023-12-18 08:31:08,201:INFO:PyCaret optional dependencies:
2023-12-18 08:31:08,210:INFO:                shap: Not installed
2023-12-18 08:31:08,210:INFO:           interpret: Not installed
2023-12-18 08:31:08,210:INFO:                umap: Not installed
2023-12-18 08:31:08,210:INFO:     ydata_profiling: Not installed
2023-12-18 08:31:08,210:INFO:  explainerdashboard: Not installed
2023-12-18 08:31:08,210:INFO:             autoviz: Not installed
2023-12-18 08:31:08,210:INFO:           fairlearn: Not installed
2023-12-18 08:31:08,210:INFO:          deepchecks: Not installed
2023-12-18 08:31:08,210:INFO:             xgboost: Not installed
2023-12-18 08:31:08,210:INFO:            catboost: Not installed
2023-12-18 08:31:08,210:INFO:              kmodes: Not installed
2023-12-18 08:31:08,210:INFO:             mlxtend: Not installed
2023-12-18 08:31:08,211:INFO:       statsforecast: Not installed
2023-12-18 08:31:08,211:INFO:        tune_sklearn: Not installed
2023-12-18 08:31:08,211:INFO:                 ray: Not installed
2023-12-18 08:31:08,211:INFO:            hyperopt: Not installed
2023-12-18 08:31:08,211:INFO:              optuna: Not installed
2023-12-18 08:31:08,211:INFO:               skopt: Not installed
2023-12-18 08:31:08,211:INFO:              mlflow: Not installed
2023-12-18 08:31:08,211:INFO:              gradio: Not installed
2023-12-18 08:31:08,211:INFO:             fastapi: Not installed
2023-12-18 08:31:08,211:INFO:             uvicorn: Not installed
2023-12-18 08:31:08,211:INFO:              m2cgen: Not installed
2023-12-18 08:31:08,211:INFO:           evidently: Not installed
2023-12-18 08:31:08,211:INFO:               fugue: Not installed
2023-12-18 08:31:08,211:INFO:           streamlit: Not installed
2023-12-18 08:31:08,211:INFO:             prophet: Not installed
2023-12-18 08:31:08,211:INFO:None
2023-12-18 08:31:08,211:INFO:Set up data.
2023-12-18 08:31:08,224:INFO:Set up folding strategy.
2023-12-18 08:31:08,224:INFO:Set up train/test split.
2023-12-18 08:31:08,247:INFO:Set up index.
2023-12-18 08:31:08,247:INFO:Assigning column types.
2023-12-18 08:31:08,249:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-18 08:31:08,271:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 08:31:08,274:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:31:08,292:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:31:08,292:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:31:08,315:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 08:31:08,315:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:31:08,329:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:31:08,329:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:31:08,330:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-18 08:31:08,352:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:31:08,366:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:31:08,366:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:31:08,390:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:31:08,403:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:31:08,404:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:31:08,404:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-18 08:31:08,440:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:31:08,440:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:31:08,477:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:31:08,477:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:31:08,478:INFO:Preparing preprocessing pipeline...
2023-12-18 08:31:08,479:INFO:Set up label encoding.
2023-12-18 08:31:08,479:INFO:Set up date feature engineering.
2023-12-18 08:31:08,479:INFO:Set up simple imputation.
2023-12-18 08:31:08,482:INFO:Set up encoding of categorical features.
2023-12-18 08:31:08,482:INFO:Set up column name cleaning.
2023-12-18 08:31:08,581:INFO:Finished creating preprocessing pipeline.
2023-12-18 08:31:08,586:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MAXIMI~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['tmsp'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_i...
                 TransformerWrapper(exclude=None, include=['country', 'card'],
                                    transformer=OneHotEncoder(cols=['country',
                                                                    'card'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-18 08:31:08,586:INFO:Creating final display dataframe.
2023-12-18 08:31:08,816:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               1149
1                        Target                                                PSP
2                   Target type                                         Multiclass
3                Target mapping  Goldcard: 0, Moneycard: 1, Simplecard: 2, UK_C...
4           Original data shape                                         (50410, 8)
5        Transformed data shape                                        (50410, 14)
6   Transformed train set shape                                        (35287, 14)
7    Transformed test set shape                                        (15123, 14)
8              Numeric features                                                  4
9                 Date features                                                  1
10         Categorical features                                                  2
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                  5
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               4bff
2023-12-18 08:31:08,820:ERROR:Data Failed with exception:
 No module named 'ydata_profiling'
No output to show, continue with modeling.
2023-12-18 08:31:08,858:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:31:08,858:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:31:08,895:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:31:08,895:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:31:08,896:INFO:setup() successfully completed in 0.72s...............
2023-12-18 08:31:08,896:INFO:Initializing get_config()
2023-12-18 08:31:08,896:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022BFB465720>, variable=data)
2023-12-18 08:31:08,903:INFO:Variable:  returned as        Unnamed: 0                tmsp  ...    card         PSP
13066       13066 2019-01-15 00:29:23  ...  Master     UK_Card
9315         9315 2019-01-10 06:23:48  ...  Diners  Simplecard
13782       13782 2019-01-15 18:27:06  ...  Diners     UK_Card
42353       42353 2019-02-18 19:01:29  ...    Visa  Simplecard
19293       19293 2019-01-22 20:33:43  ...  Master     UK_Card
...           ...                 ...  ...     ...         ...
37445       37445 2019-02-12 16:21:20  ...  Master  Simplecard
16635       16635 2019-01-19 08:37:54  ...    Visa  Simplecard
45627       45627 2019-02-22 20:21:13  ...  Master   Moneycard
6676         6676 2019-01-07 12:56:22  ...    Visa     UK_Card
9708         9708 2019-01-10 17:06:39  ...  Master  Simplecard

[50410 rows x 8 columns]
2023-12-18 08:31:08,903:INFO:get_config() successfully completed......................................
2023-12-18 08:32:53,731:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:32:53,731:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:32:53,731:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:32:53,731:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:32:54,303:INFO:PyCaret ClassificationExperiment
2023-12-18 08:32:54,303:INFO:Logging name: clf-default-name
2023-12-18 08:32:54,303:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-18 08:32:54,303:INFO:version 3.2.0
2023-12-18 08:32:54,303:INFO:Initializing setup()
2023-12-18 08:32:54,303:INFO:self.USI: dcdd
2023-12-18 08:32:54,303:INFO:self._variable_keys: {'seed', 'exp_name_log', '_available_plots', 'X_test', 'idx', 'X_train', 'fold_shuffle_param', 'exp_id', 'logging_param', 'fold_generator', 'log_plots_param', 'gpu_param', '_ml_usecase', 'html_param', 'USI', 'pipeline', 'y_train', 'fix_imbalance', 'n_jobs_param', 'fold_groups_param', 'target_param', 'y', 'data', 'gpu_n_jobs_param', 'y_test', 'X', 'is_multiclass', 'memory'}
2023-12-18 08:32:54,303:INFO:Checking environment
2023-12-18 08:32:54,303:INFO:python_version: 3.10.4
2023-12-18 08:32:54,303:INFO:python_build: ('tags/v3.10.4:9d38120', 'Mar 23 2022 23:13:41')
2023-12-18 08:32:54,303:INFO:machine: AMD64
2023-12-18 08:32:54,312:INFO:platform: Windows-10-10.0.19045-SP0
2023-12-18 08:32:54,316:INFO:Memory: svmem(total=34029125632, available=17781833728, percent=47.7, used=16247291904, free=17781833728)
2023-12-18 08:32:54,316:INFO:Physical Core: 14
2023-12-18 08:32:54,316:INFO:Logical Core: 20
2023-12-18 08:32:54,316:INFO:Checking libraries
2023-12-18 08:32:54,317:INFO:System:
2023-12-18 08:32:54,317:INFO:    python: 3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit (AMD64)]
2023-12-18 08:32:54,317:INFO:executable: C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\python.exe
2023-12-18 08:32:54,317:INFO:   machine: Windows-10-10.0.19045-SP0
2023-12-18 08:32:54,317:INFO:PyCaret required dependencies:
2023-12-18 08:32:54,330:INFO:                 pip: 22.0.4
2023-12-18 08:32:54,330:INFO:          setuptools: 58.1.0
2023-12-18 08:32:54,330:INFO:             pycaret: 3.2.0
2023-12-18 08:32:54,330:INFO:             IPython: 8.18.1
2023-12-18 08:32:54,330:INFO:          ipywidgets: 8.1.1
2023-12-18 08:32:54,330:INFO:                tqdm: 4.66.1
2023-12-18 08:32:54,330:INFO:               numpy: 1.25.2
2023-12-18 08:32:54,330:INFO:              pandas: 1.5.3
2023-12-18 08:32:54,330:INFO:              jinja2: 3.1.2
2023-12-18 08:32:54,330:INFO:               scipy: 1.10.1
2023-12-18 08:32:54,330:INFO:              joblib: 1.3.2
2023-12-18 08:32:54,330:INFO:             sklearn: 1.2.2
2023-12-18 08:32:54,330:INFO:                pyod: 1.1.2
2023-12-18 08:32:54,330:INFO:            imblearn: 0.11.0
2023-12-18 08:32:54,330:INFO:   category_encoders: 2.6.3
2023-12-18 08:32:54,330:INFO:            lightgbm: 4.1.0
2023-12-18 08:32:54,330:INFO:               numba: 0.58.1
2023-12-18 08:32:54,330:INFO:            requests: 2.31.0
2023-12-18 08:32:54,330:INFO:          matplotlib: 3.6.0
2023-12-18 08:32:54,330:INFO:          scikitplot: 0.3.7
2023-12-18 08:32:54,330:INFO:         yellowbrick: 1.5
2023-12-18 08:32:54,330:INFO:              plotly: 5.18.0
2023-12-18 08:32:54,330:INFO:    plotly-resampler: Not installed
2023-12-18 08:32:54,330:INFO:             kaleido: 0.2.1
2023-12-18 08:32:54,331:INFO:           schemdraw: 0.15
2023-12-18 08:32:54,331:INFO:         statsmodels: 0.14.1
2023-12-18 08:32:54,331:INFO:              sktime: 0.21.1
2023-12-18 08:32:54,331:INFO:               tbats: 1.1.3
2023-12-18 08:32:54,331:INFO:            pmdarima: 2.0.4
2023-12-18 08:32:54,331:INFO:              psutil: 5.9.7
2023-12-18 08:32:54,331:INFO:          markupsafe: 2.1.3
2023-12-18 08:32:54,331:INFO:             pickle5: Not installed
2023-12-18 08:32:54,331:INFO:         cloudpickle: 3.0.0
2023-12-18 08:32:54,331:INFO:         deprecation: 2.1.0
2023-12-18 08:32:54,331:INFO:              xxhash: 3.4.1
2023-12-18 08:32:54,331:INFO:           wurlitzer: Not installed
2023-12-18 08:32:54,331:INFO:PyCaret optional dependencies:
2023-12-18 08:32:54,340:INFO:                shap: Not installed
2023-12-18 08:32:54,341:INFO:           interpret: Not installed
2023-12-18 08:32:54,341:INFO:                umap: Not installed
2023-12-18 08:32:54,341:INFO:     ydata_profiling: Not installed
2023-12-18 08:32:54,341:INFO:  explainerdashboard: Not installed
2023-12-18 08:32:54,341:INFO:             autoviz: Not installed
2023-12-18 08:32:54,341:INFO:           fairlearn: Not installed
2023-12-18 08:32:54,341:INFO:          deepchecks: Not installed
2023-12-18 08:32:54,341:INFO:             xgboost: Not installed
2023-12-18 08:32:54,341:INFO:            catboost: Not installed
2023-12-18 08:32:54,341:INFO:              kmodes: Not installed
2023-12-18 08:32:54,341:INFO:             mlxtend: Not installed
2023-12-18 08:32:54,341:INFO:       statsforecast: Not installed
2023-12-18 08:32:54,341:INFO:        tune_sklearn: Not installed
2023-12-18 08:32:54,341:INFO:                 ray: Not installed
2023-12-18 08:32:54,341:INFO:            hyperopt: Not installed
2023-12-18 08:32:54,341:INFO:              optuna: Not installed
2023-12-18 08:32:54,341:INFO:               skopt: Not installed
2023-12-18 08:32:54,341:INFO:              mlflow: Not installed
2023-12-18 08:32:54,341:INFO:              gradio: Not installed
2023-12-18 08:32:54,341:INFO:             fastapi: Not installed
2023-12-18 08:32:54,341:INFO:             uvicorn: Not installed
2023-12-18 08:32:54,341:INFO:              m2cgen: Not installed
2023-12-18 08:32:54,341:INFO:           evidently: Not installed
2023-12-18 08:32:54,341:INFO:               fugue: Not installed
2023-12-18 08:32:54,341:INFO:           streamlit: Not installed
2023-12-18 08:32:54,341:INFO:             prophet: Not installed
2023-12-18 08:32:54,341:INFO:None
2023-12-18 08:32:54,341:INFO:Set up data.
2023-12-18 08:32:54,354:INFO:Set up folding strategy.
2023-12-18 08:32:54,355:INFO:Set up train/test split.
2023-12-18 08:32:54,377:INFO:Set up index.
2023-12-18 08:32:54,377:INFO:Assigning column types.
2023-12-18 08:32:54,380:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-18 08:32:54,405:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 08:32:54,407:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:32:54,427:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:32:54,427:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:32:54,450:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 08:32:54,451:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:32:54,464:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:32:54,465:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:32:54,465:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-18 08:32:54,487:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:32:54,501:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:32:54,502:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:32:54,524:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:32:54,538:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:32:54,539:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:32:54,539:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-18 08:32:54,575:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:32:54,576:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:32:54,612:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:32:54,612:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:32:54,613:INFO:Preparing preprocessing pipeline...
2023-12-18 08:32:54,614:INFO:Set up label encoding.
2023-12-18 08:32:54,614:INFO:Set up date feature engineering.
2023-12-18 08:32:54,614:INFO:Set up simple imputation.
2023-12-18 08:32:54,617:INFO:Set up encoding of categorical features.
2023-12-18 08:32:54,617:INFO:Set up column name cleaning.
2023-12-18 08:32:54,720:INFO:Finished creating preprocessing pipeline.
2023-12-18 08:32:54,725:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MAXIMI~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['tmsp'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_i...
                 TransformerWrapper(exclude=None, include=['country', 'card'],
                                    transformer=OneHotEncoder(cols=['country',
                                                                    'card'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-18 08:32:54,726:INFO:Creating final display dataframe.
2023-12-18 08:32:54,959:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               1762
1                        Target                                                PSP
2                   Target type                                         Multiclass
3                Target mapping  Goldcard: 0, Moneycard: 1, Simplecard: 2, UK_C...
4           Original data shape                                         (50410, 8)
5        Transformed data shape                                        (50410, 14)
6   Transformed train set shape                                        (35287, 14)
7    Transformed test set shape                                        (15123, 14)
8              Numeric features                                                  4
9                 Date features                                                  1
10         Categorical features                                                  2
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                  5
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               dcdd
2023-12-18 08:32:54,962:ERROR:Data Failed with exception:
 No module named 'ydata_profiling'
No output to show, continue with modeling.
2023-12-18 08:32:55,001:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:32:55,001:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:32:55,039:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:32:55,039:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:32:55,040:INFO:setup() successfully completed in 0.74s...............
2023-12-18 08:33:18,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:33:18,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:33:18,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:33:18,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:33:18,787:INFO:PyCaret ClassificationExperiment
2023-12-18 08:33:18,787:INFO:Logging name: clf-default-name
2023-12-18 08:33:18,787:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-18 08:33:18,787:INFO:version 3.2.0
2023-12-18 08:33:18,787:INFO:Initializing setup()
2023-12-18 08:33:18,787:INFO:self.USI: ac8a
2023-12-18 08:33:18,787:INFO:self._variable_keys: {'fix_imbalance', '_available_plots', 'logging_param', '_ml_usecase', 'log_plots_param', 'pipeline', 'fold_generator', 'html_param', 'gpu_param', 'data', 'gpu_n_jobs_param', 'is_multiclass', 'y_test', 'target_param', 'X', 'n_jobs_param', 'fold_groups_param', 'seed', 'X_train', 'USI', 'exp_name_log', 'idx', 'X_test', 'fold_shuffle_param', 'y', 'y_train', 'exp_id', 'memory'}
2023-12-18 08:33:18,787:INFO:Checking environment
2023-12-18 08:33:18,787:INFO:python_version: 3.10.4
2023-12-18 08:33:18,787:INFO:python_build: ('tags/v3.10.4:9d38120', 'Mar 23 2022 23:13:41')
2023-12-18 08:33:18,787:INFO:machine: AMD64
2023-12-18 08:33:18,796:INFO:platform: Windows-10-10.0.19045-SP0
2023-12-18 08:33:18,799:INFO:Memory: svmem(total=34029125632, available=17844998144, percent=47.6, used=16184127488, free=17844998144)
2023-12-18 08:33:18,799:INFO:Physical Core: 14
2023-12-18 08:33:18,799:INFO:Logical Core: 20
2023-12-18 08:33:18,799:INFO:Checking libraries
2023-12-18 08:33:18,799:INFO:System:
2023-12-18 08:33:18,799:INFO:    python: 3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit (AMD64)]
2023-12-18 08:33:18,799:INFO:executable: C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\python.exe
2023-12-18 08:33:18,799:INFO:   machine: Windows-10-10.0.19045-SP0
2023-12-18 08:33:18,799:INFO:PyCaret required dependencies:
2023-12-18 08:33:18,812:INFO:                 pip: 22.0.4
2023-12-18 08:33:18,812:INFO:          setuptools: 58.1.0
2023-12-18 08:33:18,812:INFO:             pycaret: 3.2.0
2023-12-18 08:33:18,812:INFO:             IPython: 8.18.1
2023-12-18 08:33:18,812:INFO:          ipywidgets: 8.1.1
2023-12-18 08:33:18,812:INFO:                tqdm: 4.66.1
2023-12-18 08:33:18,812:INFO:               numpy: 1.25.2
2023-12-18 08:33:18,812:INFO:              pandas: 1.5.3
2023-12-18 08:33:18,812:INFO:              jinja2: 3.1.2
2023-12-18 08:33:18,812:INFO:               scipy: 1.10.1
2023-12-18 08:33:18,812:INFO:              joblib: 1.3.2
2023-12-18 08:33:18,812:INFO:             sklearn: 1.2.2
2023-12-18 08:33:18,812:INFO:                pyod: 1.1.2
2023-12-18 08:33:18,812:INFO:            imblearn: 0.11.0
2023-12-18 08:33:18,812:INFO:   category_encoders: 2.6.3
2023-12-18 08:33:18,812:INFO:            lightgbm: 4.1.0
2023-12-18 08:33:18,812:INFO:               numba: 0.58.1
2023-12-18 08:33:18,812:INFO:            requests: 2.31.0
2023-12-18 08:33:18,812:INFO:          matplotlib: 3.6.0
2023-12-18 08:33:18,812:INFO:          scikitplot: 0.3.7
2023-12-18 08:33:18,812:INFO:         yellowbrick: 1.5
2023-12-18 08:33:18,812:INFO:              plotly: 5.18.0
2023-12-18 08:33:18,812:INFO:    plotly-resampler: Not installed
2023-12-18 08:33:18,812:INFO:             kaleido: 0.2.1
2023-12-18 08:33:18,812:INFO:           schemdraw: 0.15
2023-12-18 08:33:18,812:INFO:         statsmodels: 0.14.1
2023-12-18 08:33:18,812:INFO:              sktime: 0.21.1
2023-12-18 08:33:18,812:INFO:               tbats: 1.1.3
2023-12-18 08:33:18,812:INFO:            pmdarima: 2.0.4
2023-12-18 08:33:18,812:INFO:              psutil: 5.9.7
2023-12-18 08:33:18,812:INFO:          markupsafe: 2.1.3
2023-12-18 08:33:18,812:INFO:             pickle5: Not installed
2023-12-18 08:33:18,812:INFO:         cloudpickle: 3.0.0
2023-12-18 08:33:18,812:INFO:         deprecation: 2.1.0
2023-12-18 08:33:18,812:INFO:              xxhash: 3.4.1
2023-12-18 08:33:18,812:INFO:           wurlitzer: Not installed
2023-12-18 08:33:18,812:INFO:PyCaret optional dependencies:
2023-12-18 08:33:18,821:INFO:                shap: Not installed
2023-12-18 08:33:18,821:INFO:           interpret: Not installed
2023-12-18 08:33:18,821:INFO:                umap: Not installed
2023-12-18 08:33:18,821:INFO:     ydata_profiling: Not installed
2023-12-18 08:33:18,821:INFO:  explainerdashboard: Not installed
2023-12-18 08:33:18,821:INFO:             autoviz: Not installed
2023-12-18 08:33:18,821:INFO:           fairlearn: Not installed
2023-12-18 08:33:18,821:INFO:          deepchecks: Not installed
2023-12-18 08:33:18,821:INFO:             xgboost: Not installed
2023-12-18 08:33:18,821:INFO:            catboost: Not installed
2023-12-18 08:33:18,821:INFO:              kmodes: Not installed
2023-12-18 08:33:18,821:INFO:             mlxtend: Not installed
2023-12-18 08:33:18,821:INFO:       statsforecast: Not installed
2023-12-18 08:33:18,821:INFO:        tune_sklearn: Not installed
2023-12-18 08:33:18,821:INFO:                 ray: Not installed
2023-12-18 08:33:18,821:INFO:            hyperopt: Not installed
2023-12-18 08:33:18,821:INFO:              optuna: Not installed
2023-12-18 08:33:18,821:INFO:               skopt: Not installed
2023-12-18 08:33:18,821:INFO:              mlflow: Not installed
2023-12-18 08:33:18,821:INFO:              gradio: Not installed
2023-12-18 08:33:18,821:INFO:             fastapi: Not installed
2023-12-18 08:33:18,821:INFO:             uvicorn: Not installed
2023-12-18 08:33:18,821:INFO:              m2cgen: Not installed
2023-12-18 08:33:18,821:INFO:           evidently: Not installed
2023-12-18 08:33:18,821:INFO:               fugue: Not installed
2023-12-18 08:33:18,821:INFO:           streamlit: Not installed
2023-12-18 08:33:18,821:INFO:             prophet: Not installed
2023-12-18 08:33:18,821:INFO:None
2023-12-18 08:33:18,821:INFO:Set up data.
2023-12-18 08:33:18,833:INFO:Set up folding strategy.
2023-12-18 08:33:18,833:INFO:Set up train/test split.
2023-12-18 08:33:18,856:INFO:Set up index.
2023-12-18 08:33:18,857:INFO:Assigning column types.
2023-12-18 08:33:18,859:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-18 08:33:18,882:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 08:33:18,883:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:33:18,903:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:33:18,903:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:33:18,926:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 08:33:18,926:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:33:18,939:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:33:18,940:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:33:18,940:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-18 08:33:18,963:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:33:18,977:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:33:18,977:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:33:19,000:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:33:19,014:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:33:19,014:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:33:19,014:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-18 08:33:19,051:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:33:19,052:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:33:19,089:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:33:19,089:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:33:19,091:INFO:Preparing preprocessing pipeline...
2023-12-18 08:33:19,092:INFO:Set up label encoding.
2023-12-18 08:33:19,092:INFO:Set up date feature engineering.
2023-12-18 08:33:19,092:INFO:Set up simple imputation.
2023-12-18 08:33:19,094:INFO:Set up encoding of categorical features.
2023-12-18 08:33:19,094:INFO:Set up column name cleaning.
2023-12-18 08:33:19,197:INFO:Finished creating preprocessing pipeline.
2023-12-18 08:33:19,202:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MAXIMI~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['tmsp'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_i...
                 TransformerWrapper(exclude=None, include=['country', 'card'],
                                    transformer=OneHotEncoder(cols=['country',
                                                                    'card'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-18 08:33:19,202:INFO:Creating final display dataframe.
2023-12-18 08:33:19,440:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               2612
1                        Target                                                PSP
2                   Target type                                         Multiclass
3                Target mapping  Goldcard: 0, Moneycard: 1, Simplecard: 2, UK_C...
4           Original data shape                                         (50410, 8)
5        Transformed data shape                                        (50410, 14)
6   Transformed train set shape                                        (35287, 14)
7    Transformed test set shape                                        (15123, 14)
8              Numeric features                                                  4
9                 Date features                                                  1
10         Categorical features                                                  2
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                  5
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               ac8a
2023-12-18 08:33:19,483:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:33:19,483:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:33:19,522:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:33:19,522:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:33:19,522:INFO:setup() successfully completed in 0.74s...............
2023-12-18 08:38:14,424:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:38:14,424:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:38:14,424:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:38:14,424:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:38:14,943:INFO:PyCaret ClassificationExperiment
2023-12-18 08:38:14,943:INFO:Logging name: clf-default-name
2023-12-18 08:38:14,943:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-18 08:38:14,943:INFO:version 3.2.0
2023-12-18 08:38:14,943:INFO:Initializing setup()
2023-12-18 08:38:14,943:INFO:self.USI: 9dd8
2023-12-18 08:38:14,943:INFO:self._variable_keys: {'target_param', '_ml_usecase', 'exp_id', 'gpu_n_jobs_param', 'fix_imbalance', 'memory', 'USI', 'n_jobs_param', 'y', 'X_train', 'logging_param', 'exp_name_log', 'log_plots_param', 'idx', 'seed', 'pipeline', 'y_test', 'html_param', 'data', 'fold_shuffle_param', 'y_train', 'gpu_param', 'is_multiclass', 'fold_generator', 'fold_groups_param', 'X_test', '_available_plots', 'X'}
2023-12-18 08:38:14,943:INFO:Checking environment
2023-12-18 08:38:14,943:INFO:python_version: 3.10.4
2023-12-18 08:38:14,943:INFO:python_build: ('tags/v3.10.4:9d38120', 'Mar 23 2022 23:13:41')
2023-12-18 08:38:14,943:INFO:machine: AMD64
2023-12-18 08:38:14,951:INFO:platform: Windows-10-10.0.19045-SP0
2023-12-18 08:38:14,954:INFO:Memory: svmem(total=34029125632, available=17568440320, percent=48.4, used=16460685312, free=17568440320)
2023-12-18 08:38:14,955:INFO:Physical Core: 14
2023-12-18 08:38:14,955:INFO:Logical Core: 20
2023-12-18 08:38:14,955:INFO:Checking libraries
2023-12-18 08:38:14,955:INFO:System:
2023-12-18 08:38:14,955:INFO:    python: 3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit (AMD64)]
2023-12-18 08:38:14,955:INFO:executable: C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\python.exe
2023-12-18 08:38:14,955:INFO:   machine: Windows-10-10.0.19045-SP0
2023-12-18 08:38:14,955:INFO:PyCaret required dependencies:
2023-12-18 08:38:14,966:INFO:                 pip: 22.0.4
2023-12-18 08:38:14,966:INFO:          setuptools: 58.1.0
2023-12-18 08:38:14,966:INFO:             pycaret: 3.2.0
2023-12-18 08:38:14,966:INFO:             IPython: 8.18.1
2023-12-18 08:38:14,966:INFO:          ipywidgets: 8.1.1
2023-12-18 08:38:14,966:INFO:                tqdm: 4.66.1
2023-12-18 08:38:14,966:INFO:               numpy: 1.25.2
2023-12-18 08:38:14,966:INFO:              pandas: 1.5.3
2023-12-18 08:38:14,966:INFO:              jinja2: 3.1.2
2023-12-18 08:38:14,967:INFO:               scipy: 1.10.1
2023-12-18 08:38:14,967:INFO:              joblib: 1.3.2
2023-12-18 08:38:14,967:INFO:             sklearn: 1.2.2
2023-12-18 08:38:14,967:INFO:                pyod: 1.1.2
2023-12-18 08:38:14,967:INFO:            imblearn: 0.11.0
2023-12-18 08:38:14,967:INFO:   category_encoders: 2.6.3
2023-12-18 08:38:14,967:INFO:            lightgbm: 4.1.0
2023-12-18 08:38:14,967:INFO:               numba: 0.58.1
2023-12-18 08:38:14,967:INFO:            requests: 2.31.0
2023-12-18 08:38:14,967:INFO:          matplotlib: 3.6.0
2023-12-18 08:38:14,967:INFO:          scikitplot: 0.3.7
2023-12-18 08:38:14,967:INFO:         yellowbrick: 1.5
2023-12-18 08:38:14,967:INFO:              plotly: 5.18.0
2023-12-18 08:38:14,967:INFO:    plotly-resampler: Not installed
2023-12-18 08:38:14,967:INFO:             kaleido: 0.2.1
2023-12-18 08:38:14,967:INFO:           schemdraw: 0.15
2023-12-18 08:38:14,967:INFO:         statsmodels: 0.14.1
2023-12-18 08:38:14,967:INFO:              sktime: 0.21.1
2023-12-18 08:38:14,967:INFO:               tbats: 1.1.3
2023-12-18 08:38:14,967:INFO:            pmdarima: 2.0.4
2023-12-18 08:38:14,967:INFO:              psutil: 5.9.7
2023-12-18 08:38:14,967:INFO:          markupsafe: 2.1.3
2023-12-18 08:38:14,967:INFO:             pickle5: Not installed
2023-12-18 08:38:14,967:INFO:         cloudpickle: 3.0.0
2023-12-18 08:38:14,967:INFO:         deprecation: 2.1.0
2023-12-18 08:38:14,967:INFO:              xxhash: 3.4.1
2023-12-18 08:38:14,967:INFO:           wurlitzer: Not installed
2023-12-18 08:38:14,967:INFO:PyCaret optional dependencies:
2023-12-18 08:38:14,977:INFO:                shap: Not installed
2023-12-18 08:38:14,977:INFO:           interpret: Not installed
2023-12-18 08:38:14,977:INFO:                umap: Not installed
2023-12-18 08:38:14,977:INFO:     ydata_profiling: Not installed
2023-12-18 08:38:14,977:INFO:  explainerdashboard: Not installed
2023-12-18 08:38:14,977:INFO:             autoviz: Not installed
2023-12-18 08:38:14,977:INFO:           fairlearn: Not installed
2023-12-18 08:38:14,977:INFO:          deepchecks: Not installed
2023-12-18 08:38:14,977:INFO:             xgboost: Not installed
2023-12-18 08:38:14,977:INFO:            catboost: Not installed
2023-12-18 08:38:14,978:INFO:              kmodes: Not installed
2023-12-18 08:38:14,978:INFO:             mlxtend: Not installed
2023-12-18 08:38:14,978:INFO:       statsforecast: Not installed
2023-12-18 08:38:14,978:INFO:        tune_sklearn: Not installed
2023-12-18 08:38:14,978:INFO:                 ray: Not installed
2023-12-18 08:38:14,978:INFO:            hyperopt: Not installed
2023-12-18 08:38:14,978:INFO:              optuna: Not installed
2023-12-18 08:38:14,978:INFO:               skopt: Not installed
2023-12-18 08:38:14,978:INFO:              mlflow: Not installed
2023-12-18 08:38:14,978:INFO:              gradio: Not installed
2023-12-18 08:38:14,978:INFO:             fastapi: Not installed
2023-12-18 08:38:14,978:INFO:             uvicorn: Not installed
2023-12-18 08:38:14,978:INFO:              m2cgen: Not installed
2023-12-18 08:38:14,978:INFO:           evidently: Not installed
2023-12-18 08:38:14,978:INFO:               fugue: Not installed
2023-12-18 08:38:14,978:INFO:           streamlit: Not installed
2023-12-18 08:38:14,978:INFO:             prophet: Not installed
2023-12-18 08:38:14,978:INFO:None
2023-12-18 08:38:14,978:INFO:Set up data.
2023-12-18 08:38:14,990:INFO:Set up folding strategy.
2023-12-18 08:38:14,990:INFO:Set up train/test split.
2023-12-18 08:38:15,013:INFO:Set up index.
2023-12-18 08:38:15,013:INFO:Assigning column types.
2023-12-18 08:38:15,015:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-18 08:38:15,039:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 08:38:15,041:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:38:15,059:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:38:15,059:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:38:15,082:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 08:38:15,082:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:38:15,096:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:38:15,096:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:38:15,096:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-18 08:38:15,119:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:38:15,133:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:38:15,133:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:38:15,157:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:38:15,171:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:38:15,171:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:38:15,171:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-18 08:38:15,208:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:38:15,208:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:38:15,246:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:38:15,246:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:38:15,247:INFO:Preparing preprocessing pipeline...
2023-12-18 08:38:15,248:INFO:Set up label encoding.
2023-12-18 08:38:15,248:INFO:Set up date feature engineering.
2023-12-18 08:38:15,248:INFO:Set up simple imputation.
2023-12-18 08:38:15,250:INFO:Set up encoding of categorical features.
2023-12-18 08:38:15,250:INFO:Set up imbalanced handling.
2023-12-18 08:38:15,251:INFO:Set up column name cleaning.
2023-12-18 08:38:15,472:INFO:Finished creating preprocessing pipeline.
2023-12-18 08:38:15,478:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MAXIMI~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['tmsp'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_i...
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-18 08:38:15,478:INFO:Creating final display dataframe.
2023-12-18 08:38:15,842:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               7756
1                        Target                                                PSP
2                   Target type                                         Multiclass
3                Target mapping  Goldcard: 0, Moneycard: 1, Simplecard: 2, UK_C...
4           Original data shape                                         (50410, 8)
5        Transformed data shape                                        (89207, 14)
6   Transformed train set shape                                        (74084, 14)
7    Transformed test set shape                                        (15123, 14)
8              Numeric features                                                  4
9                 Date features                                                  1
10         Categorical features                                                  2
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17                Fix imbalance                                               True
18         Fix imbalance method                                              SMOTE
19               Fold Generator                                    StratifiedKFold
20                  Fold Number                                                  5
21                     CPU Jobs                                                 -1
22                      Use GPU                                              False
23               Log Experiment                                              False
24              Experiment Name                                   clf-default-name
25                          USI                                               9dd8
2023-12-18 08:38:15,884:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:38:15,884:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:38:15,922:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:38:15,922:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:38:15,922:INFO:setup() successfully completed in 0.98s...............
2023-12-18 08:38:15,922:INFO:Initializing compare_models()
2023-12-18 08:38:15,922:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023CB9BA56C0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000023CB9BA56C0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-12-18 08:38:15,923:INFO:Checking exceptions
2023-12-18 08:38:15,926:INFO:Preparing display monitor
2023-12-18 08:38:15,931:INFO:Initializing Logistic Regression
2023-12-18 08:38:15,931:INFO:Total runtime is 0.0 minutes
2023-12-18 08:38:15,931:INFO:SubProcess create_model() called ==================================
2023-12-18 08:38:15,931:INFO:Initializing create_model()
2023-12-18 08:38:15,931:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023CB9BA56C0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023CE80DB4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 08:38:15,931:INFO:Checking exceptions
2023-12-18 08:38:15,931:INFO:Importing libraries
2023-12-18 08:38:15,932:INFO:Copying training dataset
2023-12-18 08:38:15,936:INFO:Defining folds
2023-12-18 08:38:15,936:INFO:Declaring metric variables
2023-12-18 08:38:15,936:INFO:Importing untrained model
2023-12-18 08:38:15,936:INFO:Logistic Regression Imported successfully
2023-12-18 08:38:15,936:INFO:Starting cross validation
2023-12-18 08:38:15,937:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 08:38:18,412:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:18,412:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:18,416:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:18,435:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:18,435:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:18,435:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:18,439:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:18,456:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:18,457:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:18,457:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:18,461:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:18,535:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:18,555:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:18,574:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:18,610:INFO:Calculating mean and std
2023-12-18 08:38:18,612:INFO:Creating metrics dataframe
2023-12-18 08:38:18,615:INFO:Uploading results into container
2023-12-18 08:38:18,615:INFO:Uploading model into container now
2023-12-18 08:38:18,615:INFO:_master_model_container: 1
2023-12-18 08:38:18,615:INFO:_display_container: 2
2023-12-18 08:38:18,616:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7756, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-18 08:38:18,616:INFO:create_model() successfully completed......................................
2023-12-18 08:38:18,659:INFO:SubProcess create_model() end ==================================
2023-12-18 08:38:18,659:INFO:Creating metrics dataframe
2023-12-18 08:38:18,661:INFO:Initializing K Neighbors Classifier
2023-12-18 08:38:18,661:INFO:Total runtime is 0.04550011157989502 minutes
2023-12-18 08:38:18,661:INFO:SubProcess create_model() called ==================================
2023-12-18 08:38:18,661:INFO:Initializing create_model()
2023-12-18 08:38:18,661:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023CB9BA56C0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023CE80DB4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 08:38:18,661:INFO:Checking exceptions
2023-12-18 08:38:18,661:INFO:Importing libraries
2023-12-18 08:38:18,661:INFO:Copying training dataset
2023-12-18 08:38:18,666:INFO:Defining folds
2023-12-18 08:38:18,666:INFO:Declaring metric variables
2023-12-18 08:38:18,666:INFO:Importing untrained model
2023-12-18 08:38:18,666:INFO:K Neighbors Classifier Imported successfully
2023-12-18 08:38:18,666:INFO:Starting cross validation
2023-12-18 08:38:18,667:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 08:38:20,695:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:20,697:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:20,706:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:20,722:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:20,724:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:20,725:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:20,737:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:20,743:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:20,745:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:20,746:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:20,754:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:20,759:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:20,777:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:20,803:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:20,846:INFO:Calculating mean and std
2023-12-18 08:38:20,846:INFO:Creating metrics dataframe
2023-12-18 08:38:20,849:INFO:Uploading results into container
2023-12-18 08:38:20,849:INFO:Uploading model into container now
2023-12-18 08:38:20,849:INFO:_master_model_container: 2
2023-12-18 08:38:20,849:INFO:_display_container: 2
2023-12-18 08:38:20,849:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-12-18 08:38:20,849:INFO:create_model() successfully completed......................................
2023-12-18 08:38:20,883:INFO:SubProcess create_model() end ==================================
2023-12-18 08:38:20,884:INFO:Creating metrics dataframe
2023-12-18 08:38:20,886:INFO:Initializing Naive Bayes
2023-12-18 08:38:20,886:INFO:Total runtime is 0.08258481423060099 minutes
2023-12-18 08:38:20,886:INFO:SubProcess create_model() called ==================================
2023-12-18 08:38:20,886:INFO:Initializing create_model()
2023-12-18 08:38:20,886:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023CB9BA56C0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023CE80DB4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 08:38:20,886:INFO:Checking exceptions
2023-12-18 08:38:20,886:INFO:Importing libraries
2023-12-18 08:38:20,886:INFO:Copying training dataset
2023-12-18 08:38:20,890:INFO:Defining folds
2023-12-18 08:38:20,890:INFO:Declaring metric variables
2023-12-18 08:38:20,890:INFO:Importing untrained model
2023-12-18 08:38:20,890:INFO:Naive Bayes Imported successfully
2023-12-18 08:38:20,891:INFO:Starting cross validation
2023-12-18 08:38:20,892:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 08:38:22,564:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:22,568:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:22,568:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:22,569:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:22,572:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:22,587:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:22,591:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:22,591:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:22,592:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:22,595:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:22,610:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:22,614:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:22,614:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:22,615:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:22,617:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:22,659:INFO:Calculating mean and std
2023-12-18 08:38:22,660:INFO:Creating metrics dataframe
2023-12-18 08:38:22,665:INFO:Uploading results into container
2023-12-18 08:38:22,665:INFO:Uploading model into container now
2023-12-18 08:38:22,666:INFO:_master_model_container: 3
2023-12-18 08:38:22,666:INFO:_display_container: 2
2023-12-18 08:38:22,666:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-12-18 08:38:22,666:INFO:create_model() successfully completed......................................
2023-12-18 08:38:22,710:INFO:SubProcess create_model() end ==================================
2023-12-18 08:38:22,710:INFO:Creating metrics dataframe
2023-12-18 08:38:22,713:INFO:Initializing Decision Tree Classifier
2023-12-18 08:38:22,713:INFO:Total runtime is 0.11302724679311116 minutes
2023-12-18 08:38:22,713:INFO:SubProcess create_model() called ==================================
2023-12-18 08:38:22,713:INFO:Initializing create_model()
2023-12-18 08:38:22,713:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023CB9BA56C0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023CE80DB4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 08:38:22,713:INFO:Checking exceptions
2023-12-18 08:38:22,713:INFO:Importing libraries
2023-12-18 08:38:22,713:INFO:Copying training dataset
2023-12-18 08:38:22,718:INFO:Defining folds
2023-12-18 08:38:22,718:INFO:Declaring metric variables
2023-12-18 08:38:22,718:INFO:Importing untrained model
2023-12-18 08:38:22,718:INFO:Decision Tree Classifier Imported successfully
2023-12-18 08:38:22,719:INFO:Starting cross validation
2023-12-18 08:38:22,720:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 08:38:25,090:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:25,091:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:25,092:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:25,100:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:25,112:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:25,113:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:25,113:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:25,114:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:25,123:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:25,135:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:25,137:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:25,137:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:25,138:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:25,146:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:25,159:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:25,196:INFO:Calculating mean and std
2023-12-18 08:38:25,197:INFO:Creating metrics dataframe
2023-12-18 08:38:25,200:INFO:Uploading results into container
2023-12-18 08:38:25,201:INFO:Uploading model into container now
2023-12-18 08:38:25,201:INFO:_master_model_container: 4
2023-12-18 08:38:25,201:INFO:_display_container: 2
2023-12-18 08:38:25,201:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7756, splitter='best')
2023-12-18 08:38:25,201:INFO:create_model() successfully completed......................................
2023-12-18 08:38:25,241:INFO:SubProcess create_model() end ==================================
2023-12-18 08:38:25,241:INFO:Creating metrics dataframe
2023-12-18 08:38:25,243:INFO:Initializing SVM - Linear Kernel
2023-12-18 08:38:25,243:INFO:Total runtime is 0.1552043596903483 minutes
2023-12-18 08:38:25,243:INFO:SubProcess create_model() called ==================================
2023-12-18 08:38:25,244:INFO:Initializing create_model()
2023-12-18 08:38:25,244:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023CB9BA56C0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023CE80DB4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 08:38:25,244:INFO:Checking exceptions
2023-12-18 08:38:25,244:INFO:Importing libraries
2023-12-18 08:38:25,244:INFO:Copying training dataset
2023-12-18 08:38:25,249:INFO:Defining folds
2023-12-18 08:38:25,249:INFO:Declaring metric variables
2023-12-18 08:38:25,249:INFO:Importing untrained model
2023-12-18 08:38:25,249:INFO:SVM - Linear Kernel Imported successfully
2023-12-18 08:38:25,250:INFO:Starting cross validation
2023-12-18 08:38:25,251:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 08:38:30,576:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-18 08:38:30,591:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:30,627:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:30,650:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 08:38:30,666:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:30,791:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-18 08:38:30,801:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:30,823:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:30,835:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 08:38:30,844:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:30,903:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-18 08:38:30,912:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:30,934:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:30,947:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 08:38:30,956:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:30,996:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-18 08:38:31,005:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:31,026:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:31,039:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 08:38:31,048:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:31,058:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-18 08:38:31,067:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:31,089:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:31,101:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 08:38:31,109:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:31,138:INFO:Calculating mean and std
2023-12-18 08:38:31,138:INFO:Creating metrics dataframe
2023-12-18 08:38:31,140:INFO:Uploading results into container
2023-12-18 08:38:31,141:INFO:Uploading model into container now
2023-12-18 08:38:31,141:INFO:_master_model_container: 5
2023-12-18 08:38:31,141:INFO:_display_container: 2
2023-12-18 08:38:31,141:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7756, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-12-18 08:38:31,141:INFO:create_model() successfully completed......................................
2023-12-18 08:38:31,178:INFO:SubProcess create_model() end ==================================
2023-12-18 08:38:31,178:INFO:Creating metrics dataframe
2023-12-18 08:38:31,180:INFO:Initializing Ridge Classifier
2023-12-18 08:38:31,181:INFO:Total runtime is 0.2541640837987264 minutes
2023-12-18 08:38:31,181:INFO:SubProcess create_model() called ==================================
2023-12-18 08:38:31,181:INFO:Initializing create_model()
2023-12-18 08:38:31,181:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023CB9BA56C0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023CE80DB4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 08:38:31,181:INFO:Checking exceptions
2023-12-18 08:38:31,181:INFO:Importing libraries
2023-12-18 08:38:31,181:INFO:Copying training dataset
2023-12-18 08:38:31,186:INFO:Defining folds
2023-12-18 08:38:31,186:INFO:Declaring metric variables
2023-12-18 08:38:31,186:INFO:Importing untrained model
2023-12-18 08:38:31,186:INFO:Ridge Classifier Imported successfully
2023-12-18 08:38:31,186:INFO:Starting cross validation
2023-12-18 08:38:31,187:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 08:38:31,476:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-18 08:38:31,476:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-18 08:38:31,485:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:31,485:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:31,488:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-18 08:38:31,497:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:31,497:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-18 08:38:31,497:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-18 08:38:31,508:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:31,508:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:31,509:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:31,509:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:31,522:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:31,532:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:31,532:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:31,532:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:31,533:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:31,545:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:31,556:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:31,556:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:31,596:INFO:Calculating mean and std
2023-12-18 08:38:31,596:INFO:Creating metrics dataframe
2023-12-18 08:38:31,598:INFO:Uploading results into container
2023-12-18 08:38:31,599:INFO:Uploading model into container now
2023-12-18 08:38:31,599:INFO:_master_model_container: 6
2023-12-18 08:38:31,599:INFO:_display_container: 2
2023-12-18 08:38:31,599:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7756, solver='auto',
                tol=0.0001)
2023-12-18 08:38:31,599:INFO:create_model() successfully completed......................................
2023-12-18 08:38:31,635:INFO:SubProcess create_model() end ==================================
2023-12-18 08:38:31,635:INFO:Creating metrics dataframe
2023-12-18 08:38:31,638:INFO:Initializing Random Forest Classifier
2023-12-18 08:38:31,638:INFO:Total runtime is 0.26178936958312987 minutes
2023-12-18 08:38:31,638:INFO:SubProcess create_model() called ==================================
2023-12-18 08:38:31,638:INFO:Initializing create_model()
2023-12-18 08:38:31,638:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023CB9BA56C0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023CE80DB4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 08:38:31,638:INFO:Checking exceptions
2023-12-18 08:38:31,638:INFO:Importing libraries
2023-12-18 08:38:31,638:INFO:Copying training dataset
2023-12-18 08:38:31,643:INFO:Defining folds
2023-12-18 08:38:31,643:INFO:Declaring metric variables
2023-12-18 08:38:31,643:INFO:Importing untrained model
2023-12-18 08:38:31,643:INFO:Random Forest Classifier Imported successfully
2023-12-18 08:38:31,644:INFO:Starting cross validation
2023-12-18 08:38:31,645:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 08:38:39,492:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:39,532:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:39,533:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:39,569:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:39,590:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:39,591:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:39,632:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:39,634:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:39,637:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:39,655:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:39,690:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:39,735:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:39,868:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:39,895:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:39,920:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:39,954:INFO:Calculating mean and std
2023-12-18 08:38:39,955:INFO:Creating metrics dataframe
2023-12-18 08:38:39,959:INFO:Uploading results into container
2023-12-18 08:38:39,960:INFO:Uploading model into container now
2023-12-18 08:38:39,960:INFO:_master_model_container: 7
2023-12-18 08:38:39,960:INFO:_display_container: 2
2023-12-18 08:38:39,960:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7756, verbose=0, warm_start=False)
2023-12-18 08:38:39,961:INFO:create_model() successfully completed......................................
2023-12-18 08:38:39,999:INFO:SubProcess create_model() end ==================================
2023-12-18 08:38:39,999:INFO:Creating metrics dataframe
2023-12-18 08:38:40,002:INFO:Initializing Quadratic Discriminant Analysis
2023-12-18 08:38:40,002:INFO:Total runtime is 0.4011825482050578 minutes
2023-12-18 08:38:40,002:INFO:SubProcess create_model() called ==================================
2023-12-18 08:38:40,003:INFO:Initializing create_model()
2023-12-18 08:38:40,003:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023CB9BA56C0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023CE80DB4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 08:38:40,003:INFO:Checking exceptions
2023-12-18 08:38:40,003:INFO:Importing libraries
2023-12-18 08:38:40,003:INFO:Copying training dataset
2023-12-18 08:38:40,008:INFO:Defining folds
2023-12-18 08:38:40,008:INFO:Declaring metric variables
2023-12-18 08:38:40,008:INFO:Importing untrained model
2023-12-18 08:38:40,008:INFO:Quadratic Discriminant Analysis Imported successfully
2023-12-18 08:38:40,009:INFO:Starting cross validation
2023-12-18 08:38:40,010:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 08:38:40,307:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-18 08:38:40,307:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-18 08:38:40,307:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-18 08:38:40,307:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-18 08:38:40,333:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-18 08:38:40,399:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:40,400:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:40,402:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:40,411:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:40,429:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:40,431:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:40,433:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:40,435:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:40,442:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:40,459:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:40,461:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:40,463:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:40,465:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:40,472:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:40,495:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:40,538:INFO:Calculating mean and std
2023-12-18 08:38:40,539:INFO:Creating metrics dataframe
2023-12-18 08:38:40,541:INFO:Uploading results into container
2023-12-18 08:38:40,542:INFO:Uploading model into container now
2023-12-18 08:38:40,542:INFO:_master_model_container: 8
2023-12-18 08:38:40,542:INFO:_display_container: 2
2023-12-18 08:38:40,542:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-12-18 08:38:40,542:INFO:create_model() successfully completed......................................
2023-12-18 08:38:40,582:INFO:SubProcess create_model() end ==================================
2023-12-18 08:38:40,582:INFO:Creating metrics dataframe
2023-12-18 08:38:40,585:INFO:Initializing Ada Boost Classifier
2023-12-18 08:38:40,585:INFO:Total runtime is 0.4108992258707682 minutes
2023-12-18 08:38:40,585:INFO:SubProcess create_model() called ==================================
2023-12-18 08:38:40,585:INFO:Initializing create_model()
2023-12-18 08:38:40,585:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023CB9BA56C0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023CE80DB4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 08:38:40,585:INFO:Checking exceptions
2023-12-18 08:38:40,585:INFO:Importing libraries
2023-12-18 08:38:40,586:INFO:Copying training dataset
2023-12-18 08:38:40,592:INFO:Defining folds
2023-12-18 08:38:40,592:INFO:Declaring metric variables
2023-12-18 08:38:40,592:INFO:Importing untrained model
2023-12-18 08:38:40,592:INFO:Ada Boost Classifier Imported successfully
2023-12-18 08:38:40,592:INFO:Starting cross validation
2023-12-18 08:38:40,594:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 08:38:44,118:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:44,144:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:44,152:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:44,160:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 08:38:44,171:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:44,179:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:44,183:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:44,184:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:44,195:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 08:38:44,206:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:44,209:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:44,211:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:44,226:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 08:38:44,227:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 08:38:44,229:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:44,236:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:44,238:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:44,256:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:44,270:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 08:38:44,281:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:38:44,319:INFO:Calculating mean and std
2023-12-18 08:38:44,320:INFO:Creating metrics dataframe
2023-12-18 08:38:44,322:INFO:Uploading results into container
2023-12-18 08:38:44,322:INFO:Uploading model into container now
2023-12-18 08:38:44,322:INFO:_master_model_container: 9
2023-12-18 08:38:44,322:INFO:_display_container: 2
2023-12-18 08:38:44,323:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7756)
2023-12-18 08:38:44,323:INFO:create_model() successfully completed......................................
2023-12-18 08:38:44,358:INFO:SubProcess create_model() end ==================================
2023-12-18 08:38:44,358:INFO:Creating metrics dataframe
2023-12-18 08:38:44,361:INFO:Initializing Gradient Boosting Classifier
2023-12-18 08:38:44,361:INFO:Total runtime is 0.4738253871599833 minutes
2023-12-18 08:38:44,362:INFO:SubProcess create_model() called ==================================
2023-12-18 08:38:44,362:INFO:Initializing create_model()
2023-12-18 08:38:44,362:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023CB9BA56C0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023CE80DB4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 08:38:44,362:INFO:Checking exceptions
2023-12-18 08:38:44,362:INFO:Importing libraries
2023-12-18 08:38:44,362:INFO:Copying training dataset
2023-12-18 08:38:44,367:INFO:Defining folds
2023-12-18 08:38:44,367:INFO:Declaring metric variables
2023-12-18 08:38:44,367:INFO:Importing untrained model
2023-12-18 08:38:44,367:INFO:Gradient Boosting Classifier Imported successfully
2023-12-18 08:38:44,367:INFO:Starting cross validation
2023-12-18 08:38:44,368:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 08:39:35,200:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:35,214:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:35,225:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:35,239:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:35,251:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:35,264:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:35,352:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:35,376:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:35,399:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:35,499:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:35,519:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:35,540:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:36,205:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:36,224:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:36,243:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:36,271:INFO:Calculating mean and std
2023-12-18 08:39:36,271:INFO:Creating metrics dataframe
2023-12-18 08:39:36,274:INFO:Uploading results into container
2023-12-18 08:39:36,274:INFO:Uploading model into container now
2023-12-18 08:39:36,274:INFO:_master_model_container: 10
2023-12-18 08:39:36,274:INFO:_display_container: 2
2023-12-18 08:39:36,274:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7756, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-18 08:39:36,274:INFO:create_model() successfully completed......................................
2023-12-18 08:39:36,309:INFO:SubProcess create_model() end ==================================
2023-12-18 08:39:36,309:INFO:Creating metrics dataframe
2023-12-18 08:39:36,311:INFO:Initializing Linear Discriminant Analysis
2023-12-18 08:39:36,311:INFO:Total runtime is 1.3396697521209717 minutes
2023-12-18 08:39:36,311:INFO:SubProcess create_model() called ==================================
2023-12-18 08:39:36,312:INFO:Initializing create_model()
2023-12-18 08:39:36,312:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023CB9BA56C0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023CE80DB4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 08:39:36,312:INFO:Checking exceptions
2023-12-18 08:39:36,312:INFO:Importing libraries
2023-12-18 08:39:36,312:INFO:Copying training dataset
2023-12-18 08:39:36,316:INFO:Defining folds
2023-12-18 08:39:36,316:INFO:Declaring metric variables
2023-12-18 08:39:36,316:INFO:Importing untrained model
2023-12-18 08:39:36,316:INFO:Linear Discriminant Analysis Imported successfully
2023-12-18 08:39:36,316:INFO:Starting cross validation
2023-12-18 08:39:36,317:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 08:39:36,633:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:36,639:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:36,641:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:36,648:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:36,652:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:36,656:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:36,663:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:36,664:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:36,672:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:36,676:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:36,681:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:36,688:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:36,688:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:36,697:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:36,701:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:36,743:INFO:Calculating mean and std
2023-12-18 08:39:36,743:INFO:Creating metrics dataframe
2023-12-18 08:39:36,746:INFO:Uploading results into container
2023-12-18 08:39:36,746:INFO:Uploading model into container now
2023-12-18 08:39:36,747:INFO:_master_model_container: 11
2023-12-18 08:39:36,747:INFO:_display_container: 2
2023-12-18 08:39:36,747:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-12-18 08:39:36,747:INFO:create_model() successfully completed......................................
2023-12-18 08:39:36,782:INFO:SubProcess create_model() end ==================================
2023-12-18 08:39:36,782:INFO:Creating metrics dataframe
2023-12-18 08:39:36,785:INFO:Initializing Extra Trees Classifier
2023-12-18 08:39:36,785:INFO:Total runtime is 1.3475618243217469 minutes
2023-12-18 08:39:36,785:INFO:SubProcess create_model() called ==================================
2023-12-18 08:39:36,786:INFO:Initializing create_model()
2023-12-18 08:39:36,786:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023CB9BA56C0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023CE80DB4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 08:39:36,786:INFO:Checking exceptions
2023-12-18 08:39:36,786:INFO:Importing libraries
2023-12-18 08:39:36,786:INFO:Copying training dataset
2023-12-18 08:39:36,791:INFO:Defining folds
2023-12-18 08:39:36,791:INFO:Declaring metric variables
2023-12-18 08:39:36,791:INFO:Importing untrained model
2023-12-18 08:39:36,791:INFO:Extra Trees Classifier Imported successfully
2023-12-18 08:39:36,791:INFO:Starting cross validation
2023-12-18 08:39:36,793:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 08:39:41,450:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:41,470:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:41,528:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:41,545:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:41,617:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:41,635:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:41,659:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:41,705:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:41,707:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:41,733:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:41,741:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:41,741:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:41,766:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:41,774:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:41,797:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:41,844:INFO:Calculating mean and std
2023-12-18 08:39:41,845:INFO:Creating metrics dataframe
2023-12-18 08:39:41,848:INFO:Uploading results into container
2023-12-18 08:39:41,848:INFO:Uploading model into container now
2023-12-18 08:39:41,849:INFO:_master_model_container: 12
2023-12-18 08:39:41,849:INFO:_display_container: 2
2023-12-18 08:39:41,849:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=7756, verbose=0, warm_start=False)
2023-12-18 08:39:41,849:INFO:create_model() successfully completed......................................
2023-12-18 08:39:41,888:INFO:SubProcess create_model() end ==================================
2023-12-18 08:39:41,888:INFO:Creating metrics dataframe
2023-12-18 08:39:41,891:INFO:Initializing Light Gradient Boosting Machine
2023-12-18 08:39:41,892:INFO:Total runtime is 1.432677173614502 minutes
2023-12-18 08:39:41,892:INFO:SubProcess create_model() called ==================================
2023-12-18 08:39:41,892:INFO:Initializing create_model()
2023-12-18 08:39:41,892:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023CB9BA56C0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023CE80DB4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 08:39:41,892:INFO:Checking exceptions
2023-12-18 08:39:41,892:INFO:Importing libraries
2023-12-18 08:39:41,892:INFO:Copying training dataset
2023-12-18 08:39:41,898:INFO:Defining folds
2023-12-18 08:39:41,898:INFO:Declaring metric variables
2023-12-18 08:39:41,898:INFO:Importing untrained model
2023-12-18 08:39:41,898:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-18 08:39:41,898:INFO:Starting cross validation
2023-12-18 08:39:41,900:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 08:39:45,602:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:45,636:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:45,646:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:45,681:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:45,690:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:45,725:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:46,237:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:46,276:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:46,284:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:46,322:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:46,329:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:46,337:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:46,367:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:46,394:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:46,438:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:46,493:INFO:Calculating mean and std
2023-12-18 08:39:46,494:INFO:Creating metrics dataframe
2023-12-18 08:39:46,500:INFO:Uploading results into container
2023-12-18 08:39:46,501:INFO:Uploading model into container now
2023-12-18 08:39:46,501:INFO:_master_model_container: 13
2023-12-18 08:39:46,501:INFO:_display_container: 2
2023-12-18 08:39:46,502:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7756, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-18 08:39:46,502:INFO:create_model() successfully completed......................................
2023-12-18 08:39:46,559:INFO:SubProcess create_model() end ==================================
2023-12-18 08:39:46,559:INFO:Creating metrics dataframe
2023-12-18 08:39:46,563:INFO:Initializing Dummy Classifier
2023-12-18 08:39:46,563:INFO:Total runtime is 1.510529911518097 minutes
2023-12-18 08:39:46,563:INFO:SubProcess create_model() called ==================================
2023-12-18 08:39:46,563:INFO:Initializing create_model()
2023-12-18 08:39:46,563:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023CB9BA56C0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023CE80DB4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 08:39:46,563:INFO:Checking exceptions
2023-12-18 08:39:46,563:INFO:Importing libraries
2023-12-18 08:39:46,563:INFO:Copying training dataset
2023-12-18 08:39:46,569:INFO:Defining folds
2023-12-18 08:39:46,569:INFO:Declaring metric variables
2023-12-18 08:39:46,569:INFO:Importing untrained model
2023-12-18 08:39:46,569:INFO:Dummy Classifier Imported successfully
2023-12-18 08:39:46,569:INFO:Starting cross validation
2023-12-18 08:39:46,571:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 08:39:46,874:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:46,882:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:46,890:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:46,892:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:46,899:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:46,902:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:46,910:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:46,917:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:46,918:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 08:39:46,919:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:46,926:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:46,926:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 08:39:46,929:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:46,933:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 08:39:46,935:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 08:39:46,937:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:46,942:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 08:39:46,944:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:46,946:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:46,952:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:39:46,998:INFO:Calculating mean and std
2023-12-18 08:39:46,998:INFO:Creating metrics dataframe
2023-12-18 08:39:47,001:INFO:Uploading results into container
2023-12-18 08:39:47,002:INFO:Uploading model into container now
2023-12-18 08:39:47,002:INFO:_master_model_container: 14
2023-12-18 08:39:47,002:INFO:_display_container: 2
2023-12-18 08:39:47,002:INFO:DummyClassifier(constant=None, random_state=7756, strategy='prior')
2023-12-18 08:39:47,002:INFO:create_model() successfully completed......................................
2023-12-18 08:39:47,041:INFO:SubProcess create_model() end ==================================
2023-12-18 08:39:47,041:INFO:Creating metrics dataframe
2023-12-18 08:39:47,045:INFO:Initializing create_model()
2023-12-18 08:39:47,045:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023CB9BA56C0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7756, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 08:39:47,045:INFO:Checking exceptions
2023-12-18 08:39:47,046:INFO:Importing libraries
2023-12-18 08:39:47,046:INFO:Copying training dataset
2023-12-18 08:39:47,051:INFO:Defining folds
2023-12-18 08:39:47,051:INFO:Declaring metric variables
2023-12-18 08:39:47,051:INFO:Importing untrained model
2023-12-18 08:39:47,051:INFO:Declaring custom model
2023-12-18 08:39:47,052:INFO:Gradient Boosting Classifier Imported successfully
2023-12-18 08:39:47,053:INFO:Cross validation set to False
2023-12-18 08:39:47,053:INFO:Fitting Model
2023-12-18 08:40:32,347:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7756, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-18 08:40:32,347:INFO:create_model() successfully completed......................................
2023-12-18 08:40:32,388:INFO:_master_model_container: 14
2023-12-18 08:40:32,388:INFO:_display_container: 2
2023-12-18 08:40:32,388:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7756, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-18 08:40:32,388:INFO:compare_models() successfully completed......................................
2023-12-18 08:49:40,026:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:49:40,027:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:49:40,027:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:49:40,027:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:49:40,958:INFO:PyCaret ClassificationExperiment
2023-12-18 08:49:40,958:INFO:Logging name: clf-default-name
2023-12-18 08:49:40,958:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-18 08:49:40,958:INFO:version 3.2.0
2023-12-18 08:49:40,958:INFO:Initializing setup()
2023-12-18 08:49:40,958:INFO:self.USI: a1ed
2023-12-18 08:49:40,959:INFO:self._variable_keys: {'seed', 'logging_param', 'y', 'fold_generator', 'fix_imbalance', 'n_jobs_param', 'memory', 'idx', 'fold_groups_param', 'y_test', 'fold_shuffle_param', 'html_param', 'target_param', '_available_plots', 'X', 'exp_id', 'data', 'pipeline', 'USI', 'exp_name_log', '_ml_usecase', 'y_train', 'X_train', 'gpu_n_jobs_param', 'X_test', 'gpu_param', 'log_plots_param', 'is_multiclass'}
2023-12-18 08:49:40,959:INFO:Checking environment
2023-12-18 08:49:40,959:INFO:python_version: 3.10.4
2023-12-18 08:49:40,959:INFO:python_build: ('tags/v3.10.4:9d38120', 'Mar 23 2022 23:13:41')
2023-12-18 08:49:40,959:INFO:machine: AMD64
2023-12-18 08:49:40,968:INFO:platform: Windows-10-10.0.19045-SP0
2023-12-18 08:49:40,971:INFO:Memory: svmem(total=34029125632, available=17403367424, percent=48.9, used=16625758208, free=17403367424)
2023-12-18 08:49:40,971:INFO:Physical Core: 14
2023-12-18 08:49:40,971:INFO:Logical Core: 20
2023-12-18 08:49:40,971:INFO:Checking libraries
2023-12-18 08:49:40,971:INFO:System:
2023-12-18 08:49:40,971:INFO:    python: 3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit (AMD64)]
2023-12-18 08:49:40,971:INFO:executable: C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\python.exe
2023-12-18 08:49:40,971:INFO:   machine: Windows-10-10.0.19045-SP0
2023-12-18 08:49:40,971:INFO:PyCaret required dependencies:
2023-12-18 08:49:41,002:INFO:                 pip: 22.0.4
2023-12-18 08:49:41,002:INFO:          setuptools: 58.1.0
2023-12-18 08:49:41,002:INFO:             pycaret: 3.2.0
2023-12-18 08:49:41,002:INFO:             IPython: 8.18.1
2023-12-18 08:49:41,002:INFO:          ipywidgets: 8.1.1
2023-12-18 08:49:41,002:INFO:                tqdm: 4.66.1
2023-12-18 08:49:41,002:INFO:               numpy: 1.25.2
2023-12-18 08:49:41,002:INFO:              pandas: 1.5.3
2023-12-18 08:49:41,002:INFO:              jinja2: 3.1.2
2023-12-18 08:49:41,002:INFO:               scipy: 1.10.1
2023-12-18 08:49:41,002:INFO:              joblib: 1.3.2
2023-12-18 08:49:41,002:INFO:             sklearn: 1.2.2
2023-12-18 08:49:41,002:INFO:                pyod: 1.1.2
2023-12-18 08:49:41,002:INFO:            imblearn: 0.11.0
2023-12-18 08:49:41,002:INFO:   category_encoders: 2.6.3
2023-12-18 08:49:41,002:INFO:            lightgbm: 4.1.0
2023-12-18 08:49:41,002:INFO:               numba: 0.58.1
2023-12-18 08:49:41,002:INFO:            requests: 2.31.0
2023-12-18 08:49:41,002:INFO:          matplotlib: 3.6.0
2023-12-18 08:49:41,002:INFO:          scikitplot: 0.3.7
2023-12-18 08:49:41,002:INFO:         yellowbrick: 1.5
2023-12-18 08:49:41,002:INFO:              plotly: 5.18.0
2023-12-18 08:49:41,002:INFO:    plotly-resampler: Not installed
2023-12-18 08:49:41,002:INFO:             kaleido: 0.2.1
2023-12-18 08:49:41,002:INFO:           schemdraw: 0.15
2023-12-18 08:49:41,002:INFO:         statsmodels: 0.14.1
2023-12-18 08:49:41,002:INFO:              sktime: 0.21.1
2023-12-18 08:49:41,002:INFO:               tbats: 1.1.3
2023-12-18 08:49:41,002:INFO:            pmdarima: 2.0.4
2023-12-18 08:49:41,002:INFO:              psutil: 5.9.7
2023-12-18 08:49:41,002:INFO:          markupsafe: 2.1.3
2023-12-18 08:49:41,002:INFO:             pickle5: Not installed
2023-12-18 08:49:41,002:INFO:         cloudpickle: 3.0.0
2023-12-18 08:49:41,002:INFO:         deprecation: 2.1.0
2023-12-18 08:49:41,002:INFO:              xxhash: 3.4.1
2023-12-18 08:49:41,002:INFO:           wurlitzer: Not installed
2023-12-18 08:49:41,002:INFO:PyCaret optional dependencies:
2023-12-18 08:49:41,011:INFO:                shap: Not installed
2023-12-18 08:49:41,011:INFO:           interpret: Not installed
2023-12-18 08:49:41,011:INFO:                umap: Not installed
2023-12-18 08:49:41,011:INFO:     ydata_profiling: Not installed
2023-12-18 08:49:41,011:INFO:  explainerdashboard: Not installed
2023-12-18 08:49:41,011:INFO:             autoviz: Not installed
2023-12-18 08:49:41,011:INFO:           fairlearn: Not installed
2023-12-18 08:49:41,011:INFO:          deepchecks: Not installed
2023-12-18 08:49:41,011:INFO:             xgboost: Not installed
2023-12-18 08:49:41,011:INFO:            catboost: Not installed
2023-12-18 08:49:41,011:INFO:              kmodes: Not installed
2023-12-18 08:49:41,011:INFO:             mlxtend: Not installed
2023-12-18 08:49:41,011:INFO:       statsforecast: Not installed
2023-12-18 08:49:41,011:INFO:        tune_sklearn: Not installed
2023-12-18 08:49:41,011:INFO:                 ray: Not installed
2023-12-18 08:49:41,011:INFO:            hyperopt: Not installed
2023-12-18 08:49:41,011:INFO:              optuna: Not installed
2023-12-18 08:49:41,011:INFO:               skopt: Not installed
2023-12-18 08:49:41,011:INFO:              mlflow: Not installed
2023-12-18 08:49:41,011:INFO:              gradio: Not installed
2023-12-18 08:49:41,011:INFO:             fastapi: Not installed
2023-12-18 08:49:41,011:INFO:             uvicorn: Not installed
2023-12-18 08:49:41,011:INFO:              m2cgen: Not installed
2023-12-18 08:49:41,011:INFO:           evidently: Not installed
2023-12-18 08:49:41,011:INFO:               fugue: Not installed
2023-12-18 08:49:41,011:INFO:           streamlit: Not installed
2023-12-18 08:49:41,011:INFO:             prophet: Not installed
2023-12-18 08:49:41,011:INFO:None
2023-12-18 08:49:41,011:INFO:Set up data.
2023-12-18 08:49:41,023:INFO:Set up folding strategy.
2023-12-18 08:49:41,023:INFO:Set up train/test split.
2023-12-18 08:49:41,045:INFO:Set up index.
2023-12-18 08:49:41,045:INFO:Assigning column types.
2023-12-18 08:51:41,448:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:51:41,448:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:51:41,448:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:51:41,448:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:51:41,952:INFO:PyCaret ClassificationExperiment
2023-12-18 08:51:41,952:INFO:Logging name: clf-default-name
2023-12-18 08:51:41,952:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-18 08:51:41,952:INFO:version 3.2.0
2023-12-18 08:51:41,952:INFO:Initializing setup()
2023-12-18 08:51:41,952:INFO:self.USI: 9389
2023-12-18 08:51:41,952:INFO:self._variable_keys: {'X', 'exp_name_log', 'html_param', 'gpu_n_jobs_param', 'idx', 'fold_generator', 'memory', 'fold_groups_param', 'y_test', 'USI', 'data', 'target_param', 'exp_id', 'log_plots_param', 'n_jobs_param', 'seed', 'pipeline', 'fix_imbalance', 'y_train', 'gpu_param', 'logging_param', 'X_test', 'is_multiclass', '_ml_usecase', 'fold_shuffle_param', 'X_train', '_available_plots', 'y'}
2023-12-18 08:51:41,952:INFO:Checking environment
2023-12-18 08:51:41,952:INFO:python_version: 3.10.4
2023-12-18 08:51:41,952:INFO:python_build: ('tags/v3.10.4:9d38120', 'Mar 23 2022 23:13:41')
2023-12-18 08:51:41,952:INFO:machine: AMD64
2023-12-18 08:51:41,961:INFO:platform: Windows-10-10.0.19045-SP0
2023-12-18 08:51:41,965:INFO:Memory: svmem(total=34029125632, available=16889114624, percent=50.4, used=17140011008, free=16889114624)
2023-12-18 08:51:41,965:INFO:Physical Core: 14
2023-12-18 08:51:41,965:INFO:Logical Core: 20
2023-12-18 08:51:41,965:INFO:Checking libraries
2023-12-18 08:51:41,965:INFO:System:
2023-12-18 08:51:41,965:INFO:    python: 3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit (AMD64)]
2023-12-18 08:51:41,965:INFO:executable: C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\python.exe
2023-12-18 08:51:41,965:INFO:   machine: Windows-10-10.0.19045-SP0
2023-12-18 08:51:41,965:INFO:PyCaret required dependencies:
2023-12-18 08:51:41,977:INFO:                 pip: 22.0.4
2023-12-18 08:51:41,977:INFO:          setuptools: 58.1.0
2023-12-18 08:51:41,977:INFO:             pycaret: 3.2.0
2023-12-18 08:51:41,977:INFO:             IPython: 8.18.1
2023-12-18 08:51:41,977:INFO:          ipywidgets: 8.1.1
2023-12-18 08:51:41,977:INFO:                tqdm: 4.66.1
2023-12-18 08:51:41,977:INFO:               numpy: 1.25.2
2023-12-18 08:51:41,977:INFO:              pandas: 1.5.3
2023-12-18 08:51:41,977:INFO:              jinja2: 3.1.2
2023-12-18 08:51:41,977:INFO:               scipy: 1.10.1
2023-12-18 08:51:41,977:INFO:              joblib: 1.3.2
2023-12-18 08:51:41,977:INFO:             sklearn: 1.2.2
2023-12-18 08:51:41,977:INFO:                pyod: 1.1.2
2023-12-18 08:51:41,977:INFO:            imblearn: 0.11.0
2023-12-18 08:51:41,977:INFO:   category_encoders: 2.6.3
2023-12-18 08:51:41,977:INFO:            lightgbm: 4.1.0
2023-12-18 08:51:41,977:INFO:               numba: 0.58.1
2023-12-18 08:51:41,977:INFO:            requests: 2.31.0
2023-12-18 08:51:41,977:INFO:          matplotlib: 3.6.0
2023-12-18 08:51:41,977:INFO:          scikitplot: 0.3.7
2023-12-18 08:51:41,977:INFO:         yellowbrick: 1.5
2023-12-18 08:51:41,977:INFO:              plotly: 5.18.0
2023-12-18 08:51:41,978:INFO:    plotly-resampler: Not installed
2023-12-18 08:51:41,978:INFO:             kaleido: 0.2.1
2023-12-18 08:51:41,978:INFO:           schemdraw: 0.15
2023-12-18 08:51:41,978:INFO:         statsmodels: 0.14.1
2023-12-18 08:51:41,978:INFO:              sktime: 0.21.1
2023-12-18 08:51:41,978:INFO:               tbats: 1.1.3
2023-12-18 08:51:41,978:INFO:            pmdarima: 2.0.4
2023-12-18 08:51:41,978:INFO:              psutil: 5.9.7
2023-12-18 08:51:41,978:INFO:          markupsafe: 2.1.3
2023-12-18 08:51:41,978:INFO:             pickle5: Not installed
2023-12-18 08:51:41,978:INFO:         cloudpickle: 3.0.0
2023-12-18 08:51:41,978:INFO:         deprecation: 2.1.0
2023-12-18 08:51:41,978:INFO:              xxhash: 3.4.1
2023-12-18 08:51:41,978:INFO:           wurlitzer: Not installed
2023-12-18 08:51:41,978:INFO:PyCaret optional dependencies:
2023-12-18 08:51:41,986:INFO:                shap: Not installed
2023-12-18 08:51:41,987:INFO:           interpret: Not installed
2023-12-18 08:51:41,987:INFO:                umap: Not installed
2023-12-18 08:51:41,987:INFO:     ydata_profiling: Not installed
2023-12-18 08:51:41,987:INFO:  explainerdashboard: Not installed
2023-12-18 08:51:41,987:INFO:             autoviz: Not installed
2023-12-18 08:51:41,987:INFO:           fairlearn: Not installed
2023-12-18 08:51:41,987:INFO:          deepchecks: Not installed
2023-12-18 08:51:41,987:INFO:             xgboost: Not installed
2023-12-18 08:51:41,987:INFO:            catboost: Not installed
2023-12-18 08:51:41,987:INFO:              kmodes: Not installed
2023-12-18 08:51:41,987:INFO:             mlxtend: Not installed
2023-12-18 08:51:41,987:INFO:       statsforecast: Not installed
2023-12-18 08:51:41,987:INFO:        tune_sklearn: Not installed
2023-12-18 08:51:41,987:INFO:                 ray: Not installed
2023-12-18 08:51:41,987:INFO:            hyperopt: Not installed
2023-12-18 08:51:41,987:INFO:              optuna: Not installed
2023-12-18 08:51:41,987:INFO:               skopt: Not installed
2023-12-18 08:51:41,987:INFO:              mlflow: Not installed
2023-12-18 08:51:41,987:INFO:              gradio: Not installed
2023-12-18 08:51:41,987:INFO:             fastapi: Not installed
2023-12-18 08:51:41,987:INFO:             uvicorn: Not installed
2023-12-18 08:51:41,987:INFO:              m2cgen: Not installed
2023-12-18 08:51:41,987:INFO:           evidently: Not installed
2023-12-18 08:51:41,987:INFO:               fugue: Not installed
2023-12-18 08:51:41,987:INFO:           streamlit: Not installed
2023-12-18 08:51:41,987:INFO:             prophet: Not installed
2023-12-18 08:51:41,987:INFO:None
2023-12-18 08:51:41,987:INFO:Set up data.
2023-12-18 08:51:42,000:INFO:Set up folding strategy.
2023-12-18 08:51:42,000:INFO:Set up train/test split.
2023-12-18 08:51:42,023:INFO:Set up index.
2023-12-18 08:51:42,023:INFO:Assigning column types.
2023-12-18 08:51:42,026:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-18 08:51:42,049:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 08:51:42,051:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:51:42,067:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:51:42,068:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:51:42,090:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 08:51:42,090:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:51:42,103:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:51:42,103:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:51:42,104:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-18 08:51:42,125:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:51:42,139:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:51:42,139:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:51:42,161:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:51:42,176:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:51:42,176:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:51:42,176:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-18 08:51:42,212:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:51:42,212:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:51:42,256:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:51:42,256:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:51:42,266:INFO:Preparing preprocessing pipeline...
2023-12-18 08:51:42,267:INFO:Set up label encoding.
2023-12-18 08:51:42,267:INFO:Set up date feature engineering.
2023-12-18 08:51:42,268:INFO:Set up simple imputation.
2023-12-18 08:51:42,270:INFO:Set up encoding of categorical features.
2023-12-18 08:51:42,270:INFO:Set up imbalanced handling.
2023-12-18 08:51:42,271:INFO:Set up column name cleaning.
2023-12-18 08:51:42,500:INFO:Finished creating preprocessing pipeline.
2023-12-18 08:51:42,506:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MAXIMI~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['tmsp'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_i...
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-18 08:51:42,506:INFO:Creating final display dataframe.
2023-12-18 08:51:42,825:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                 Date features   
10         Categorical features   
11                   Preprocess   
12              Imputation type   
13           Numeric imputation   
14       Categorical imputation   
15     Maximum one-hot encoding   
16              Encoding method   
17                Fix imbalance   
18         Fix imbalance method   
19               Fold Generator   
20                  Fold Number   
21                     CPU Jobs   
22                      Use GPU   
23               Log Experiment   
24              Experiment Name   
25                          USI   

                                                Value  
0                                                2437  
1                                                 PSP  
2                                          Multiclass  
3   Goldcard: 0, Moneycard: 1, Simplecard: 2, UK_C...  
4                                          (50410, 8)  
5                                         (89207, 14)  
6                                         (74084, 14)  
7                                         (15123, 14)  
8                                                   4  
9                                                   1  
10                                                  2  
11                                               True  
12                                             simple  
13                                               mean  
14                                               mode  
15                                                 25  
16                                               None  
17                                               True  
18                                              SMOTE  
19                                    StratifiedKFold  
20                                                  5  
21                                                 -1  
22                                              False  
23                                              False  
24                                   clf-default-name  
25                                               9389  
2023-12-18 08:51:42,864:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:51:42,864:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:51:42,907:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:51:42,907:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:51:42,907:INFO:setup() successfully completed in 0.96s...............
2023-12-18 08:51:42,907:INFO:Initializing get_config()
2023-12-18 08:51:42,907:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025237FDC700>, variable=X_train)
2023-12-18 08:51:42,908:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2023-12-18 08:51:42,915:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:321: UserWarning: Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-12-18 08:51:42,919:INFO:Variable:  returned as        Unnamed: 0                tmsp      country  amount  success  \
20167       20167 2019-01-23 21:33:13  Switzerland     105        0   
5164         5164 2019-01-05 16:08:05      Germany     129        0   
39564       39564 2019-02-15 02:25:34      Germany     333        0   
5723         5723 2019-01-06 09:28:12      Germany     105        0   
16503       16503 2019-01-19 04:24:00      Germany     172        0   
...           ...                 ...          ...     ...      ...   
37093       37093 2019-02-12 06:38:31  Switzerland     175        0   
37971       37971 2019-02-13 05:14:54      Austria     290        0   
17786       17786 2019-01-21 02:06:28      Germany      13        0   
4028         4028 2019-01-04 11:18:34      Germany      21        0   
34771       34771 2019-02-09 10:17:53      Germany     147        1   

       3D_secured    card  
20167           0  Master  
5164            0  Master  
39564           1  Master  
5723            0  Master  
16503           0  Master  
...           ...     ...  
37093           0  Master  
37971           0  Diners  
17786           1  Master  
4028            0  Diners  
34771           1  Diners  

[35287 rows x 7 columns]
2023-12-18 08:51:42,919:INFO:get_config() successfully completed......................................
2023-12-18 08:54:56,559:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:54:56,559:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:54:56,559:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:54:56,559:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:54:57,084:INFO:PyCaret ClassificationExperiment
2023-12-18 08:54:57,084:INFO:Logging name: clf-default-name
2023-12-18 08:54:57,084:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-18 08:54:57,084:INFO:version 3.2.0
2023-12-18 08:54:57,084:INFO:Initializing setup()
2023-12-18 08:54:57,084:INFO:self.USI: b3e6
2023-12-18 08:54:57,084:INFO:self._variable_keys: {'data', 'n_jobs_param', 'X_train', 'pipeline', 'target_param', 'seed', 'USI', 'y_test', 'exp_id', 'logging_param', 'fold_generator', 'y_train', 'X', 'fold_shuffle_param', 'exp_name_log', 'fix_imbalance', 'log_plots_param', 'fold_groups_param', 'X_test', 'idx', '_available_plots', 'y', 'memory', 'gpu_param', 'is_multiclass', '_ml_usecase', 'html_param', 'gpu_n_jobs_param'}
2023-12-18 08:54:57,084:INFO:Checking environment
2023-12-18 08:54:57,084:INFO:python_version: 3.10.4
2023-12-18 08:54:57,084:INFO:python_build: ('tags/v3.10.4:9d38120', 'Mar 23 2022 23:13:41')
2023-12-18 08:54:57,084:INFO:machine: AMD64
2023-12-18 08:54:57,094:INFO:platform: Windows-10-10.0.19045-SP0
2023-12-18 08:54:57,097:INFO:Memory: svmem(total=34029125632, available=16890265600, percent=50.4, used=17138860032, free=16890265600)
2023-12-18 08:54:57,097:INFO:Physical Core: 14
2023-12-18 08:54:57,097:INFO:Logical Core: 20
2023-12-18 08:54:57,097:INFO:Checking libraries
2023-12-18 08:54:57,097:INFO:System:
2023-12-18 08:54:57,098:INFO:    python: 3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit (AMD64)]
2023-12-18 08:54:57,098:INFO:executable: C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\python.exe
2023-12-18 08:54:57,098:INFO:   machine: Windows-10-10.0.19045-SP0
2023-12-18 08:54:57,098:INFO:PyCaret required dependencies:
2023-12-18 08:54:57,111:INFO:                 pip: 22.0.4
2023-12-18 08:54:57,111:INFO:          setuptools: 58.1.0
2023-12-18 08:54:57,111:INFO:             pycaret: 3.2.0
2023-12-18 08:54:57,111:INFO:             IPython: 8.18.1
2023-12-18 08:54:57,111:INFO:          ipywidgets: 8.1.1
2023-12-18 08:54:57,111:INFO:                tqdm: 4.66.1
2023-12-18 08:54:57,111:INFO:               numpy: 1.25.2
2023-12-18 08:54:57,111:INFO:              pandas: 1.5.3
2023-12-18 08:54:57,111:INFO:              jinja2: 3.1.2
2023-12-18 08:54:57,111:INFO:               scipy: 1.10.1
2023-12-18 08:54:57,111:INFO:              joblib: 1.3.2
2023-12-18 08:54:57,111:INFO:             sklearn: 1.2.2
2023-12-18 08:54:57,111:INFO:                pyod: 1.1.2
2023-12-18 08:54:57,111:INFO:            imblearn: 0.11.0
2023-12-18 08:54:57,111:INFO:   category_encoders: 2.6.3
2023-12-18 08:54:57,111:INFO:            lightgbm: 4.1.0
2023-12-18 08:54:57,111:INFO:               numba: 0.58.1
2023-12-18 08:54:57,111:INFO:            requests: 2.31.0
2023-12-18 08:54:57,111:INFO:          matplotlib: 3.6.0
2023-12-18 08:54:57,111:INFO:          scikitplot: 0.3.7
2023-12-18 08:54:57,111:INFO:         yellowbrick: 1.5
2023-12-18 08:54:57,111:INFO:              plotly: 5.18.0
2023-12-18 08:54:57,111:INFO:    plotly-resampler: Not installed
2023-12-18 08:54:57,111:INFO:             kaleido: 0.2.1
2023-12-18 08:54:57,111:INFO:           schemdraw: 0.15
2023-12-18 08:54:57,111:INFO:         statsmodels: 0.14.1
2023-12-18 08:54:57,111:INFO:              sktime: 0.21.1
2023-12-18 08:54:57,111:INFO:               tbats: 1.1.3
2023-12-18 08:54:57,111:INFO:            pmdarima: 2.0.4
2023-12-18 08:54:57,111:INFO:              psutil: 5.9.7
2023-12-18 08:54:57,111:INFO:          markupsafe: 2.1.3
2023-12-18 08:54:57,111:INFO:             pickle5: Not installed
2023-12-18 08:54:57,111:INFO:         cloudpickle: 3.0.0
2023-12-18 08:54:57,111:INFO:         deprecation: 2.1.0
2023-12-18 08:54:57,111:INFO:              xxhash: 3.4.1
2023-12-18 08:54:57,111:INFO:           wurlitzer: Not installed
2023-12-18 08:54:57,111:INFO:PyCaret optional dependencies:
2023-12-18 08:54:57,120:INFO:                shap: Not installed
2023-12-18 08:54:57,120:INFO:           interpret: Not installed
2023-12-18 08:54:57,120:INFO:                umap: Not installed
2023-12-18 08:54:57,120:INFO:     ydata_profiling: Not installed
2023-12-18 08:54:57,120:INFO:  explainerdashboard: Not installed
2023-12-18 08:54:57,120:INFO:             autoviz: Not installed
2023-12-18 08:54:57,120:INFO:           fairlearn: Not installed
2023-12-18 08:54:57,120:INFO:          deepchecks: Not installed
2023-12-18 08:54:57,120:INFO:             xgboost: Not installed
2023-12-18 08:54:57,120:INFO:            catboost: Not installed
2023-12-18 08:54:57,120:INFO:              kmodes: Not installed
2023-12-18 08:54:57,120:INFO:             mlxtend: Not installed
2023-12-18 08:54:57,120:INFO:       statsforecast: Not installed
2023-12-18 08:54:57,120:INFO:        tune_sklearn: Not installed
2023-12-18 08:54:57,120:INFO:                 ray: Not installed
2023-12-18 08:54:57,120:INFO:            hyperopt: Not installed
2023-12-18 08:54:57,120:INFO:              optuna: Not installed
2023-12-18 08:54:57,120:INFO:               skopt: Not installed
2023-12-18 08:54:57,120:INFO:              mlflow: Not installed
2023-12-18 08:54:57,120:INFO:              gradio: Not installed
2023-12-18 08:54:57,120:INFO:             fastapi: Not installed
2023-12-18 08:54:57,120:INFO:             uvicorn: Not installed
2023-12-18 08:54:57,120:INFO:              m2cgen: Not installed
2023-12-18 08:54:57,120:INFO:           evidently: Not installed
2023-12-18 08:54:57,120:INFO:               fugue: Not installed
2023-12-18 08:54:57,120:INFO:           streamlit: Not installed
2023-12-18 08:54:57,120:INFO:             prophet: Not installed
2023-12-18 08:54:57,120:INFO:None
2023-12-18 08:54:57,120:INFO:Set up data.
2023-12-18 08:54:57,133:INFO:Set up folding strategy.
2023-12-18 08:54:57,133:INFO:Set up train/test split.
2023-12-18 08:54:57,156:INFO:Set up index.
2023-12-18 08:54:57,156:INFO:Assigning column types.
2023-12-18 08:54:57,159:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-18 08:54:57,182:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 08:54:57,184:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:54:57,207:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:54:57,208:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:54:57,237:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 08:54:57,237:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:54:57,255:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:54:57,256:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:54:57,256:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-18 08:54:57,286:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:54:57,305:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:54:57,305:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:54:57,334:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:54:57,352:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:54:57,353:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:54:57,353:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-18 08:54:57,400:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:54:57,400:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:54:57,451:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:54:57,451:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:54:57,452:INFO:Preparing preprocessing pipeline...
2023-12-18 08:54:57,453:INFO:Set up label encoding.
2023-12-18 08:54:57,453:INFO:Set up date feature engineering.
2023-12-18 08:54:57,453:INFO:Set up simple imputation.
2023-12-18 08:54:57,456:INFO:Set up encoding of categorical features.
2023-12-18 08:54:57,456:INFO:Set up imbalanced handling.
2023-12-18 08:54:57,456:INFO:Set up feature normalization.
2023-12-18 08:54:57,457:INFO:Set up column name cleaning.
2023-12-18 08:54:57,715:INFO:Finished creating preprocessing pipeline.
2023-12-18 08:54:57,721:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MAXIMI~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['tmsp'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_i...
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-18 08:54:57,721:INFO:Creating final display dataframe.
2023-12-18 08:54:58,082:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                 Date features   
10         Categorical features   
11                   Preprocess   
12              Imputation type   
13           Numeric imputation   
14       Categorical imputation   
15     Maximum one-hot encoding   
16              Encoding method   
17                Fix imbalance   
18         Fix imbalance method   
19                    Normalize   
20             Normalize method   
21               Fold Generator   
22                  Fold Number   
23                     CPU Jobs   
24                      Use GPU   
25               Log Experiment   
26              Experiment Name   
27                          USI   

                                                Value  
0                                                5017  
1                                                 PSP  
2                                          Multiclass  
3   Goldcard: 0, Moneycard: 1, Simplecard: 2, UK_C...  
4                                          (50410, 8)  
5                                         (89207, 14)  
6                                         (74084, 14)  
7                                         (15123, 14)  
8                                                   4  
9                                                   1  
10                                                  2  
11                                               True  
12                                             simple  
13                                               mean  
14                                               mode  
15                                                 25  
16                                               None  
17                                               True  
18                                              SMOTE  
19                                               True  
20                                             zscore  
21                                    StratifiedKFold  
22                                                  5  
23                                                 -1  
24                                              False  
25                                              False  
26                                   clf-default-name  
27                                               b3e6  
2023-12-18 08:54:58,123:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:54:58,123:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:54:58,162:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:54:58,162:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:54:58,162:INFO:setup() successfully completed in 1.08s...............
2023-12-18 08:54:58,162:INFO:Initializing get_config()
2023-12-18 08:54:58,162:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025CB5683EE0>, variable=X_train)
2023-12-18 08:54:58,162:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2023-12-18 08:54:58,163:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:321: UserWarning: Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-12-18 08:54:58,168:INFO:Variable:  returned as        Unnamed: 0                tmsp      country  amount  success  \
26765       26765 2019-02-01 10:29:35  Switzerland     328        0   
46021       46021 2019-02-23 10:23:29      Austria     133        0   
28297       28297 2019-02-02 20:42:41  Switzerland     121        0   
39804       39804 2019-02-15 10:04:30  Switzerland     137        1   
8507         8507 2019-01-09 08:57:00      Germany     205        0   
...           ...                 ...          ...     ...      ...   
37820       37820 2019-02-13 01:24:31      Germany     144        0   
18644       18644 2019-01-22 02:12:26  Switzerland     236        0   
39009       39009 2019-02-14 09:09:16      Germany     242        0   
28929       28929 2019-02-03 12:47:51      Germany      97        0   
23056       23056 2019-01-28 02:16:01      Germany      58        0   

       3D_secured    card  
26765           0  Master  
46021           0  Master  
28297           0  Master  
39804           1  Master  
8507            0  Master  
...           ...     ...  
37820           0  Master  
18644           0  Master  
39009           0  Master  
28929           0    Visa  
23056           0  Diners  

[35287 rows x 7 columns]
2023-12-18 08:54:58,168:INFO:get_config() successfully completed......................................
2023-12-18 08:55:12,663:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:55:12,663:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:55:12,663:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:55:12,663:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 08:55:13,236:INFO:PyCaret ClassificationExperiment
2023-12-18 08:55:13,236:INFO:Logging name: clf-default-name
2023-12-18 08:55:13,236:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-18 08:55:13,236:INFO:version 3.2.0
2023-12-18 08:55:13,236:INFO:Initializing setup()
2023-12-18 08:55:13,236:INFO:self.USI: dbed
2023-12-18 08:55:13,237:INFO:self._variable_keys: {'seed', 'fold_groups_param', 'y_test', 'memory', 'pipeline', 'logging_param', 'exp_id', 'log_plots_param', 'n_jobs_param', 'target_param', 'fold_shuffle_param', 'html_param', 'y_train', 'fold_generator', 'X_train', '_available_plots', 'data', 'exp_name_log', 'X_test', 'X', 'is_multiclass', 'gpu_param', 'fix_imbalance', 'gpu_n_jobs_param', 'y', '_ml_usecase', 'idx', 'USI'}
2023-12-18 08:55:13,237:INFO:Checking environment
2023-12-18 08:55:13,237:INFO:python_version: 3.10.4
2023-12-18 08:55:13,237:INFO:python_build: ('tags/v3.10.4:9d38120', 'Mar 23 2022 23:13:41')
2023-12-18 08:55:13,237:INFO:machine: AMD64
2023-12-18 08:55:13,246:INFO:platform: Windows-10-10.0.19045-SP0
2023-12-18 08:55:13,250:INFO:Memory: svmem(total=34029125632, available=16834818048, percent=50.5, used=17194307584, free=16834818048)
2023-12-18 08:55:13,250:INFO:Physical Core: 14
2023-12-18 08:55:13,250:INFO:Logical Core: 20
2023-12-18 08:55:13,250:INFO:Checking libraries
2023-12-18 08:55:13,250:INFO:System:
2023-12-18 08:55:13,250:INFO:    python: 3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit (AMD64)]
2023-12-18 08:55:13,250:INFO:executable: C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\python.exe
2023-12-18 08:55:13,250:INFO:   machine: Windows-10-10.0.19045-SP0
2023-12-18 08:55:13,250:INFO:PyCaret required dependencies:
2023-12-18 08:55:13,262:INFO:                 pip: 22.0.4
2023-12-18 08:55:13,262:INFO:          setuptools: 58.1.0
2023-12-18 08:55:13,262:INFO:             pycaret: 3.2.0
2023-12-18 08:55:13,262:INFO:             IPython: 8.18.1
2023-12-18 08:55:13,262:INFO:          ipywidgets: 8.1.1
2023-12-18 08:55:13,262:INFO:                tqdm: 4.66.1
2023-12-18 08:55:13,262:INFO:               numpy: 1.25.2
2023-12-18 08:55:13,262:INFO:              pandas: 1.5.3
2023-12-18 08:55:13,263:INFO:              jinja2: 3.1.2
2023-12-18 08:55:13,263:INFO:               scipy: 1.10.1
2023-12-18 08:55:13,263:INFO:              joblib: 1.3.2
2023-12-18 08:55:13,263:INFO:             sklearn: 1.2.2
2023-12-18 08:55:13,263:INFO:                pyod: 1.1.2
2023-12-18 08:55:13,263:INFO:            imblearn: 0.11.0
2023-12-18 08:55:13,263:INFO:   category_encoders: 2.6.3
2023-12-18 08:55:13,263:INFO:            lightgbm: 4.1.0
2023-12-18 08:55:13,263:INFO:               numba: 0.58.1
2023-12-18 08:55:13,263:INFO:            requests: 2.31.0
2023-12-18 08:55:13,263:INFO:          matplotlib: 3.6.0
2023-12-18 08:55:13,263:INFO:          scikitplot: 0.3.7
2023-12-18 08:55:13,263:INFO:         yellowbrick: 1.5
2023-12-18 08:55:13,263:INFO:              plotly: 5.18.0
2023-12-18 08:55:13,263:INFO:    plotly-resampler: Not installed
2023-12-18 08:55:13,263:INFO:             kaleido: 0.2.1
2023-12-18 08:55:13,263:INFO:           schemdraw: 0.15
2023-12-18 08:55:13,263:INFO:         statsmodels: 0.14.1
2023-12-18 08:55:13,263:INFO:              sktime: 0.21.1
2023-12-18 08:55:13,263:INFO:               tbats: 1.1.3
2023-12-18 08:55:13,263:INFO:            pmdarima: 2.0.4
2023-12-18 08:55:13,263:INFO:              psutil: 5.9.7
2023-12-18 08:55:13,263:INFO:          markupsafe: 2.1.3
2023-12-18 08:55:13,263:INFO:             pickle5: Not installed
2023-12-18 08:55:13,263:INFO:         cloudpickle: 3.0.0
2023-12-18 08:55:13,263:INFO:         deprecation: 2.1.0
2023-12-18 08:55:13,263:INFO:              xxhash: 3.4.1
2023-12-18 08:55:13,263:INFO:           wurlitzer: Not installed
2023-12-18 08:55:13,263:INFO:PyCaret optional dependencies:
2023-12-18 08:55:13,273:INFO:                shap: Not installed
2023-12-18 08:55:13,274:INFO:           interpret: Not installed
2023-12-18 08:55:13,274:INFO:                umap: Not installed
2023-12-18 08:55:13,274:INFO:     ydata_profiling: Not installed
2023-12-18 08:55:13,274:INFO:  explainerdashboard: Not installed
2023-12-18 08:55:13,274:INFO:             autoviz: Not installed
2023-12-18 08:55:13,274:INFO:           fairlearn: Not installed
2023-12-18 08:55:13,274:INFO:          deepchecks: Not installed
2023-12-18 08:55:13,274:INFO:             xgboost: Not installed
2023-12-18 08:55:13,274:INFO:            catboost: Not installed
2023-12-18 08:55:13,274:INFO:              kmodes: Not installed
2023-12-18 08:55:13,274:INFO:             mlxtend: Not installed
2023-12-18 08:55:13,274:INFO:       statsforecast: Not installed
2023-12-18 08:55:13,274:INFO:        tune_sklearn: Not installed
2023-12-18 08:55:13,274:INFO:                 ray: Not installed
2023-12-18 08:55:13,274:INFO:            hyperopt: Not installed
2023-12-18 08:55:13,274:INFO:              optuna: Not installed
2023-12-18 08:55:13,274:INFO:               skopt: Not installed
2023-12-18 08:55:13,274:INFO:              mlflow: Not installed
2023-12-18 08:55:13,274:INFO:              gradio: Not installed
2023-12-18 08:55:13,274:INFO:             fastapi: Not installed
2023-12-18 08:55:13,274:INFO:             uvicorn: Not installed
2023-12-18 08:55:13,274:INFO:              m2cgen: Not installed
2023-12-18 08:55:13,274:INFO:           evidently: Not installed
2023-12-18 08:55:13,274:INFO:               fugue: Not installed
2023-12-18 08:55:13,274:INFO:           streamlit: Not installed
2023-12-18 08:55:13,274:INFO:             prophet: Not installed
2023-12-18 08:55:13,274:INFO:None
2023-12-18 08:55:13,274:INFO:Set up data.
2023-12-18 08:55:13,287:INFO:Set up folding strategy.
2023-12-18 08:55:13,287:INFO:Set up train/test split.
2023-12-18 08:55:13,309:INFO:Set up index.
2023-12-18 08:55:13,310:INFO:Assigning column types.
2023-12-18 08:55:13,312:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-18 08:55:13,336:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 08:55:13,338:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:55:13,354:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:55:13,354:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:55:13,377:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 08:55:13,378:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:55:13,392:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:55:13,392:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:55:13,392:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-18 08:55:13,414:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:55:13,428:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:55:13,428:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:55:13,451:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 08:55:13,466:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:55:13,466:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:55:13,467:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-18 08:55:13,505:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:55:13,505:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:55:13,542:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:55:13,543:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:55:13,544:INFO:Preparing preprocessing pipeline...
2023-12-18 08:55:13,545:INFO:Set up label encoding.
2023-12-18 08:55:13,545:INFO:Set up date feature engineering.
2023-12-18 08:55:13,545:INFO:Set up simple imputation.
2023-12-18 08:55:13,547:INFO:Set up encoding of categorical features.
2023-12-18 08:55:13,547:INFO:Set up imbalanced handling.
2023-12-18 08:55:13,547:INFO:Set up feature normalization.
2023-12-18 08:55:13,548:INFO:Set up column name cleaning.
2023-12-18 08:55:13,809:INFO:Finished creating preprocessing pipeline.
2023-12-18 08:55:13,815:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MAXIMI~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['tmsp'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_i...
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-18 08:55:13,816:INFO:Creating final display dataframe.
2023-12-18 08:55:14,199:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                 Date features   
10         Categorical features   
11                   Preprocess   
12              Imputation type   
13           Numeric imputation   
14       Categorical imputation   
15     Maximum one-hot encoding   
16              Encoding method   
17                Fix imbalance   
18         Fix imbalance method   
19                    Normalize   
20             Normalize method   
21               Fold Generator   
22                  Fold Number   
23                     CPU Jobs   
24                      Use GPU   
25               Log Experiment   
26              Experiment Name   
27                          USI   

                                                Value  
0                                                7729  
1                                                 PSP  
2                                          Multiclass  
3   Goldcard: 0, Moneycard: 1, Simplecard: 2, UK_C...  
4                                          (50410, 8)  
5                                         (89207, 14)  
6                                         (74084, 14)  
7                                         (15123, 14)  
8                                                   4  
9                                                   1  
10                                                  2  
11                                               True  
12                                             simple  
13                                               mean  
14                                               mode  
15                                                 25  
16                                               None  
17                                               True  
18                                              SMOTE  
19                                               True  
20                                             zscore  
21                                    StratifiedKFold  
22                                                  5  
23                                                 -1  
24                                              False  
25                                              False  
26                                   clf-default-name  
27                                               dbed  
2023-12-18 08:55:14,240:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:55:14,240:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:55:14,278:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:55:14,279:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 08:55:14,279:INFO:setup() successfully completed in 1.05s...............
2023-12-18 08:55:14,279:INFO:Initializing compare_models()
2023-12-18 08:55:14,279:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2FF9BFEE0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F2FF9BFEE0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-12-18 08:55:14,279:INFO:Checking exceptions
2023-12-18 08:55:14,284:INFO:Preparing display monitor
2023-12-18 08:55:14,287:INFO:Initializing Logistic Regression
2023-12-18 08:55:14,287:INFO:Total runtime is 0.0 minutes
2023-12-18 08:55:14,287:INFO:SubProcess create_model() called ==================================
2023-12-18 08:55:14,287:INFO:Initializing create_model()
2023-12-18 08:55:14,287:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2FF9BFEE0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2B54C2BC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 08:55:14,287:INFO:Checking exceptions
2023-12-18 08:55:14,287:INFO:Importing libraries
2023-12-18 08:55:14,287:INFO:Copying training dataset
2023-12-18 08:55:14,291:INFO:Defining folds
2023-12-18 08:55:14,291:INFO:Declaring metric variables
2023-12-18 08:55:14,292:INFO:Importing untrained model
2023-12-18 08:55:14,292:INFO:Logistic Regression Imported successfully
2023-12-18 08:55:14,292:INFO:Starting cross validation
2023-12-18 08:55:14,293:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 08:55:16,895:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:16,919:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:16,919:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:16,922:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:16,922:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:16,942:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:16,942:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:16,944:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:16,944:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:16,945:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:16,965:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:16,988:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:17,032:INFO:Calculating mean and std
2023-12-18 08:55:17,032:INFO:Creating metrics dataframe
2023-12-18 08:55:17,035:INFO:Uploading results into container
2023-12-18 08:55:17,035:INFO:Uploading model into container now
2023-12-18 08:55:17,035:INFO:_master_model_container: 1
2023-12-18 08:55:17,035:INFO:_display_container: 2
2023-12-18 08:55:17,035:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7729, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-18 08:55:17,035:INFO:create_model() successfully completed......................................
2023-12-18 08:55:17,070:INFO:SubProcess create_model() end ==================================
2023-12-18 08:55:17,070:INFO:Creating metrics dataframe
2023-12-18 08:55:17,072:INFO:Initializing K Neighbors Classifier
2023-12-18 08:55:17,072:INFO:Total runtime is 0.046425493558247884 minutes
2023-12-18 08:55:17,072:INFO:SubProcess create_model() called ==================================
2023-12-18 08:55:17,072:INFO:Initializing create_model()
2023-12-18 08:55:17,072:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2FF9BFEE0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2B54C2BC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 08:55:17,072:INFO:Checking exceptions
2023-12-18 08:55:17,073:INFO:Importing libraries
2023-12-18 08:55:17,073:INFO:Copying training dataset
2023-12-18 08:55:17,077:INFO:Defining folds
2023-12-18 08:55:17,077:INFO:Declaring metric variables
2023-12-18 08:55:17,077:INFO:Importing untrained model
2023-12-18 08:55:17,077:INFO:K Neighbors Classifier Imported successfully
2023-12-18 08:55:17,077:INFO:Starting cross validation
2023-12-18 08:55:17,078:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 08:55:19,854:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:19,915:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:19,920:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:19,930:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:19,931:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:19,941:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:19,945:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:19,945:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:19,954:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:19,954:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:19,964:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:19,968:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:19,977:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:19,977:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:19,992:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:20,030:INFO:Calculating mean and std
2023-12-18 08:55:20,031:INFO:Creating metrics dataframe
2023-12-18 08:55:20,033:INFO:Uploading results into container
2023-12-18 08:55:20,034:INFO:Uploading model into container now
2023-12-18 08:55:20,034:INFO:_master_model_container: 2
2023-12-18 08:55:20,034:INFO:_display_container: 2
2023-12-18 08:55:20,034:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-12-18 08:55:20,034:INFO:create_model() successfully completed......................................
2023-12-18 08:55:20,070:INFO:SubProcess create_model() end ==================================
2023-12-18 08:55:20,070:INFO:Creating metrics dataframe
2023-12-18 08:55:20,072:INFO:Initializing Naive Bayes
2023-12-18 08:55:20,072:INFO:Total runtime is 0.09641743501027425 minutes
2023-12-18 08:55:20,072:INFO:SubProcess create_model() called ==================================
2023-12-18 08:55:20,073:INFO:Initializing create_model()
2023-12-18 08:55:20,073:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2FF9BFEE0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2B54C2BC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 08:55:20,073:INFO:Checking exceptions
2023-12-18 08:55:20,073:INFO:Importing libraries
2023-12-18 08:55:20,073:INFO:Copying training dataset
2023-12-18 08:55:20,078:INFO:Defining folds
2023-12-18 08:55:20,078:INFO:Declaring metric variables
2023-12-18 08:55:20,078:INFO:Importing untrained model
2023-12-18 08:55:20,078:INFO:Naive Bayes Imported successfully
2023-12-18 08:55:20,078:INFO:Starting cross validation
2023-12-18 08:55:20,079:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 08:55:21,854:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:21,855:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:21,855:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:21,855:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:21,858:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:21,879:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:21,879:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:21,880:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:21,880:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:21,882:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:21,901:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:21,902:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:21,902:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:21,902:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:21,905:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:21,939:INFO:Calculating mean and std
2023-12-18 08:55:21,940:INFO:Creating metrics dataframe
2023-12-18 08:55:21,944:INFO:Uploading results into container
2023-12-18 08:55:21,944:INFO:Uploading model into container now
2023-12-18 08:55:21,944:INFO:_master_model_container: 3
2023-12-18 08:55:21,944:INFO:_display_container: 2
2023-12-18 08:55:21,944:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-12-18 08:55:21,944:INFO:create_model() successfully completed......................................
2023-12-18 08:55:21,991:INFO:SubProcess create_model() end ==================================
2023-12-18 08:55:21,991:INFO:Creating metrics dataframe
2023-12-18 08:55:21,994:INFO:Initializing Decision Tree Classifier
2023-12-18 08:55:21,994:INFO:Total runtime is 0.12845053672790527 minutes
2023-12-18 08:55:21,994:INFO:SubProcess create_model() called ==================================
2023-12-18 08:55:21,994:INFO:Initializing create_model()
2023-12-18 08:55:21,994:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2FF9BFEE0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2B54C2BC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 08:55:21,994:INFO:Checking exceptions
2023-12-18 08:55:21,994:INFO:Importing libraries
2023-12-18 08:55:21,994:INFO:Copying training dataset
2023-12-18 08:55:21,999:INFO:Defining folds
2023-12-18 08:55:21,999:INFO:Declaring metric variables
2023-12-18 08:55:21,999:INFO:Importing untrained model
2023-12-18 08:55:21,999:INFO:Decision Tree Classifier Imported successfully
2023-12-18 08:55:21,999:INFO:Starting cross validation
2023-12-18 08:55:22,000:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 08:55:24,076:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:24,094:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:24,097:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:24,098:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:24,103:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:24,118:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:24,120:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:24,121:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:24,121:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:24,126:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:24,141:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:24,144:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:24,144:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:24,149:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:24,169:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:24,210:INFO:Calculating mean and std
2023-12-18 08:55:24,210:INFO:Creating metrics dataframe
2023-12-18 08:55:24,213:INFO:Uploading results into container
2023-12-18 08:55:24,213:INFO:Uploading model into container now
2023-12-18 08:55:24,213:INFO:_master_model_container: 4
2023-12-18 08:55:24,213:INFO:_display_container: 2
2023-12-18 08:55:24,213:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7729, splitter='best')
2023-12-18 08:55:24,213:INFO:create_model() successfully completed......................................
2023-12-18 08:55:24,248:INFO:SubProcess create_model() end ==================================
2023-12-18 08:55:24,248:INFO:Creating metrics dataframe
2023-12-18 08:55:24,251:INFO:Initializing SVM - Linear Kernel
2023-12-18 08:55:24,251:INFO:Total runtime is 0.1660694162050883 minutes
2023-12-18 08:55:24,251:INFO:SubProcess create_model() called ==================================
2023-12-18 08:55:24,251:INFO:Initializing create_model()
2023-12-18 08:55:24,251:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2FF9BFEE0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2B54C2BC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 08:55:24,251:INFO:Checking exceptions
2023-12-18 08:55:24,251:INFO:Importing libraries
2023-12-18 08:55:24,251:INFO:Copying training dataset
2023-12-18 08:55:24,256:INFO:Defining folds
2023-12-18 08:55:24,256:INFO:Declaring metric variables
2023-12-18 08:55:24,256:INFO:Importing untrained model
2023-12-18 08:55:24,256:INFO:SVM - Linear Kernel Imported successfully
2023-12-18 08:55:24,257:INFO:Starting cross validation
2023-12-18 08:55:24,258:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 08:55:25,006:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-18 08:55:25,007:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-18 08:55:25,007:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-18 08:55:25,015:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:25,016:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:25,016:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:25,022:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-18 08:55:25,023:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-18 08:55:25,032:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:25,034:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:25,040:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:25,040:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:25,040:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:25,056:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:25,058:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:25,063:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:25,063:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:25,063:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:25,079:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:25,082:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:25,126:INFO:Calculating mean and std
2023-12-18 08:55:25,126:INFO:Creating metrics dataframe
2023-12-18 08:55:25,128:INFO:Uploading results into container
2023-12-18 08:55:25,128:INFO:Uploading model into container now
2023-12-18 08:55:25,129:INFO:_master_model_container: 5
2023-12-18 08:55:25,129:INFO:_display_container: 2
2023-12-18 08:55:25,129:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7729, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-12-18 08:55:25,129:INFO:create_model() successfully completed......................................
2023-12-18 08:55:25,163:INFO:SubProcess create_model() end ==================================
2023-12-18 08:55:25,163:INFO:Creating metrics dataframe
2023-12-18 08:55:25,165:INFO:Initializing Ridge Classifier
2023-12-18 08:55:25,166:INFO:Total runtime is 0.1813247044881185 minutes
2023-12-18 08:55:25,166:INFO:SubProcess create_model() called ==================================
2023-12-18 08:55:25,166:INFO:Initializing create_model()
2023-12-18 08:55:25,166:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2FF9BFEE0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2B54C2BC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 08:55:25,166:INFO:Checking exceptions
2023-12-18 08:55:25,166:INFO:Importing libraries
2023-12-18 08:55:25,166:INFO:Copying training dataset
2023-12-18 08:55:25,171:INFO:Defining folds
2023-12-18 08:55:25,171:INFO:Declaring metric variables
2023-12-18 08:55:25,171:INFO:Importing untrained model
2023-12-18 08:55:25,172:INFO:Ridge Classifier Imported successfully
2023-12-18 08:55:25,172:INFO:Starting cross validation
2023-12-18 08:55:25,173:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 08:55:25,480:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-18 08:55:25,490:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:25,496:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-18 08:55:25,496:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-18 08:55:25,501:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-18 08:55:25,506:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-18 08:55:25,506:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:25,506:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:25,511:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:25,514:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:25,515:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:25,529:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:25,530:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:25,535:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:25,538:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:25,539:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:25,552:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:25,553:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:25,559:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:25,563:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:25,600:INFO:Calculating mean and std
2023-12-18 08:55:25,600:INFO:Creating metrics dataframe
2023-12-18 08:55:25,602:INFO:Uploading results into container
2023-12-18 08:55:25,603:INFO:Uploading model into container now
2023-12-18 08:55:25,603:INFO:_master_model_container: 6
2023-12-18 08:55:25,603:INFO:_display_container: 2
2023-12-18 08:55:25,603:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7729, solver='auto',
                tol=0.0001)
2023-12-18 08:55:25,603:INFO:create_model() successfully completed......................................
2023-12-18 08:55:25,637:INFO:SubProcess create_model() end ==================================
2023-12-18 08:55:25,637:INFO:Creating metrics dataframe
2023-12-18 08:55:25,640:INFO:Initializing Random Forest Classifier
2023-12-18 08:55:25,640:INFO:Total runtime is 0.18921651442845663 minutes
2023-12-18 08:55:25,640:INFO:SubProcess create_model() called ==================================
2023-12-18 08:55:25,640:INFO:Initializing create_model()
2023-12-18 08:55:25,640:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2FF9BFEE0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2B54C2BC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 08:55:25,640:INFO:Checking exceptions
2023-12-18 08:55:25,640:INFO:Importing libraries
2023-12-18 08:55:25,640:INFO:Copying training dataset
2023-12-18 08:55:25,645:INFO:Defining folds
2023-12-18 08:55:25,645:INFO:Declaring metric variables
2023-12-18 08:55:25,645:INFO:Importing untrained model
2023-12-18 08:55:25,645:INFO:Random Forest Classifier Imported successfully
2023-12-18 08:55:25,646:INFO:Starting cross validation
2023-12-18 08:55:25,647:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 08:55:31,178:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:31,183:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:31,230:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:31,239:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:31,239:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:31,283:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:31,289:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:31,291:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:31,302:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:31,327:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:31,341:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:31,381:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:31,459:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:31,489:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:31,516:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:31,556:INFO:Calculating mean and std
2023-12-18 08:55:31,557:INFO:Creating metrics dataframe
2023-12-18 08:55:31,561:INFO:Uploading results into container
2023-12-18 08:55:31,561:INFO:Uploading model into container now
2023-12-18 08:55:31,562:INFO:_master_model_container: 7
2023-12-18 08:55:31,562:INFO:_display_container: 2
2023-12-18 08:55:31,562:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7729, verbose=0, warm_start=False)
2023-12-18 08:55:31,562:INFO:create_model() successfully completed......................................
2023-12-18 08:55:31,603:INFO:SubProcess create_model() end ==================================
2023-12-18 08:55:31,603:INFO:Creating metrics dataframe
2023-12-18 08:55:31,606:INFO:Initializing Quadratic Discriminant Analysis
2023-12-18 08:55:31,606:INFO:Total runtime is 0.2886493484179179 minutes
2023-12-18 08:55:31,606:INFO:SubProcess create_model() called ==================================
2023-12-18 08:55:31,606:INFO:Initializing create_model()
2023-12-18 08:55:31,606:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2FF9BFEE0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2B54C2BC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 08:55:31,606:INFO:Checking exceptions
2023-12-18 08:55:31,606:INFO:Importing libraries
2023-12-18 08:55:31,606:INFO:Copying training dataset
2023-12-18 08:55:31,611:INFO:Defining folds
2023-12-18 08:55:31,611:INFO:Declaring metric variables
2023-12-18 08:55:31,611:INFO:Importing untrained model
2023-12-18 08:55:31,611:INFO:Quadratic Discriminant Analysis Imported successfully
2023-12-18 08:55:31,611:INFO:Starting cross validation
2023-12-18 08:55:31,613:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 08:55:31,899:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-18 08:55:31,907:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-18 08:55:31,911:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-18 08:55:31,915:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-18 08:55:31,918:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-18 08:55:31,986:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:31,993:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:31,997:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:32,000:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:32,003:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:32,014:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:32,021:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:32,025:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:32,028:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:32,031:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:32,042:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:32,049:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:32,053:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:32,057:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:32,060:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:32,110:INFO:Calculating mean and std
2023-12-18 08:55:32,111:INFO:Creating metrics dataframe
2023-12-18 08:55:32,113:INFO:Uploading results into container
2023-12-18 08:55:32,114:INFO:Uploading model into container now
2023-12-18 08:55:32,114:INFO:_master_model_container: 8
2023-12-18 08:55:32,114:INFO:_display_container: 2
2023-12-18 08:55:32,114:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-12-18 08:55:32,114:INFO:create_model() successfully completed......................................
2023-12-18 08:55:32,152:INFO:SubProcess create_model() end ==================================
2023-12-18 08:55:32,152:INFO:Creating metrics dataframe
2023-12-18 08:55:32,156:INFO:Initializing Ada Boost Classifier
2023-12-18 08:55:32,156:INFO:Total runtime is 0.2978161931037903 minutes
2023-12-18 08:55:32,156:INFO:SubProcess create_model() called ==================================
2023-12-18 08:55:32,156:INFO:Initializing create_model()
2023-12-18 08:55:32,156:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2FF9BFEE0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2B54C2BC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 08:55:32,156:INFO:Checking exceptions
2023-12-18 08:55:32,156:INFO:Importing libraries
2023-12-18 08:55:32,156:INFO:Copying training dataset
2023-12-18 08:55:32,162:INFO:Defining folds
2023-12-18 08:55:32,162:INFO:Declaring metric variables
2023-12-18 08:55:32,162:INFO:Importing untrained model
2023-12-18 08:55:32,162:INFO:Ada Boost Classifier Imported successfully
2023-12-18 08:55:32,162:INFO:Starting cross validation
2023-12-18 08:55:32,163:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 08:55:35,665:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:35,693:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:35,693:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:35,710:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 08:55:35,711:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:35,719:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:35,721:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:35,722:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:35,737:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 08:55:35,738:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:35,739:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:35,747:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:35,749:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:35,756:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 08:55:35,764:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 08:55:35,766:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:35,768:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:35,778:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:35,786:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 08:55:35,799:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:55:35,853:INFO:Calculating mean and std
2023-12-18 08:55:35,853:INFO:Creating metrics dataframe
2023-12-18 08:55:35,857:INFO:Uploading results into container
2023-12-18 08:55:35,857:INFO:Uploading model into container now
2023-12-18 08:55:35,857:INFO:_master_model_container: 9
2023-12-18 08:55:35,857:INFO:_display_container: 2
2023-12-18 08:55:35,858:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7729)
2023-12-18 08:55:35,858:INFO:create_model() successfully completed......................................
2023-12-18 08:55:35,895:INFO:SubProcess create_model() end ==================================
2023-12-18 08:55:35,896:INFO:Creating metrics dataframe
2023-12-18 08:55:35,899:INFO:Initializing Gradient Boosting Classifier
2023-12-18 08:55:35,899:INFO:Total runtime is 0.3602080345153809 minutes
2023-12-18 08:55:35,899:INFO:SubProcess create_model() called ==================================
2023-12-18 08:55:35,900:INFO:Initializing create_model()
2023-12-18 08:55:35,900:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2FF9BFEE0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2B54C2BC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 08:55:35,900:INFO:Checking exceptions
2023-12-18 08:55:35,900:INFO:Importing libraries
2023-12-18 08:55:35,900:INFO:Copying training dataset
2023-12-18 08:55:35,905:INFO:Defining folds
2023-12-18 08:55:35,905:INFO:Declaring metric variables
2023-12-18 08:55:35,905:INFO:Importing untrained model
2023-12-18 08:55:35,906:INFO:Gradient Boosting Classifier Imported successfully
2023-12-18 08:55:35,906:INFO:Starting cross validation
2023-12-18 08:55:35,907:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 08:56:28,774:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:28,800:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:28,826:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:28,884:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:28,909:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:28,912:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:28,933:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:28,937:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:28,961:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:29,006:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:29,029:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:29,050:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:29,488:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:29,507:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:29,526:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:29,560:INFO:Calculating mean and std
2023-12-18 08:56:29,561:INFO:Creating metrics dataframe
2023-12-18 08:56:29,563:INFO:Uploading results into container
2023-12-18 08:56:29,563:INFO:Uploading model into container now
2023-12-18 08:56:29,563:INFO:_master_model_container: 10
2023-12-18 08:56:29,563:INFO:_display_container: 2
2023-12-18 08:56:29,563:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7729, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-18 08:56:29,563:INFO:create_model() successfully completed......................................
2023-12-18 08:56:29,597:INFO:SubProcess create_model() end ==================================
2023-12-18 08:56:29,597:INFO:Creating metrics dataframe
2023-12-18 08:56:29,600:INFO:Initializing Linear Discriminant Analysis
2023-12-18 08:56:29,600:INFO:Total runtime is 1.2552161693572998 minutes
2023-12-18 08:56:29,600:INFO:SubProcess create_model() called ==================================
2023-12-18 08:56:29,600:INFO:Initializing create_model()
2023-12-18 08:56:29,600:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2FF9BFEE0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2B54C2BC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 08:56:29,600:INFO:Checking exceptions
2023-12-18 08:56:29,600:INFO:Importing libraries
2023-12-18 08:56:29,600:INFO:Copying training dataset
2023-12-18 08:56:29,604:INFO:Defining folds
2023-12-18 08:56:29,604:INFO:Declaring metric variables
2023-12-18 08:56:29,605:INFO:Importing untrained model
2023-12-18 08:56:29,605:INFO:Linear Discriminant Analysis Imported successfully
2023-12-18 08:56:29,605:INFO:Starting cross validation
2023-12-18 08:56:29,606:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 08:56:29,958:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:29,965:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:29,974:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:29,980:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:29,983:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:29,985:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:29,992:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:30,002:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:30,007:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:30,010:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:30,012:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:30,019:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:30,029:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:30,034:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:30,039:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:30,081:INFO:Calculating mean and std
2023-12-18 08:56:30,081:INFO:Creating metrics dataframe
2023-12-18 08:56:30,084:INFO:Uploading results into container
2023-12-18 08:56:30,085:INFO:Uploading model into container now
2023-12-18 08:56:30,085:INFO:_master_model_container: 11
2023-12-18 08:56:30,085:INFO:_display_container: 2
2023-12-18 08:56:30,085:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-12-18 08:56:30,085:INFO:create_model() successfully completed......................................
2023-12-18 08:56:30,123:INFO:SubProcess create_model() end ==================================
2023-12-18 08:56:30,123:INFO:Creating metrics dataframe
2023-12-18 08:56:30,127:INFO:Initializing Extra Trees Classifier
2023-12-18 08:56:30,127:INFO:Total runtime is 1.2640079935391744 minutes
2023-12-18 08:56:30,127:INFO:SubProcess create_model() called ==================================
2023-12-18 08:56:30,127:INFO:Initializing create_model()
2023-12-18 08:56:30,127:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2FF9BFEE0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2B54C2BC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 08:56:30,127:INFO:Checking exceptions
2023-12-18 08:56:30,127:INFO:Importing libraries
2023-12-18 08:56:30,127:INFO:Copying training dataset
2023-12-18 08:56:30,133:INFO:Defining folds
2023-12-18 08:56:30,133:INFO:Declaring metric variables
2023-12-18 08:56:30,133:INFO:Importing untrained model
2023-12-18 08:56:30,133:INFO:Extra Trees Classifier Imported successfully
2023-12-18 08:56:30,133:INFO:Starting cross validation
2023-12-18 08:56:30,135:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 08:56:34,922:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:34,944:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:35,042:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:35,059:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:35,147:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:35,152:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:35,157:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:35,161:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:35,191:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:35,195:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:35,200:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:35,235:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:35,240:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:35,245:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:35,289:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:35,336:INFO:Calculating mean and std
2023-12-18 08:56:35,337:INFO:Creating metrics dataframe
2023-12-18 08:56:35,340:INFO:Uploading results into container
2023-12-18 08:56:35,341:INFO:Uploading model into container now
2023-12-18 08:56:35,341:INFO:_master_model_container: 12
2023-12-18 08:56:35,341:INFO:_display_container: 2
2023-12-18 08:56:35,342:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=7729, verbose=0, warm_start=False)
2023-12-18 08:56:35,342:INFO:create_model() successfully completed......................................
2023-12-18 08:56:35,391:INFO:SubProcess create_model() end ==================================
2023-12-18 08:56:35,391:INFO:Creating metrics dataframe
2023-12-18 08:56:35,395:INFO:Initializing Light Gradient Boosting Machine
2023-12-18 08:56:35,395:INFO:Total runtime is 1.3518079797426859 minutes
2023-12-18 08:56:35,395:INFO:SubProcess create_model() called ==================================
2023-12-18 08:56:35,395:INFO:Initializing create_model()
2023-12-18 08:56:35,395:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2FF9BFEE0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2B54C2BC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 08:56:35,395:INFO:Checking exceptions
2023-12-18 08:56:35,395:INFO:Importing libraries
2023-12-18 08:56:35,395:INFO:Copying training dataset
2023-12-18 08:56:35,402:INFO:Defining folds
2023-12-18 08:56:35,402:INFO:Declaring metric variables
2023-12-18 08:56:35,402:INFO:Importing untrained model
2023-12-18 08:56:35,402:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-18 08:56:35,403:INFO:Starting cross validation
2023-12-18 08:56:35,404:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 08:56:39,298:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:39,342:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:39,385:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:40,006:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:40,059:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:40,062:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:40,076:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:40,098:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:40,108:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:40,114:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:40,115:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:40,141:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:40,161:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:40,169:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:40,184:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:40,263:INFO:Calculating mean and std
2023-12-18 08:56:40,263:INFO:Creating metrics dataframe
2023-12-18 08:56:40,266:INFO:Uploading results into container
2023-12-18 08:56:40,266:INFO:Uploading model into container now
2023-12-18 08:56:40,266:INFO:_master_model_container: 13
2023-12-18 08:56:40,266:INFO:_display_container: 2
2023-12-18 08:56:40,267:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7729, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-18 08:56:40,267:INFO:create_model() successfully completed......................................
2023-12-18 08:56:40,306:INFO:SubProcess create_model() end ==================================
2023-12-18 08:56:40,306:INFO:Creating metrics dataframe
2023-12-18 08:56:40,310:INFO:Initializing Dummy Classifier
2023-12-18 08:56:40,310:INFO:Total runtime is 1.4337249437967936 minutes
2023-12-18 08:56:40,310:INFO:SubProcess create_model() called ==================================
2023-12-18 08:56:40,310:INFO:Initializing create_model()
2023-12-18 08:56:40,310:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2FF9BFEE0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2B54C2BC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 08:56:40,310:INFO:Checking exceptions
2023-12-18 08:56:40,310:INFO:Importing libraries
2023-12-18 08:56:40,310:INFO:Copying training dataset
2023-12-18 08:56:40,316:INFO:Defining folds
2023-12-18 08:56:40,316:INFO:Declaring metric variables
2023-12-18 08:56:40,316:INFO:Importing untrained model
2023-12-18 08:56:40,317:INFO:Dummy Classifier Imported successfully
2023-12-18 08:56:40,317:INFO:Starting cross validation
2023-12-18 08:56:40,318:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 08:56:40,677:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:40,686:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:40,687:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:40,692:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:40,692:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:40,703:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:40,712:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:40,713:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:40,718:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:40,718:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:40,719:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 08:56:40,727:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 08:56:40,729:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 08:56:40,729:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:40,733:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 08:56:40,734:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 08:56:40,738:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:40,739:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:40,744:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:40,744:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 08:56:40,786:INFO:Calculating mean and std
2023-12-18 08:56:40,786:INFO:Creating metrics dataframe
2023-12-18 08:56:40,789:INFO:Uploading results into container
2023-12-18 08:56:40,790:INFO:Uploading model into container now
2023-12-18 08:56:40,790:INFO:_master_model_container: 14
2023-12-18 08:56:40,790:INFO:_display_container: 2
2023-12-18 08:56:40,790:INFO:DummyClassifier(constant=None, random_state=7729, strategy='prior')
2023-12-18 08:56:40,790:INFO:create_model() successfully completed......................................
2023-12-18 08:56:40,830:INFO:SubProcess create_model() end ==================================
2023-12-18 08:56:40,830:INFO:Creating metrics dataframe
2023-12-18 08:56:40,835:INFO:Initializing create_model()
2023-12-18 08:56:40,835:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2FF9BFEE0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7729, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 08:56:40,835:INFO:Checking exceptions
2023-12-18 08:56:40,835:INFO:Importing libraries
2023-12-18 08:56:40,835:INFO:Copying training dataset
2023-12-18 08:56:40,842:INFO:Defining folds
2023-12-18 08:56:40,842:INFO:Declaring metric variables
2023-12-18 08:56:40,842:INFO:Importing untrained model
2023-12-18 08:56:40,842:INFO:Declaring custom model
2023-12-18 08:56:40,843:INFO:Gradient Boosting Classifier Imported successfully
2023-12-18 08:56:40,844:INFO:Cross validation set to False
2023-12-18 08:56:40,844:INFO:Fitting Model
2023-12-18 08:57:26,963:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7729, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-18 08:57:26,963:INFO:create_model() successfully completed......................................
2023-12-18 08:57:27,009:INFO:_master_model_container: 14
2023-12-18 08:57:27,009:INFO:_display_container: 2
2023-12-18 08:57:27,010:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7729, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-18 08:57:27,010:INFO:compare_models() successfully completed......................................
2023-12-18 09:03:36,966:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 09:03:36,966:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 09:03:36,966:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 09:03:36,966:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 09:03:37,557:INFO:PyCaret ClassificationExperiment
2023-12-18 09:03:37,558:INFO:Logging name: clf-default-name
2023-12-18 09:03:37,558:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-18 09:03:37,558:INFO:version 3.2.0
2023-12-18 09:03:37,558:INFO:Initializing setup()
2023-12-18 09:03:37,558:INFO:self.USI: a4c5
2023-12-18 09:03:37,558:INFO:self._variable_keys: {'y_train', 'seed', 'logging_param', 'exp_name_log', 'fold_shuffle_param', 'gpu_n_jobs_param', 'fold_generator', 'X_train', 'y', 'memory', '_ml_usecase', 'fold_groups_param', '_available_plots', 'fix_imbalance', 'data', 'html_param', 'target_param', 'is_multiclass', 'X_test', 'exp_id', 'n_jobs_param', 'gpu_param', 'log_plots_param', 'idx', 'y_test', 'USI', 'X', 'pipeline'}
2023-12-18 09:03:37,558:INFO:Checking environment
2023-12-18 09:03:37,558:INFO:python_version: 3.10.4
2023-12-18 09:03:37,558:INFO:python_build: ('tags/v3.10.4:9d38120', 'Mar 23 2022 23:13:41')
2023-12-18 09:03:37,558:INFO:machine: AMD64
2023-12-18 09:03:37,567:INFO:platform: Windows-10-10.0.19045-SP0
2023-12-18 09:03:37,570:INFO:Memory: svmem(total=34029125632, available=19266633728, percent=43.4, used=14762491904, free=19266633728)
2023-12-18 09:03:37,570:INFO:Physical Core: 14
2023-12-18 09:03:37,570:INFO:Logical Core: 20
2023-12-18 09:03:37,570:INFO:Checking libraries
2023-12-18 09:03:37,570:INFO:System:
2023-12-18 09:03:37,570:INFO:    python: 3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit (AMD64)]
2023-12-18 09:03:37,570:INFO:executable: C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\python.exe
2023-12-18 09:03:37,570:INFO:   machine: Windows-10-10.0.19045-SP0
2023-12-18 09:03:37,570:INFO:PyCaret required dependencies:
2023-12-18 09:03:37,585:INFO:                 pip: 22.0.4
2023-12-18 09:03:37,585:INFO:          setuptools: 58.1.0
2023-12-18 09:03:37,585:INFO:             pycaret: 3.2.0
2023-12-18 09:03:37,585:INFO:             IPython: 8.18.1
2023-12-18 09:03:37,585:INFO:          ipywidgets: 8.1.1
2023-12-18 09:03:37,585:INFO:                tqdm: 4.66.1
2023-12-18 09:03:37,585:INFO:               numpy: 1.25.2
2023-12-18 09:03:37,585:INFO:              pandas: 1.5.3
2023-12-18 09:03:37,585:INFO:              jinja2: 3.1.2
2023-12-18 09:03:37,586:INFO:               scipy: 1.10.1
2023-12-18 09:03:37,586:INFO:              joblib: 1.3.2
2023-12-18 09:03:37,586:INFO:             sklearn: 1.2.2
2023-12-18 09:03:37,586:INFO:                pyod: 1.1.2
2023-12-18 09:03:37,586:INFO:            imblearn: 0.11.0
2023-12-18 09:03:37,586:INFO:   category_encoders: 2.6.3
2023-12-18 09:03:37,586:INFO:            lightgbm: 4.1.0
2023-12-18 09:03:37,586:INFO:               numba: 0.58.1
2023-12-18 09:03:37,586:INFO:            requests: 2.31.0
2023-12-18 09:03:37,586:INFO:          matplotlib: 3.6.0
2023-12-18 09:03:37,586:INFO:          scikitplot: 0.3.7
2023-12-18 09:03:37,586:INFO:         yellowbrick: 1.5
2023-12-18 09:03:37,586:INFO:              plotly: 5.18.0
2023-12-18 09:03:37,586:INFO:    plotly-resampler: Not installed
2023-12-18 09:03:37,586:INFO:             kaleido: 0.2.1
2023-12-18 09:03:37,586:INFO:           schemdraw: 0.15
2023-12-18 09:03:37,586:INFO:         statsmodels: 0.14.1
2023-12-18 09:03:37,586:INFO:              sktime: 0.21.1
2023-12-18 09:03:37,586:INFO:               tbats: 1.1.3
2023-12-18 09:03:37,586:INFO:            pmdarima: 2.0.4
2023-12-18 09:03:37,586:INFO:              psutil: 5.9.7
2023-12-18 09:03:37,586:INFO:          markupsafe: 2.1.3
2023-12-18 09:03:37,586:INFO:             pickle5: Not installed
2023-12-18 09:03:37,586:INFO:         cloudpickle: 3.0.0
2023-12-18 09:03:37,586:INFO:         deprecation: 2.1.0
2023-12-18 09:03:37,586:INFO:              xxhash: 3.4.1
2023-12-18 09:03:37,586:INFO:           wurlitzer: Not installed
2023-12-18 09:03:37,586:INFO:PyCaret optional dependencies:
2023-12-18 09:03:37,595:INFO:                shap: Not installed
2023-12-18 09:03:37,595:INFO:           interpret: Not installed
2023-12-18 09:03:37,596:INFO:                umap: Not installed
2023-12-18 09:03:37,596:INFO:     ydata_profiling: Not installed
2023-12-18 09:03:37,596:INFO:  explainerdashboard: Not installed
2023-12-18 09:03:37,596:INFO:             autoviz: Not installed
2023-12-18 09:03:37,596:INFO:           fairlearn: Not installed
2023-12-18 09:03:37,596:INFO:          deepchecks: Not installed
2023-12-18 09:03:37,596:INFO:             xgboost: Not installed
2023-12-18 09:03:37,596:INFO:            catboost: Not installed
2023-12-18 09:03:37,596:INFO:              kmodes: Not installed
2023-12-18 09:03:37,596:INFO:             mlxtend: Not installed
2023-12-18 09:03:37,596:INFO:       statsforecast: Not installed
2023-12-18 09:03:37,596:INFO:        tune_sklearn: Not installed
2023-12-18 09:03:37,596:INFO:                 ray: Not installed
2023-12-18 09:03:37,596:INFO:            hyperopt: Not installed
2023-12-18 09:03:37,596:INFO:              optuna: Not installed
2023-12-18 09:03:37,596:INFO:               skopt: Not installed
2023-12-18 09:03:37,596:INFO:              mlflow: Not installed
2023-12-18 09:03:37,596:INFO:              gradio: Not installed
2023-12-18 09:03:37,596:INFO:             fastapi: Not installed
2023-12-18 09:03:37,596:INFO:             uvicorn: Not installed
2023-12-18 09:03:37,596:INFO:              m2cgen: Not installed
2023-12-18 09:03:37,596:INFO:           evidently: Not installed
2023-12-18 09:03:37,596:INFO:               fugue: Not installed
2023-12-18 09:03:37,596:INFO:           streamlit: Not installed
2023-12-18 09:03:37,596:INFO:             prophet: Not installed
2023-12-18 09:03:37,596:INFO:None
2023-12-18 09:03:37,596:INFO:Set up data.
2023-12-18 09:04:27,452:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 09:04:27,452:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 09:04:27,452:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 09:04:27,452:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 09:04:28,002:INFO:PyCaret ClassificationExperiment
2023-12-18 09:04:28,002:INFO:Logging name: clf-default-name
2023-12-18 09:04:28,002:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-18 09:04:28,002:INFO:version 3.2.0
2023-12-18 09:04:28,002:INFO:Initializing setup()
2023-12-18 09:04:28,002:INFO:self.USI: 0130
2023-12-18 09:04:28,002:INFO:self._variable_keys: {'fold_groups_param', 'seed', 'fold_shuffle_param', 'fold_generator', 'y', 'X_train', 'data', 'pipeline', 'X_test', 'gpu_param', 'y_train', '_ml_usecase', 'X', 'n_jobs_param', 'idx', 'memory', 'exp_id', 'USI', 'log_plots_param', 'gpu_n_jobs_param', 'is_multiclass', '_available_plots', 'target_param', 'y_test', 'html_param', 'exp_name_log', 'logging_param', 'fix_imbalance'}
2023-12-18 09:04:28,002:INFO:Checking environment
2023-12-18 09:04:28,002:INFO:python_version: 3.10.4
2023-12-18 09:04:28,002:INFO:python_build: ('tags/v3.10.4:9d38120', 'Mar 23 2022 23:13:41')
2023-12-18 09:04:28,002:INFO:machine: AMD64
2023-12-18 09:04:28,013:INFO:platform: Windows-10-10.0.19045-SP0
2023-12-18 09:04:28,016:INFO:Memory: svmem(total=34029125632, available=19152150528, percent=43.7, used=14876975104, free=19152150528)
2023-12-18 09:04:28,016:INFO:Physical Core: 14
2023-12-18 09:04:28,016:INFO:Logical Core: 20
2023-12-18 09:04:28,016:INFO:Checking libraries
2023-12-18 09:04:28,016:INFO:System:
2023-12-18 09:04:28,017:INFO:    python: 3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit (AMD64)]
2023-12-18 09:04:28,017:INFO:executable: C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\python.exe
2023-12-18 09:04:28,017:INFO:   machine: Windows-10-10.0.19045-SP0
2023-12-18 09:04:28,017:INFO:PyCaret required dependencies:
2023-12-18 09:04:28,030:INFO:                 pip: 22.0.4
2023-12-18 09:04:28,030:INFO:          setuptools: 58.1.0
2023-12-18 09:04:28,030:INFO:             pycaret: 3.2.0
2023-12-18 09:04:28,030:INFO:             IPython: 8.18.1
2023-12-18 09:04:28,030:INFO:          ipywidgets: 8.1.1
2023-12-18 09:04:28,030:INFO:                tqdm: 4.66.1
2023-12-18 09:04:28,030:INFO:               numpy: 1.25.2
2023-12-18 09:04:28,030:INFO:              pandas: 1.5.3
2023-12-18 09:04:28,030:INFO:              jinja2: 3.1.2
2023-12-18 09:04:28,030:INFO:               scipy: 1.10.1
2023-12-18 09:04:28,030:INFO:              joblib: 1.3.2
2023-12-18 09:04:28,030:INFO:             sklearn: 1.2.2
2023-12-18 09:04:28,030:INFO:                pyod: 1.1.2
2023-12-18 09:04:28,030:INFO:            imblearn: 0.11.0
2023-12-18 09:04:28,030:INFO:   category_encoders: 2.6.3
2023-12-18 09:04:28,030:INFO:            lightgbm: 4.1.0
2023-12-18 09:04:28,030:INFO:               numba: 0.58.1
2023-12-18 09:04:28,030:INFO:            requests: 2.31.0
2023-12-18 09:04:28,030:INFO:          matplotlib: 3.6.0
2023-12-18 09:04:28,030:INFO:          scikitplot: 0.3.7
2023-12-18 09:04:28,030:INFO:         yellowbrick: 1.5
2023-12-18 09:04:28,030:INFO:              plotly: 5.18.0
2023-12-18 09:04:28,030:INFO:    plotly-resampler: Not installed
2023-12-18 09:04:28,030:INFO:             kaleido: 0.2.1
2023-12-18 09:04:28,030:INFO:           schemdraw: 0.15
2023-12-18 09:04:28,030:INFO:         statsmodels: 0.14.1
2023-12-18 09:04:28,030:INFO:              sktime: 0.21.1
2023-12-18 09:04:28,030:INFO:               tbats: 1.1.3
2023-12-18 09:04:28,030:INFO:            pmdarima: 2.0.4
2023-12-18 09:04:28,030:INFO:              psutil: 5.9.7
2023-12-18 09:04:28,030:INFO:          markupsafe: 2.1.3
2023-12-18 09:04:28,030:INFO:             pickle5: Not installed
2023-12-18 09:04:28,030:INFO:         cloudpickle: 3.0.0
2023-12-18 09:04:28,030:INFO:         deprecation: 2.1.0
2023-12-18 09:04:28,030:INFO:              xxhash: 3.4.1
2023-12-18 09:04:28,030:INFO:           wurlitzer: Not installed
2023-12-18 09:04:28,030:INFO:PyCaret optional dependencies:
2023-12-18 09:04:28,039:INFO:                shap: Not installed
2023-12-18 09:04:28,039:INFO:           interpret: Not installed
2023-12-18 09:04:28,039:INFO:                umap: Not installed
2023-12-18 09:04:28,039:INFO:     ydata_profiling: Not installed
2023-12-18 09:04:28,039:INFO:  explainerdashboard: Not installed
2023-12-18 09:04:28,039:INFO:             autoviz: Not installed
2023-12-18 09:04:28,039:INFO:           fairlearn: Not installed
2023-12-18 09:04:28,039:INFO:          deepchecks: Not installed
2023-12-18 09:04:28,039:INFO:             xgboost: Not installed
2023-12-18 09:04:28,039:INFO:            catboost: Not installed
2023-12-18 09:04:28,039:INFO:              kmodes: Not installed
2023-12-18 09:04:28,039:INFO:             mlxtend: Not installed
2023-12-18 09:04:28,039:INFO:       statsforecast: Not installed
2023-12-18 09:04:28,039:INFO:        tune_sklearn: Not installed
2023-12-18 09:04:28,039:INFO:                 ray: Not installed
2023-12-18 09:04:28,039:INFO:            hyperopt: Not installed
2023-12-18 09:04:28,039:INFO:              optuna: Not installed
2023-12-18 09:04:28,039:INFO:               skopt: Not installed
2023-12-18 09:04:28,039:INFO:              mlflow: Not installed
2023-12-18 09:04:28,039:INFO:              gradio: Not installed
2023-12-18 09:04:28,039:INFO:             fastapi: Not installed
2023-12-18 09:04:28,039:INFO:             uvicorn: Not installed
2023-12-18 09:04:28,039:INFO:              m2cgen: Not installed
2023-12-18 09:04:28,039:INFO:           evidently: Not installed
2023-12-18 09:04:28,039:INFO:               fugue: Not installed
2023-12-18 09:04:28,039:INFO:           streamlit: Not installed
2023-12-18 09:04:28,039:INFO:             prophet: Not installed
2023-12-18 09:04:28,039:INFO:None
2023-12-18 09:04:28,039:INFO:Set up data.
2023-12-18 09:04:28,045:INFO:Set up folding strategy.
2023-12-18 09:04:28,045:INFO:Set up train/test split.
2023-12-18 09:04:28,048:INFO:Set up index.
2023-12-18 09:04:28,048:INFO:Assigning column types.
2023-12-18 09:04:28,050:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-18 09:04:28,072:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 09:04:28,073:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 09:04:28,091:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:04:28,091:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:04:28,113:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 09:04:28,113:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 09:04:28,127:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:04:28,127:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:04:28,127:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-18 09:04:28,150:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 09:04:28,163:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:04:28,163:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:04:28,185:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 09:04:28,199:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:04:28,199:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:04:28,199:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-18 09:04:28,235:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:04:28,235:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:04:28,271:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:04:28,271:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:04:28,273:INFO:Preparing preprocessing pipeline...
2023-12-18 09:04:28,273:INFO:Set up label encoding.
2023-12-18 09:04:28,273:INFO:Set up simple imputation.
2023-12-18 09:04:28,273:INFO:Set up imbalanced handling.
2023-12-18 09:04:28,273:INFO:Set up feature normalization.
2023-12-18 09:04:28,274:INFO:Set up column name cleaning.
2023-12-18 09:04:28,359:INFO:Finished creating preprocessing pipeline.
2023-12-18 09:04:28,364:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MAXIMI~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['id', 'radius_mean',
                                             'texture_mean', 'perimeter_mean',
                                             'area_mean', 'smoothness_mean',
                                             'compactness_mea...
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-18 09:04:28,364:INFO:Creating final display dataframe.
2023-12-18 09:04:28,456:INFO:Setup _display_container:                     Description             Value
0                    Session id              7974
1                        Target         diagnosis
2                   Target type            Binary
3                Target mapping        B: 0, M: 1
4           Original data shape         (569, 32)
5        Transformed data shape         (671, 32)
6   Transformed train set shape         (500, 32)
7    Transformed test set shape         (171, 32)
8              Numeric features                31
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13                Fix imbalance              True
14         Fix imbalance method             SMOTE
15                    Normalize              True
16             Normalize method            zscore
17               Fold Generator   StratifiedKFold
18                  Fold Number                 5
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              0130
2023-12-18 09:04:28,493:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:04:28,494:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:04:28,528:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:04:28,529:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:04:28,529:INFO:setup() successfully completed in 0.53s...............
2023-12-18 09:04:28,529:INFO:Initializing compare_models()
2023-12-18 09:04:28,529:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A437E0F9A0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001A437E0F9A0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-12-18 09:04:28,529:INFO:Checking exceptions
2023-12-18 09:04:28,531:INFO:Preparing display monitor
2023-12-18 09:04:28,534:INFO:Initializing Logistic Regression
2023-12-18 09:04:28,534:INFO:Total runtime is 0.0 minutes
2023-12-18 09:04:28,534:INFO:SubProcess create_model() called ==================================
2023-12-18 09:04:28,534:INFO:Initializing create_model()
2023-12-18 09:04:28,534:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A437E0F9A0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A464EF4CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:04:28,534:INFO:Checking exceptions
2023-12-18 09:04:28,534:INFO:Importing libraries
2023-12-18 09:04:28,534:INFO:Copying training dataset
2023-12-18 09:04:28,536:INFO:Defining folds
2023-12-18 09:04:28,536:INFO:Declaring metric variables
2023-12-18 09:04:28,536:INFO:Importing untrained model
2023-12-18 09:04:28,536:INFO:Logistic Regression Imported successfully
2023-12-18 09:04:28,536:INFO:Starting cross validation
2023-12-18 09:04:28,537:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:04:30,644:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:30,644:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:30,645:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:30,645:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:30,646:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:30,646:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:30,647:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:30,647:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:30,647:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:30,647:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:30,647:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:30,648:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:30,648:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:30,658:INFO:Calculating mean and std
2023-12-18 09:04:30,659:INFO:Creating metrics dataframe
2023-12-18 09:04:30,661:INFO:Uploading results into container
2023-12-18 09:04:30,661:INFO:Uploading model into container now
2023-12-18 09:04:30,662:INFO:_master_model_container: 1
2023-12-18 09:04:30,662:INFO:_display_container: 2
2023-12-18 09:04:30,662:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7974, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-18 09:04:30,662:INFO:create_model() successfully completed......................................
2023-12-18 09:04:30,700:INFO:SubProcess create_model() end ==================================
2023-12-18 09:04:30,700:INFO:Creating metrics dataframe
2023-12-18 09:04:30,702:INFO:Initializing K Neighbors Classifier
2023-12-18 09:04:30,702:INFO:Total runtime is 0.03612678050994873 minutes
2023-12-18 09:04:30,703:INFO:SubProcess create_model() called ==================================
2023-12-18 09:04:30,703:INFO:Initializing create_model()
2023-12-18 09:04:30,703:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A437E0F9A0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A464EF4CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:04:30,703:INFO:Checking exceptions
2023-12-18 09:04:30,703:INFO:Importing libraries
2023-12-18 09:04:30,703:INFO:Copying training dataset
2023-12-18 09:04:30,704:INFO:Defining folds
2023-12-18 09:04:30,704:INFO:Declaring metric variables
2023-12-18 09:04:30,704:INFO:Importing untrained model
2023-12-18 09:04:30,705:INFO:K Neighbors Classifier Imported successfully
2023-12-18 09:04:30,705:INFO:Starting cross validation
2023-12-18 09:04:30,705:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:04:32,064:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:32,066:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:32,066:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:32,066:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:32,066:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:32,066:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:32,067:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:32,067:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:32,067:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:32,067:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:32,068:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:32,069:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:32,069:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:32,082:INFO:Calculating mean and std
2023-12-18 09:04:32,083:INFO:Creating metrics dataframe
2023-12-18 09:04:32,085:INFO:Uploading results into container
2023-12-18 09:04:32,085:INFO:Uploading model into container now
2023-12-18 09:04:32,086:INFO:_master_model_container: 2
2023-12-18 09:04:32,086:INFO:_display_container: 2
2023-12-18 09:04:32,086:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-12-18 09:04:32,086:INFO:create_model() successfully completed......................................
2023-12-18 09:04:32,121:INFO:SubProcess create_model() end ==================================
2023-12-18 09:04:32,122:INFO:Creating metrics dataframe
2023-12-18 09:04:32,124:INFO:Initializing Naive Bayes
2023-12-18 09:04:32,124:INFO:Total runtime is 0.059826771418253585 minutes
2023-12-18 09:04:32,124:INFO:SubProcess create_model() called ==================================
2023-12-18 09:04:32,124:INFO:Initializing create_model()
2023-12-18 09:04:32,124:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A437E0F9A0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A464EF4CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:04:32,124:INFO:Checking exceptions
2023-12-18 09:04:32,124:INFO:Importing libraries
2023-12-18 09:04:32,124:INFO:Copying training dataset
2023-12-18 09:04:32,126:INFO:Defining folds
2023-12-18 09:04:32,126:INFO:Declaring metric variables
2023-12-18 09:04:32,126:INFO:Importing untrained model
2023-12-18 09:04:32,126:INFO:Naive Bayes Imported successfully
2023-12-18 09:04:32,126:INFO:Starting cross validation
2023-12-18 09:04:32,127:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:04:33,459:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:33,459:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:33,459:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:33,460:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:33,460:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:33,461:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:33,461:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:33,461:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:33,461:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:33,461:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:33,462:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:33,462:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:33,462:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:33,463:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:33,468:INFO:Calculating mean and std
2023-12-18 09:04:33,468:INFO:Creating metrics dataframe
2023-12-18 09:04:33,471:INFO:Uploading results into container
2023-12-18 09:04:33,471:INFO:Uploading model into container now
2023-12-18 09:04:33,471:INFO:_master_model_container: 3
2023-12-18 09:04:33,471:INFO:_display_container: 2
2023-12-18 09:04:33,471:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-12-18 09:04:33,472:INFO:create_model() successfully completed......................................
2023-12-18 09:04:33,514:INFO:SubProcess create_model() end ==================================
2023-12-18 09:04:33,514:INFO:Creating metrics dataframe
2023-12-18 09:04:33,516:INFO:Initializing Decision Tree Classifier
2023-12-18 09:04:33,516:INFO:Total runtime is 0.08302677075068157 minutes
2023-12-18 09:04:33,517:INFO:SubProcess create_model() called ==================================
2023-12-18 09:04:33,517:INFO:Initializing create_model()
2023-12-18 09:04:33,517:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A437E0F9A0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A464EF4CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:04:33,517:INFO:Checking exceptions
2023-12-18 09:04:33,517:INFO:Importing libraries
2023-12-18 09:04:33,517:INFO:Copying training dataset
2023-12-18 09:04:33,518:INFO:Defining folds
2023-12-18 09:04:33,518:INFO:Declaring metric variables
2023-12-18 09:04:33,518:INFO:Importing untrained model
2023-12-18 09:04:33,519:INFO:Decision Tree Classifier Imported successfully
2023-12-18 09:04:33,519:INFO:Starting cross validation
2023-12-18 09:04:33,519:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:04:34,862:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:34,862:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:34,863:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:34,863:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:34,864:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:34,864:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:34,864:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:34,865:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:34,865:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:34,865:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:34,865:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:34,866:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:34,866:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:34,867:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:34,867:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:34,878:INFO:Calculating mean and std
2023-12-18 09:04:34,879:INFO:Creating metrics dataframe
2023-12-18 09:04:34,881:INFO:Uploading results into container
2023-12-18 09:04:34,882:INFO:Uploading model into container now
2023-12-18 09:04:34,882:INFO:_master_model_container: 4
2023-12-18 09:04:34,882:INFO:_display_container: 2
2023-12-18 09:04:34,882:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7974, splitter='best')
2023-12-18 09:04:34,882:INFO:create_model() successfully completed......................................
2023-12-18 09:04:34,919:INFO:SubProcess create_model() end ==================================
2023-12-18 09:04:34,920:INFO:Creating metrics dataframe
2023-12-18 09:04:34,922:INFO:Initializing SVM - Linear Kernel
2023-12-18 09:04:34,922:INFO:Total runtime is 0.10646140972773235 minutes
2023-12-18 09:04:34,922:INFO:SubProcess create_model() called ==================================
2023-12-18 09:04:34,922:INFO:Initializing create_model()
2023-12-18 09:04:34,922:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A437E0F9A0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A464EF4CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:04:34,922:INFO:Checking exceptions
2023-12-18 09:04:34,922:INFO:Importing libraries
2023-12-18 09:04:34,922:INFO:Copying training dataset
2023-12-18 09:04:34,924:INFO:Defining folds
2023-12-18 09:04:34,924:INFO:Declaring metric variables
2023-12-18 09:04:34,924:INFO:Importing untrained model
2023-12-18 09:04:34,924:INFO:SVM - Linear Kernel Imported successfully
2023-12-18 09:04:34,924:INFO:Starting cross validation
2023-12-18 09:04:34,925:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:04:34,951:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-18 09:04:34,951:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-18 09:04:34,952:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:34,952:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:34,953:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-18 09:04:34,953:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-18 09:04:34,953:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

m metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-18 09:04:34,953:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:34,953:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:34,954:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:34,954:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:34,955:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:34,955:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:34,955:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:34,955:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:34,955:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:34,956:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:34,956:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:34,957:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:34,973:INFO:Calculating mean and std
2023-12-18 09:04:34,973:INFO:Creating metrics dataframe
2023-12-18 09:04:34,975:INFO:Uploading results into container
2023-12-18 09:04:34,975:INFO:Uploading model into container now
2023-12-18 09:04:34,975:INFO:_master_model_container: 5
2023-12-18 09:04:34,975:INFO:_display_container: 2
2023-12-18 09:04:34,976:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7974, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-12-18 09:04:34,976:INFO:create_model() successfully completed......................................
2023-12-18 09:04:35,008:INFO:SubProcess create_model() end ==================================
2023-12-18 09:04:35,008:INFO:Creating metrics dataframe
2023-12-18 09:04:35,010:INFO:Initializing Ridge Classifier
2023-12-18 09:04:35,010:INFO:Total runtime is 0.1079269846280416 minutes
2023-12-18 09:04:35,010:INFO:SubProcess create_model() called ==================================
2023-12-18 09:04:35,011:INFO:Initializing create_model()
2023-12-18 09:04:35,011:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A437E0F9A0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A464EF4CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:04:35,011:INFO:Checking exceptions
2023-12-18 09:04:35,011:INFO:Importing libraries
2023-12-18 09:04:35,011:INFO:Copying training dataset
2023-12-18 09:04:35,012:INFO:Defining folds
2023-12-18 09:04:35,012:INFO:Declaring metric variables
2023-12-18 09:04:35,012:INFO:Importing untrained model
2023-12-18 09:04:35,013:INFO:Ridge Classifier Imported successfully
2023-12-18 09:04:35,013:INFO:Starting cross validation
2023-12-18 09:04:35,013:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:04:35,038:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-18 09:04:35,038:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-18 09:04:35,039:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,039:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,040:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,040:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,041:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,042:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,046:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-18 09:04:35,047:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,048:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,049:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-18 09:04:35,049:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,050:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,050:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-18 09:04:35,051:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,051:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,052:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,052:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,053:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,067:INFO:Calculating mean and std
2023-12-18 09:04:35,067:INFO:Creating metrics dataframe
2023-12-18 09:04:35,069:INFO:Uploading results into container
2023-12-18 09:04:35,069:INFO:Uploading model into container now
2023-12-18 09:04:35,069:INFO:_master_model_container: 6
2023-12-18 09:04:35,069:INFO:_display_container: 2
2023-12-18 09:04:35,069:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7974, solver='auto',
                tol=0.0001)
2023-12-18 09:04:35,069:INFO:create_model() successfully completed......................................
2023-12-18 09:04:35,100:INFO:SubProcess create_model() end ==================================
2023-12-18 09:04:35,100:INFO:Creating metrics dataframe
2023-12-18 09:04:35,102:INFO:Initializing Random Forest Classifier
2023-12-18 09:04:35,102:INFO:Total runtime is 0.10946008761723837 minutes
2023-12-18 09:04:35,102:INFO:SubProcess create_model() called ==================================
2023-12-18 09:04:35,103:INFO:Initializing create_model()
2023-12-18 09:04:35,103:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A437E0F9A0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A464EF4CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:04:35,103:INFO:Checking exceptions
2023-12-18 09:04:35,103:INFO:Importing libraries
2023-12-18 09:04:35,103:INFO:Copying training dataset
2023-12-18 09:04:35,104:INFO:Defining folds
2023-12-18 09:04:35,104:INFO:Declaring metric variables
2023-12-18 09:04:35,104:INFO:Importing untrained model
2023-12-18 09:04:35,104:INFO:Random Forest Classifier Imported successfully
2023-12-18 09:04:35,105:INFO:Starting cross validation
2023-12-18 09:04:35,105:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:04:35,335:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,336:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,338:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,351:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,351:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,351:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,353:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,353:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,353:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,353:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,355:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,355:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,355:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,355:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,364:INFO:Calculating mean and std
2023-12-18 09:04:35,364:INFO:Creating metrics dataframe
2023-12-18 09:04:35,366:INFO:Uploading results into container
2023-12-18 09:04:35,366:INFO:Uploading model into container now
2023-12-18 09:04:35,367:INFO:_master_model_container: 7
2023-12-18 09:04:35,367:INFO:_display_container: 2
2023-12-18 09:04:35,367:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7974, verbose=0, warm_start=False)
2023-12-18 09:04:35,367:INFO:create_model() successfully completed......................................
2023-12-18 09:04:35,397:INFO:SubProcess create_model() end ==================================
2023-12-18 09:04:35,397:INFO:Creating metrics dataframe
2023-12-18 09:04:35,399:INFO:Initializing Quadratic Discriminant Analysis
2023-12-18 09:04:35,399:INFO:Total runtime is 0.1144101103146871 minutes
2023-12-18 09:04:35,399:INFO:SubProcess create_model() called ==================================
2023-12-18 09:04:35,400:INFO:Initializing create_model()
2023-12-18 09:04:35,400:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A437E0F9A0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A464EF4CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:04:35,400:INFO:Checking exceptions
2023-12-18 09:04:35,400:INFO:Importing libraries
2023-12-18 09:04:35,400:INFO:Copying training dataset
2023-12-18 09:04:35,401:INFO:Defining folds
2023-12-18 09:04:35,401:INFO:Declaring metric variables
2023-12-18 09:04:35,401:INFO:Importing untrained model
2023-12-18 09:04:35,401:INFO:Quadratic Discriminant Analysis Imported successfully
2023-12-18 09:04:35,401:INFO:Starting cross validation
2023-12-18 09:04:35,402:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:04:35,431:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,433:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,434:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,434:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,435:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,436:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,436:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,436:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,437:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,437:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,438:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,438:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,443:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,444:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,445:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,458:INFO:Calculating mean and std
2023-12-18 09:04:35,458:INFO:Creating metrics dataframe
2023-12-18 09:04:35,460:INFO:Uploading results into container
2023-12-18 09:04:35,460:INFO:Uploading model into container now
2023-12-18 09:04:35,460:INFO:_master_model_container: 8
2023-12-18 09:04:35,460:INFO:_display_container: 2
2023-12-18 09:04:35,460:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-12-18 09:04:35,460:INFO:create_model() successfully completed......................................
2023-12-18 09:04:35,491:INFO:SubProcess create_model() end ==================================
2023-12-18 09:04:35,491:INFO:Creating metrics dataframe
2023-12-18 09:04:35,494:INFO:Initializing Ada Boost Classifier
2023-12-18 09:04:35,494:INFO:Total runtime is 0.11599340836207073 minutes
2023-12-18 09:04:35,494:INFO:SubProcess create_model() called ==================================
2023-12-18 09:04:35,494:INFO:Initializing create_model()
2023-12-18 09:04:35,494:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A437E0F9A0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A464EF4CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:04:35,494:INFO:Checking exceptions
2023-12-18 09:04:35,494:INFO:Importing libraries
2023-12-18 09:04:35,494:INFO:Copying training dataset
2023-12-18 09:04:35,496:INFO:Defining folds
2023-12-18 09:04:35,496:INFO:Declaring metric variables
2023-12-18 09:04:35,496:INFO:Importing untrained model
2023-12-18 09:04:35,496:INFO:Ada Boost Classifier Imported successfully
2023-12-18 09:04:35,496:INFO:Starting cross validation
2023-12-18 09:04:35,497:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:04:35,638:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,639:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,640:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,640:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,641:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,641:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,641:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,641:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,641:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,642:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,642:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,642:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,643:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,643:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,644:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:35,660:INFO:Calculating mean and std
2023-12-18 09:04:35,660:INFO:Creating metrics dataframe
2023-12-18 09:04:35,662:INFO:Uploading results into container
2023-12-18 09:04:35,662:INFO:Uploading model into container now
2023-12-18 09:04:35,662:INFO:_master_model_container: 9
2023-12-18 09:04:35,662:INFO:_display_container: 2
2023-12-18 09:04:35,663:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7974)
2023-12-18 09:04:35,663:INFO:create_model() successfully completed......................................
2023-12-18 09:04:35,693:INFO:SubProcess create_model() end ==================================
2023-12-18 09:04:35,693:INFO:Creating metrics dataframe
2023-12-18 09:04:35,695:INFO:Initializing Gradient Boosting Classifier
2023-12-18 09:04:35,695:INFO:Total runtime is 0.11934519608815512 minutes
2023-12-18 09:04:35,695:INFO:SubProcess create_model() called ==================================
2023-12-18 09:04:35,695:INFO:Initializing create_model()
2023-12-18 09:04:35,695:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A437E0F9A0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A464EF4CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:04:35,695:INFO:Checking exceptions
2023-12-18 09:04:35,695:INFO:Importing libraries
2023-12-18 09:04:35,695:INFO:Copying training dataset
2023-12-18 09:04:35,697:INFO:Defining folds
2023-12-18 09:04:35,697:INFO:Declaring metric variables
2023-12-18 09:04:35,697:INFO:Importing untrained model
2023-12-18 09:04:35,697:INFO:Gradient Boosting Classifier Imported successfully
2023-12-18 09:04:35,697:INFO:Starting cross validation
2023-12-18 09:04:35,698:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:04:36,150:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,151:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,152:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,152:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,153:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,153:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,154:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,154:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,155:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,155:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,156:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,156:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,157:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,157:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,171:INFO:Calculating mean and std
2023-12-18 09:04:36,171:INFO:Creating metrics dataframe
2023-12-18 09:04:36,173:INFO:Uploading results into container
2023-12-18 09:04:36,173:INFO:Uploading model into container now
2023-12-18 09:04:36,173:INFO:_master_model_container: 10
2023-12-18 09:04:36,173:INFO:_display_container: 2
2023-12-18 09:04:36,174:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7974, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-18 09:04:36,174:INFO:create_model() successfully completed......................................
2023-12-18 09:04:36,204:INFO:SubProcess create_model() end ==================================
2023-12-18 09:04:36,204:INFO:Creating metrics dataframe
2023-12-18 09:04:36,206:INFO:Initializing Linear Discriminant Analysis
2023-12-18 09:04:36,206:INFO:Total runtime is 0.1278643568356832 minutes
2023-12-18 09:04:36,206:INFO:SubProcess create_model() called ==================================
2023-12-18 09:04:36,206:INFO:Initializing create_model()
2023-12-18 09:04:36,206:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A437E0F9A0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A464EF4CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:04:36,206:INFO:Checking exceptions
2023-12-18 09:04:36,207:INFO:Importing libraries
2023-12-18 09:04:36,207:INFO:Copying training dataset
2023-12-18 09:04:36,208:INFO:Defining folds
2023-12-18 09:04:36,208:INFO:Declaring metric variables
2023-12-18 09:04:36,208:INFO:Importing untrained model
2023-12-18 09:04:36,208:INFO:Linear Discriminant Analysis Imported successfully
2023-12-18 09:04:36,209:INFO:Starting cross validation
2023-12-18 09:04:36,209:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:04:36,238:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,238:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,239:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,240:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,240:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,240:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,240:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,241:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,241:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,241:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,241:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,241:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,242:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,242:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,242:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,251:INFO:Calculating mean and std
2023-12-18 09:04:36,251:INFO:Creating metrics dataframe
2023-12-18 09:04:36,253:INFO:Uploading results into container
2023-12-18 09:04:36,253:INFO:Uploading model into container now
2023-12-18 09:04:36,253:INFO:_master_model_container: 11
2023-12-18 09:04:36,253:INFO:_display_container: 2
2023-12-18 09:04:36,253:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-12-18 09:04:36,253:INFO:create_model() successfully completed......................................
2023-12-18 09:04:36,282:INFO:SubProcess create_model() end ==================================
2023-12-18 09:04:36,282:INFO:Creating metrics dataframe
2023-12-18 09:04:36,285:INFO:Initializing Extra Trees Classifier
2023-12-18 09:04:36,285:INFO:Total runtime is 0.12918129364649455 minutes
2023-12-18 09:04:36,285:INFO:SubProcess create_model() called ==================================
2023-12-18 09:04:36,285:INFO:Initializing create_model()
2023-12-18 09:04:36,285:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A437E0F9A0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A464EF4CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:04:36,285:INFO:Checking exceptions
2023-12-18 09:04:36,285:INFO:Importing libraries
2023-12-18 09:04:36,285:INFO:Copying training dataset
2023-12-18 09:04:36,287:INFO:Defining folds
2023-12-18 09:04:36,287:INFO:Declaring metric variables
2023-12-18 09:04:36,287:INFO:Importing untrained model
2023-12-18 09:04:36,287:INFO:Extra Trees Classifier Imported successfully
2023-12-18 09:04:36,287:INFO:Starting cross validation
2023-12-18 09:04:36,288:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:04:36,493:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,494:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,494:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,494:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,494:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,495:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,495:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,496:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,496:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,496:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,497:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,498:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,498:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,498:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,498:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,505:INFO:Calculating mean and std
2023-12-18 09:04:36,505:INFO:Creating metrics dataframe
2023-12-18 09:04:36,507:INFO:Uploading results into container
2023-12-18 09:04:36,507:INFO:Uploading model into container now
2023-12-18 09:04:36,508:INFO:_master_model_container: 12
2023-12-18 09:04:36,508:INFO:_display_container: 2
2023-12-18 09:04:36,508:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=7974, verbose=0, warm_start=False)
2023-12-18 09:04:36,508:INFO:create_model() successfully completed......................................
2023-12-18 09:04:36,538:INFO:SubProcess create_model() end ==================================
2023-12-18 09:04:36,538:INFO:Creating metrics dataframe
2023-12-18 09:04:36,541:INFO:Initializing Light Gradient Boosting Machine
2023-12-18 09:04:36,541:INFO:Total runtime is 0.13343655268351237 minutes
2023-12-18 09:04:36,541:INFO:SubProcess create_model() called ==================================
2023-12-18 09:04:36,541:INFO:Initializing create_model()
2023-12-18 09:04:36,541:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A437E0F9A0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A464EF4CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:04:36,541:INFO:Checking exceptions
2023-12-18 09:04:36,541:INFO:Importing libraries
2023-12-18 09:04:36,541:INFO:Copying training dataset
2023-12-18 09:04:36,542:INFO:Defining folds
2023-12-18 09:04:36,542:INFO:Declaring metric variables
2023-12-18 09:04:36,542:INFO:Importing untrained model
2023-12-18 09:04:36,543:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-18 09:04:36,543:INFO:Starting cross validation
2023-12-18 09:04:36,543:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:04:36,898:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,899:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,900:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,902:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,902:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,906:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,924:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,926:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,927:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,928:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,929:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,930:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,937:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,939:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,941:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:36,946:INFO:Calculating mean and std
2023-12-18 09:04:36,946:INFO:Creating metrics dataframe
2023-12-18 09:04:36,949:INFO:Uploading results into container
2023-12-18 09:04:36,950:INFO:Uploading model into container now
2023-12-18 09:04:36,950:INFO:_master_model_container: 13
2023-12-18 09:04:36,950:INFO:_display_container: 2
2023-12-18 09:04:36,951:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7974, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-18 09:04:36,951:INFO:create_model() successfully completed......................................
2023-12-18 09:04:36,997:INFO:SubProcess create_model() end ==================================
2023-12-18 09:04:36,997:INFO:Creating metrics dataframe
2023-12-18 09:04:37,002:INFO:Initializing Dummy Classifier
2023-12-18 09:04:37,002:INFO:Total runtime is 0.14112291733423868 minutes
2023-12-18 09:04:37,002:INFO:SubProcess create_model() called ==================================
2023-12-18 09:04:37,002:INFO:Initializing create_model()
2023-12-18 09:04:37,002:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A437E0F9A0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A464EF4CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:04:37,002:INFO:Checking exceptions
2023-12-18 09:04:37,002:INFO:Importing libraries
2023-12-18 09:04:37,002:INFO:Copying training dataset
2023-12-18 09:04:37,005:INFO:Defining folds
2023-12-18 09:04:37,005:INFO:Declaring metric variables
2023-12-18 09:04:37,005:INFO:Importing untrained model
2023-12-18 09:04:37,006:INFO:Dummy Classifier Imported successfully
2023-12-18 09:04:37,006:INFO:Starting cross validation
2023-12-18 09:04:37,007:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:04:37,047:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:37,049:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:37,049:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:37,049:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:37,049:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:04:37,050:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:37,050:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:37,050:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:37,050:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:37,050:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:37,051:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:04:37,051:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:04:37,051:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:37,051:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:37,052:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:37,052:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:37,052:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:04:37,052:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:04:37,053:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:37,053:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'M') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:04:37,071:INFO:Calculating mean and std
2023-12-18 09:04:37,071:INFO:Creating metrics dataframe
2023-12-18 09:04:37,073:INFO:Uploading results into container
2023-12-18 09:04:37,074:INFO:Uploading model into container now
2023-12-18 09:04:37,074:INFO:_master_model_container: 14
2023-12-18 09:04:37,074:INFO:_display_container: 2
2023-12-18 09:04:37,074:INFO:DummyClassifier(constant=None, random_state=7974, strategy='prior')
2023-12-18 09:04:37,074:INFO:create_model() successfully completed......................................
2023-12-18 09:04:37,105:INFO:SubProcess create_model() end ==================================
2023-12-18 09:04:37,105:INFO:Creating metrics dataframe
2023-12-18 09:04:37,108:INFO:Initializing create_model()
2023-12-18 09:04:37,108:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A437E0F9A0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7974, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:04:37,108:INFO:Checking exceptions
2023-12-18 09:04:37,109:INFO:Importing libraries
2023-12-18 09:04:37,109:INFO:Copying training dataset
2023-12-18 09:04:37,110:INFO:Defining folds
2023-12-18 09:04:37,110:INFO:Declaring metric variables
2023-12-18 09:04:37,110:INFO:Importing untrained model
2023-12-18 09:04:37,110:INFO:Declaring custom model
2023-12-18 09:04:37,110:INFO:Gradient Boosting Classifier Imported successfully
2023-12-18 09:04:37,111:INFO:Cross validation set to False
2023-12-18 09:04:37,111:INFO:Fitting Model
2023-12-18 09:04:37,587:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7974, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-18 09:04:37,587:INFO:create_model() successfully completed......................................
2023-12-18 09:04:37,623:INFO:_master_model_container: 14
2023-12-18 09:04:37,623:INFO:_display_container: 2
2023-12-18 09:04:37,623:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7974, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-18 09:04:37,623:INFO:compare_models() successfully completed......................................
2023-12-18 09:08:24,357:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 09:08:24,357:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 09:08:24,357:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 09:08:24,357:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 09:08:24,880:INFO:PyCaret ClassificationExperiment
2023-12-18 09:08:24,880:INFO:Logging name: clf-default-name
2023-12-18 09:08:24,880:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-18 09:08:24,880:INFO:version 3.2.0
2023-12-18 09:08:24,880:INFO:Initializing setup()
2023-12-18 09:08:24,880:INFO:self.USI: 1d4b
2023-12-18 09:08:24,880:INFO:self._variable_keys: {'memory', 'gpu_n_jobs_param', '_ml_usecase', 'data', 'idx', 'is_multiclass', 'fold_groups_param', 'fix_imbalance', 'logging_param', 'exp_name_log', 'X_test', 'fold_generator', 'fold_shuffle_param', '_available_plots', 'X_train', 'gpu_param', 'y_test', 'n_jobs_param', 'USI', 'html_param', 'exp_id', 'log_plots_param', 'pipeline', 'X', 'seed', 'target_param', 'y', 'y_train'}
2023-12-18 09:08:24,880:INFO:Checking environment
2023-12-18 09:08:24,880:INFO:python_version: 3.10.4
2023-12-18 09:08:24,880:INFO:python_build: ('tags/v3.10.4:9d38120', 'Mar 23 2022 23:13:41')
2023-12-18 09:08:24,880:INFO:machine: AMD64
2023-12-18 09:08:24,889:INFO:platform: Windows-10-10.0.19045-SP0
2023-12-18 09:08:24,892:INFO:Memory: svmem(total=34029125632, available=18268504064, percent=46.3, used=15760621568, free=18268504064)
2023-12-18 09:08:24,892:INFO:Physical Core: 14
2023-12-18 09:08:24,892:INFO:Logical Core: 20
2023-12-18 09:08:24,892:INFO:Checking libraries
2023-12-18 09:08:24,892:INFO:System:
2023-12-18 09:08:24,892:INFO:    python: 3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit (AMD64)]
2023-12-18 09:08:24,892:INFO:executable: C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\python.exe
2023-12-18 09:08:24,892:INFO:   machine: Windows-10-10.0.19045-SP0
2023-12-18 09:08:24,892:INFO:PyCaret required dependencies:
2023-12-18 09:08:24,904:INFO:                 pip: 22.0.4
2023-12-18 09:08:24,904:INFO:          setuptools: 58.1.0
2023-12-18 09:08:24,904:INFO:             pycaret: 3.2.0
2023-12-18 09:08:24,904:INFO:             IPython: 8.18.1
2023-12-18 09:08:24,904:INFO:          ipywidgets: 8.1.1
2023-12-18 09:08:24,904:INFO:                tqdm: 4.66.1
2023-12-18 09:08:24,905:INFO:               numpy: 1.25.2
2023-12-18 09:08:24,905:INFO:              pandas: 1.5.3
2023-12-18 09:08:24,905:INFO:              jinja2: 3.1.2
2023-12-18 09:08:24,905:INFO:               scipy: 1.10.1
2023-12-18 09:08:24,905:INFO:              joblib: 1.3.2
2023-12-18 09:08:24,905:INFO:             sklearn: 1.2.2
2023-12-18 09:08:24,905:INFO:                pyod: 1.1.2
2023-12-18 09:08:24,905:INFO:            imblearn: 0.11.0
2023-12-18 09:08:24,905:INFO:   category_encoders: 2.6.3
2023-12-18 09:08:24,905:INFO:            lightgbm: 4.1.0
2023-12-18 09:08:24,905:INFO:               numba: 0.58.1
2023-12-18 09:08:24,905:INFO:            requests: 2.31.0
2023-12-18 09:08:24,905:INFO:          matplotlib: 3.6.0
2023-12-18 09:08:24,905:INFO:          scikitplot: 0.3.7
2023-12-18 09:08:24,905:INFO:         yellowbrick: 1.5
2023-12-18 09:08:24,905:INFO:              plotly: 5.18.0
2023-12-18 09:08:24,905:INFO:    plotly-resampler: Not installed
2023-12-18 09:08:24,905:INFO:             kaleido: 0.2.1
2023-12-18 09:08:24,905:INFO:           schemdraw: 0.15
2023-12-18 09:08:24,905:INFO:         statsmodels: 0.14.1
2023-12-18 09:08:24,905:INFO:              sktime: 0.21.1
2023-12-18 09:08:24,905:INFO:               tbats: 1.1.3
2023-12-18 09:08:24,905:INFO:            pmdarima: 2.0.4
2023-12-18 09:08:24,905:INFO:              psutil: 5.9.7
2023-12-18 09:08:24,905:INFO:          markupsafe: 2.1.3
2023-12-18 09:08:24,905:INFO:             pickle5: Not installed
2023-12-18 09:08:24,905:INFO:         cloudpickle: 3.0.0
2023-12-18 09:08:24,905:INFO:         deprecation: 2.1.0
2023-12-18 09:08:24,905:INFO:              xxhash: 3.4.1
2023-12-18 09:08:24,905:INFO:           wurlitzer: Not installed
2023-12-18 09:08:24,905:INFO:PyCaret optional dependencies:
2023-12-18 09:08:24,916:INFO:                shap: Not installed
2023-12-18 09:08:24,916:INFO:           interpret: Not installed
2023-12-18 09:08:24,916:INFO:                umap: Not installed
2023-12-18 09:08:24,916:INFO:     ydata_profiling: Not installed
2023-12-18 09:08:24,916:INFO:  explainerdashboard: Not installed
2023-12-18 09:08:24,916:INFO:             autoviz: Not installed
2023-12-18 09:08:24,916:INFO:           fairlearn: Not installed
2023-12-18 09:08:24,916:INFO:          deepchecks: Not installed
2023-12-18 09:08:24,916:INFO:             xgboost: Not installed
2023-12-18 09:08:24,916:INFO:            catboost: Not installed
2023-12-18 09:08:24,916:INFO:              kmodes: Not installed
2023-12-18 09:08:24,916:INFO:             mlxtend: Not installed
2023-12-18 09:08:24,916:INFO:       statsforecast: Not installed
2023-12-18 09:08:24,916:INFO:        tune_sklearn: Not installed
2023-12-18 09:08:24,916:INFO:                 ray: Not installed
2023-12-18 09:08:24,916:INFO:            hyperopt: Not installed
2023-12-18 09:08:24,916:INFO:              optuna: Not installed
2023-12-18 09:08:24,916:INFO:               skopt: Not installed
2023-12-18 09:08:24,916:INFO:              mlflow: Not installed
2023-12-18 09:08:24,916:INFO:              gradio: Not installed
2023-12-18 09:08:24,916:INFO:             fastapi: Not installed
2023-12-18 09:08:24,916:INFO:             uvicorn: Not installed
2023-12-18 09:08:24,916:INFO:              m2cgen: Not installed
2023-12-18 09:08:24,916:INFO:           evidently: Not installed
2023-12-18 09:08:24,916:INFO:               fugue: Not installed
2023-12-18 09:08:24,916:INFO:           streamlit: Not installed
2023-12-18 09:08:24,916:INFO:             prophet: Not installed
2023-12-18 09:08:24,916:INFO:None
2023-12-18 09:08:24,916:INFO:Set up data.
2023-12-18 09:08:35,171:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 09:08:35,171:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 09:08:35,171:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 09:08:35,171:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 09:08:35,729:INFO:PyCaret ClassificationExperiment
2023-12-18 09:08:35,730:INFO:Logging name: clf-default-name
2023-12-18 09:08:35,730:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-18 09:08:35,730:INFO:version 3.2.0
2023-12-18 09:08:35,730:INFO:Initializing setup()
2023-12-18 09:08:35,730:INFO:self.USI: 3735
2023-12-18 09:08:35,730:INFO:self._variable_keys: {'gpu_n_jobs_param', '_available_plots', 'X_train', 'target_param', 'y', 'data', 'fold_groups_param', 'pipeline', 'logging_param', 'gpu_param', 'html_param', 'is_multiclass', 'log_plots_param', '_ml_usecase', 'X', 'idx', 'seed', 'fold_shuffle_param', 'fix_imbalance', 'exp_id', 'USI', 'X_test', 'exp_name_log', 'y_test', 'n_jobs_param', 'y_train', 'memory', 'fold_generator'}
2023-12-18 09:08:35,730:INFO:Checking environment
2023-12-18 09:08:35,730:INFO:python_version: 3.10.4
2023-12-18 09:08:35,730:INFO:python_build: ('tags/v3.10.4:9d38120', 'Mar 23 2022 23:13:41')
2023-12-18 09:08:35,730:INFO:machine: AMD64
2023-12-18 09:08:35,740:INFO:platform: Windows-10-10.0.19045-SP0
2023-12-18 09:08:35,743:INFO:Memory: svmem(total=34029125632, available=18136285184, percent=46.7, used=15892840448, free=18136285184)
2023-12-18 09:08:35,743:INFO:Physical Core: 14
2023-12-18 09:08:35,743:INFO:Logical Core: 20
2023-12-18 09:08:35,743:INFO:Checking libraries
2023-12-18 09:08:35,743:INFO:System:
2023-12-18 09:08:35,743:INFO:    python: 3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit (AMD64)]
2023-12-18 09:08:35,743:INFO:executable: C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\python.exe
2023-12-18 09:08:35,744:INFO:   machine: Windows-10-10.0.19045-SP0
2023-12-18 09:08:35,744:INFO:PyCaret required dependencies:
2023-12-18 09:08:35,756:INFO:                 pip: 22.0.4
2023-12-18 09:08:35,756:INFO:          setuptools: 58.1.0
2023-12-18 09:08:35,756:INFO:             pycaret: 3.2.0
2023-12-18 09:08:35,756:INFO:             IPython: 8.18.1
2023-12-18 09:08:35,756:INFO:          ipywidgets: 8.1.1
2023-12-18 09:08:35,756:INFO:                tqdm: 4.66.1
2023-12-18 09:08:35,756:INFO:               numpy: 1.25.2
2023-12-18 09:08:35,756:INFO:              pandas: 1.5.3
2023-12-18 09:08:35,756:INFO:              jinja2: 3.1.2
2023-12-18 09:08:35,756:INFO:               scipy: 1.10.1
2023-12-18 09:08:35,756:INFO:              joblib: 1.3.2
2023-12-18 09:08:35,756:INFO:             sklearn: 1.2.2
2023-12-18 09:08:35,756:INFO:                pyod: 1.1.2
2023-12-18 09:08:35,756:INFO:            imblearn: 0.11.0
2023-12-18 09:08:35,756:INFO:   category_encoders: 2.6.3
2023-12-18 09:08:35,756:INFO:            lightgbm: 4.1.0
2023-12-18 09:08:35,756:INFO:               numba: 0.58.1
2023-12-18 09:08:35,756:INFO:            requests: 2.31.0
2023-12-18 09:08:35,756:INFO:          matplotlib: 3.6.0
2023-12-18 09:08:35,756:INFO:          scikitplot: 0.3.7
2023-12-18 09:08:35,756:INFO:         yellowbrick: 1.5
2023-12-18 09:08:35,756:INFO:              plotly: 5.18.0
2023-12-18 09:08:35,756:INFO:    plotly-resampler: Not installed
2023-12-18 09:08:35,756:INFO:             kaleido: 0.2.1
2023-12-18 09:08:35,757:INFO:           schemdraw: 0.15
2023-12-18 09:08:35,757:INFO:         statsmodels: 0.14.1
2023-12-18 09:08:35,757:INFO:              sktime: 0.21.1
2023-12-18 09:08:35,757:INFO:               tbats: 1.1.3
2023-12-18 09:08:35,757:INFO:            pmdarima: 2.0.4
2023-12-18 09:08:35,757:INFO:              psutil: 5.9.7
2023-12-18 09:08:35,757:INFO:          markupsafe: 2.1.3
2023-12-18 09:08:35,757:INFO:             pickle5: Not installed
2023-12-18 09:08:35,757:INFO:         cloudpickle: 3.0.0
2023-12-18 09:08:35,757:INFO:         deprecation: 2.1.0
2023-12-18 09:08:35,757:INFO:              xxhash: 3.4.1
2023-12-18 09:08:35,757:INFO:           wurlitzer: Not installed
2023-12-18 09:08:35,757:INFO:PyCaret optional dependencies:
2023-12-18 09:08:35,766:INFO:                shap: Not installed
2023-12-18 09:08:35,766:INFO:           interpret: Not installed
2023-12-18 09:08:35,766:INFO:                umap: Not installed
2023-12-18 09:08:35,766:INFO:     ydata_profiling: Not installed
2023-12-18 09:08:35,766:INFO:  explainerdashboard: Not installed
2023-12-18 09:08:35,766:INFO:             autoviz: Not installed
2023-12-18 09:08:35,766:INFO:           fairlearn: Not installed
2023-12-18 09:08:35,766:INFO:          deepchecks: Not installed
2023-12-18 09:08:35,766:INFO:             xgboost: Not installed
2023-12-18 09:08:35,766:INFO:            catboost: Not installed
2023-12-18 09:08:35,766:INFO:              kmodes: Not installed
2023-12-18 09:08:35,766:INFO:             mlxtend: Not installed
2023-12-18 09:08:35,766:INFO:       statsforecast: Not installed
2023-12-18 09:08:35,766:INFO:        tune_sklearn: Not installed
2023-12-18 09:08:35,766:INFO:                 ray: Not installed
2023-12-18 09:08:35,766:INFO:            hyperopt: Not installed
2023-12-18 09:08:35,766:INFO:              optuna: Not installed
2023-12-18 09:08:35,766:INFO:               skopt: Not installed
2023-12-18 09:08:35,767:INFO:              mlflow: Not installed
2023-12-18 09:08:35,767:INFO:              gradio: Not installed
2023-12-18 09:08:35,767:INFO:             fastapi: Not installed
2023-12-18 09:08:35,767:INFO:             uvicorn: Not installed
2023-12-18 09:08:35,767:INFO:              m2cgen: Not installed
2023-12-18 09:08:35,767:INFO:           evidently: Not installed
2023-12-18 09:08:35,767:INFO:               fugue: Not installed
2023-12-18 09:08:35,767:INFO:           streamlit: Not installed
2023-12-18 09:08:35,767:INFO:             prophet: Not installed
2023-12-18 09:08:35,767:INFO:None
2023-12-18 09:08:35,767:INFO:Set up data.
2023-12-18 09:08:35,779:INFO:Set up folding strategy.
2023-12-18 09:08:35,779:INFO:Set up train/test split.
2023-12-18 09:08:35,800:INFO:Set up index.
2023-12-18 09:08:35,801:INFO:Assigning column types.
2023-12-18 09:08:35,803:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-18 09:08:35,826:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 09:08:35,827:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 09:08:35,844:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:08:35,844:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:08:35,867:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 09:08:35,868:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 09:08:35,882:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:08:35,882:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:08:35,882:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-18 09:08:35,905:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 09:08:35,919:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:08:35,919:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:08:35,942:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 09:08:35,956:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:08:35,956:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:08:35,956:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-18 09:08:35,993:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:08:35,993:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:08:36,030:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:08:36,031:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:08:36,032:INFO:Preparing preprocessing pipeline...
2023-12-18 09:08:36,033:INFO:Set up label encoding.
2023-12-18 09:08:36,033:INFO:Set up date feature engineering.
2023-12-18 09:08:36,033:INFO:Set up simple imputation.
2023-12-18 09:08:36,036:INFO:Set up encoding of categorical features.
2023-12-18 09:08:36,036:INFO:Set up binning of numerical features.
2023-12-18 09:08:36,037:INFO:Set up imbalanced handling.
2023-12-18 09:08:36,037:INFO:Set up feature normalization.
2023-12-18 09:08:36,037:INFO:Set up column name cleaning.
2023-12-18 09:08:36,398:INFO:Finished creating preprocessing pipeline.
2023-12-18 09:08:36,403:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MAXIMI~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['tmsp'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_i...
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-18 09:08:36,403:INFO:Creating final display dataframe.
2023-12-18 09:08:36,773:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                 Date features   
10         Categorical features   
11                   Preprocess   
12              Imputation type   
13           Numeric imputation   
14       Categorical imputation   
15     Maximum one-hot encoding   
16              Encoding method   
17                Fix imbalance   
18         Fix imbalance method   
19                    Normalize   
20             Normalize method   
21               Fold Generator   
22                  Fold Number   
23                     CPU Jobs   
24                      Use GPU   
25               Log Experiment   
26              Experiment Name   
27                          USI   

                                                Value  
0                                                1306  
1                                                 PSP  
2                                          Multiclass  
3   Goldcard: 0, Moneycard: 1, Simplecard: 2, UK_C...  
4                                          (50410, 8)  
5                                         (89207, 14)  
6                                         (74084, 14)  
7                                         (15123, 14)  
8                                                   4  
9                                                   1  
10                                                  2  
11                                               True  
12                                             simple  
13                                               mean  
14                                               mode  
15                                                 25  
16                                               None  
17                                               True  
18                                              SMOTE  
19                                               True  
20                                             zscore  
21                                    StratifiedKFold  
22                                                  5  
23                                                 -1  
24                                              False  
25                                              False  
26                                   clf-default-name  
27                                               3735  
2023-12-18 09:08:36,810:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:08:36,810:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:08:36,848:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:08:36,848:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:08:36,849:INFO:setup() successfully completed in 1.12s...............
2023-12-18 09:08:36,849:INFO:Initializing compare_models()
2023-12-18 09:08:36,849:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017F536E3EE0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000017F536E3EE0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-12-18 09:08:36,849:INFO:Checking exceptions
2023-12-18 09:08:36,853:INFO:Preparing display monitor
2023-12-18 09:08:36,856:INFO:Initializing Logistic Regression
2023-12-18 09:08:36,856:INFO:Total runtime is 0.0 minutes
2023-12-18 09:08:36,856:INFO:SubProcess create_model() called ==================================
2023-12-18 09:08:36,856:INFO:Initializing create_model()
2023-12-18 09:08:36,856:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017F536E3EE0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017F020ED270>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:08:36,856:INFO:Checking exceptions
2023-12-18 09:08:36,856:INFO:Importing libraries
2023-12-18 09:08:36,856:INFO:Copying training dataset
2023-12-18 09:08:36,860:INFO:Defining folds
2023-12-18 09:08:36,860:INFO:Declaring metric variables
2023-12-18 09:08:36,860:INFO:Importing untrained model
2023-12-18 09:08:36,860:INFO:Logistic Regression Imported successfully
2023-12-18 09:08:36,860:INFO:Starting cross validation
2023-12-18 09:08:36,861:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:08:39,424:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:39,447:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:39,467:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:39,468:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:39,470:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:39,477:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:39,481:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:39,489:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:39,490:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:39,499:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:39,503:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:39,512:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:39,512:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:39,522:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:39,526:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:39,565:INFO:Calculating mean and std
2023-12-18 09:08:39,566:INFO:Creating metrics dataframe
2023-12-18 09:08:39,569:INFO:Uploading results into container
2023-12-18 09:08:39,569:INFO:Uploading model into container now
2023-12-18 09:08:39,569:INFO:_master_model_container: 1
2023-12-18 09:08:39,569:INFO:_display_container: 2
2023-12-18 09:08:39,570:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1306, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-18 09:08:39,570:INFO:create_model() successfully completed......................................
2023-12-18 09:08:39,611:INFO:SubProcess create_model() end ==================================
2023-12-18 09:08:39,612:INFO:Creating metrics dataframe
2023-12-18 09:08:39,614:INFO:Initializing K Neighbors Classifier
2023-12-18 09:08:39,614:INFO:Total runtime is 0.04596699873606364 minutes
2023-12-18 09:08:39,614:INFO:SubProcess create_model() called ==================================
2023-12-18 09:08:39,614:INFO:Initializing create_model()
2023-12-18 09:08:39,614:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017F536E3EE0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017F020ED270>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:08:39,614:INFO:Checking exceptions
2023-12-18 09:08:39,615:INFO:Importing libraries
2023-12-18 09:08:39,615:INFO:Copying training dataset
2023-12-18 09:08:39,620:INFO:Defining folds
2023-12-18 09:08:39,620:INFO:Declaring metric variables
2023-12-18 09:08:39,620:INFO:Importing untrained model
2023-12-18 09:08:39,620:INFO:K Neighbors Classifier Imported successfully
2023-12-18 09:08:39,620:INFO:Starting cross validation
2023-12-18 09:08:39,622:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:08:42,799:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:42,868:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:42,916:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:42,936:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:42,942:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:42,983:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:43,023:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:43,085:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:43,099:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:43,176:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:43,218:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:43,250:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:43,293:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:43,315:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:43,336:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:43,368:INFO:Calculating mean and std
2023-12-18 09:08:43,369:INFO:Creating metrics dataframe
2023-12-18 09:08:43,372:INFO:Uploading results into container
2023-12-18 09:08:43,373:INFO:Uploading model into container now
2023-12-18 09:08:43,373:INFO:_master_model_container: 2
2023-12-18 09:08:43,373:INFO:_display_container: 2
2023-12-18 09:08:43,373:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-12-18 09:08:43,373:INFO:create_model() successfully completed......................................
2023-12-18 09:08:43,416:INFO:SubProcess create_model() end ==================================
2023-12-18 09:08:43,417:INFO:Creating metrics dataframe
2023-12-18 09:08:43,419:INFO:Initializing Naive Bayes
2023-12-18 09:08:43,419:INFO:Total runtime is 0.10938389698664347 minutes
2023-12-18 09:08:43,419:INFO:SubProcess create_model() called ==================================
2023-12-18 09:08:43,419:INFO:Initializing create_model()
2023-12-18 09:08:43,419:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017F536E3EE0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017F020ED270>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:08:43,419:INFO:Checking exceptions
2023-12-18 09:08:43,419:INFO:Importing libraries
2023-12-18 09:08:43,419:INFO:Copying training dataset
2023-12-18 09:08:43,424:INFO:Defining folds
2023-12-18 09:08:43,424:INFO:Declaring metric variables
2023-12-18 09:08:43,424:INFO:Importing untrained model
2023-12-18 09:08:43,424:INFO:Naive Bayes Imported successfully
2023-12-18 09:08:43,424:INFO:Starting cross validation
2023-12-18 09:08:43,426:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:08:45,296:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:45,296:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:45,301:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:45,302:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:45,307:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:45,319:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:45,320:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:45,325:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:45,327:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:45,329:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:45,332:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:08:45,341:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:45,341:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:45,347:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:45,349:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:45,350:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:45,391:INFO:Calculating mean and std
2023-12-18 09:08:45,392:INFO:Creating metrics dataframe
2023-12-18 09:08:45,396:INFO:Uploading results into container
2023-12-18 09:08:45,396:INFO:Uploading model into container now
2023-12-18 09:08:45,397:INFO:_master_model_container: 3
2023-12-18 09:08:45,397:INFO:_display_container: 2
2023-12-18 09:08:45,397:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-12-18 09:08:45,397:INFO:create_model() successfully completed......................................
2023-12-18 09:08:45,435:INFO:SubProcess create_model() end ==================================
2023-12-18 09:08:45,435:INFO:Creating metrics dataframe
2023-12-18 09:08:45,438:INFO:Initializing Decision Tree Classifier
2023-12-18 09:08:45,438:INFO:Total runtime is 0.1430336833000183 minutes
2023-12-18 09:08:45,438:INFO:SubProcess create_model() called ==================================
2023-12-18 09:08:45,438:INFO:Initializing create_model()
2023-12-18 09:08:45,438:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017F536E3EE0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017F020ED270>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:08:45,438:INFO:Checking exceptions
2023-12-18 09:08:45,438:INFO:Importing libraries
2023-12-18 09:08:45,439:INFO:Copying training dataset
2023-12-18 09:08:45,444:INFO:Defining folds
2023-12-18 09:08:45,444:INFO:Declaring metric variables
2023-12-18 09:08:45,444:INFO:Importing untrained model
2023-12-18 09:08:45,444:INFO:Decision Tree Classifier Imported successfully
2023-12-18 09:08:45,444:INFO:Starting cross validation
2023-12-18 09:08:45,445:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:08:47,592:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:47,596:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:47,604:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:47,613:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:47,615:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:47,619:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:47,622:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:47,627:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:47,636:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:47,638:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:47,642:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:47,644:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:47,650:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:47,659:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:47,667:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:47,707:INFO:Calculating mean and std
2023-12-18 09:08:47,708:INFO:Creating metrics dataframe
2023-12-18 09:08:47,710:INFO:Uploading results into container
2023-12-18 09:08:47,711:INFO:Uploading model into container now
2023-12-18 09:08:47,711:INFO:_master_model_container: 4
2023-12-18 09:08:47,711:INFO:_display_container: 2
2023-12-18 09:08:47,711:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1306, splitter='best')
2023-12-18 09:08:47,711:INFO:create_model() successfully completed......................................
2023-12-18 09:08:47,747:INFO:SubProcess create_model() end ==================================
2023-12-18 09:08:47,747:INFO:Creating metrics dataframe
2023-12-18 09:08:47,750:INFO:Initializing SVM - Linear Kernel
2023-12-18 09:08:47,750:INFO:Total runtime is 0.18156700929005942 minutes
2023-12-18 09:08:47,750:INFO:SubProcess create_model() called ==================================
2023-12-18 09:08:47,750:INFO:Initializing create_model()
2023-12-18 09:08:47,750:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017F536E3EE0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017F020ED270>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:08:47,750:INFO:Checking exceptions
2023-12-18 09:08:47,750:INFO:Importing libraries
2023-12-18 09:08:47,750:INFO:Copying training dataset
2023-12-18 09:08:47,755:INFO:Defining folds
2023-12-18 09:08:47,755:INFO:Declaring metric variables
2023-12-18 09:08:47,755:INFO:Importing untrained model
2023-12-18 09:08:47,755:INFO:SVM - Linear Kernel Imported successfully
2023-12-18 09:08:47,755:INFO:Starting cross validation
2023-12-18 09:08:47,757:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:08:48,495:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-18 09:08:48,496:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-18 09:08:48,496:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-18 09:08:48,504:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:48,505:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:48,505:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:48,507:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-18 09:08:48,516:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:48,523:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-18 09:08:48,526:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:48,528:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:48,528:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:48,532:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:48,539:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:48,549:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:48,551:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:48,551:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:48,555:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:48,562:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:48,578:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:48,610:INFO:Calculating mean and std
2023-12-18 09:08:48,610:INFO:Creating metrics dataframe
2023-12-18 09:08:48,612:INFO:Uploading results into container
2023-12-18 09:08:48,613:INFO:Uploading model into container now
2023-12-18 09:08:48,613:INFO:_master_model_container: 5
2023-12-18 09:08:48,613:INFO:_display_container: 2
2023-12-18 09:08:48,613:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1306, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-12-18 09:08:48,613:INFO:create_model() successfully completed......................................
2023-12-18 09:08:48,647:INFO:SubProcess create_model() end ==================================
2023-12-18 09:08:48,647:INFO:Creating metrics dataframe
2023-12-18 09:08:48,649:INFO:Initializing Ridge Classifier
2023-12-18 09:08:48,649:INFO:Total runtime is 0.19655055602391563 minutes
2023-12-18 09:08:48,649:INFO:SubProcess create_model() called ==================================
2023-12-18 09:08:48,650:INFO:Initializing create_model()
2023-12-18 09:08:48,650:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017F536E3EE0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017F020ED270>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:08:48,650:INFO:Checking exceptions
2023-12-18 09:08:48,650:INFO:Importing libraries
2023-12-18 09:08:48,650:INFO:Copying training dataset
2023-12-18 09:08:48,654:INFO:Defining folds
2023-12-18 09:08:48,654:INFO:Declaring metric variables
2023-12-18 09:08:48,654:INFO:Importing untrained model
2023-12-18 09:08:48,654:INFO:Ridge Classifier Imported successfully
2023-12-18 09:08:48,655:INFO:Starting cross validation
2023-12-18 09:08:48,656:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:08:48,988:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-18 09:08:48,996:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:48,997:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-18 09:08:49,002:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-18 09:08:49,007:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:49,007:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-18 09:08:49,012:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:49,016:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-18 09:08:49,016:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:49,020:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:49,025:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:49,030:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:49,035:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:49,039:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:49,043:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:49,048:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:49,053:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:49,061:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:49,064:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:49,073:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:49,112:INFO:Calculating mean and std
2023-12-18 09:08:49,112:INFO:Creating metrics dataframe
2023-12-18 09:08:49,114:INFO:Uploading results into container
2023-12-18 09:08:49,115:INFO:Uploading model into container now
2023-12-18 09:08:49,115:INFO:_master_model_container: 6
2023-12-18 09:08:49,115:INFO:_display_container: 2
2023-12-18 09:08:49,115:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1306, solver='auto',
                tol=0.0001)
2023-12-18 09:08:49,115:INFO:create_model() successfully completed......................................
2023-12-18 09:08:49,148:INFO:SubProcess create_model() end ==================================
2023-12-18 09:08:49,148:INFO:Creating metrics dataframe
2023-12-18 09:08:49,151:INFO:Initializing Random Forest Classifier
2023-12-18 09:08:49,151:INFO:Total runtime is 0.20491772492726645 minutes
2023-12-18 09:08:49,151:INFO:SubProcess create_model() called ==================================
2023-12-18 09:08:49,151:INFO:Initializing create_model()
2023-12-18 09:08:49,151:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017F536E3EE0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017F020ED270>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:08:49,151:INFO:Checking exceptions
2023-12-18 09:08:49,151:INFO:Importing libraries
2023-12-18 09:08:49,151:INFO:Copying training dataset
2023-12-18 09:08:49,155:INFO:Defining folds
2023-12-18 09:08:49,155:INFO:Declaring metric variables
2023-12-18 09:08:49,155:INFO:Importing untrained model
2023-12-18 09:08:49,156:INFO:Random Forest Classifier Imported successfully
2023-12-18 09:08:49,156:INFO:Starting cross validation
2023-12-18 09:08:49,157:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:08:55,683:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:55,727:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:55,730:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:55,745:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:55,768:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:55,775:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:55,778:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:55,786:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:55,792:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:55,805:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:55,810:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:55,813:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:55,830:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:55,844:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:55,875:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:55,935:INFO:Calculating mean and std
2023-12-18 09:08:55,936:INFO:Creating metrics dataframe
2023-12-18 09:08:55,939:INFO:Uploading results into container
2023-12-18 09:08:55,940:INFO:Uploading model into container now
2023-12-18 09:08:55,940:INFO:_master_model_container: 7
2023-12-18 09:08:55,940:INFO:_display_container: 2
2023-12-18 09:08:55,940:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1306, verbose=0, warm_start=False)
2023-12-18 09:08:55,941:INFO:create_model() successfully completed......................................
2023-12-18 09:08:55,986:INFO:SubProcess create_model() end ==================================
2023-12-18 09:08:55,986:INFO:Creating metrics dataframe
2023-12-18 09:08:55,989:INFO:Initializing Quadratic Discriminant Analysis
2023-12-18 09:08:55,989:INFO:Total runtime is 0.3188767790794373 minutes
2023-12-18 09:08:55,990:INFO:SubProcess create_model() called ==================================
2023-12-18 09:08:55,990:INFO:Initializing create_model()
2023-12-18 09:08:55,990:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017F536E3EE0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017F020ED270>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:08:55,990:INFO:Checking exceptions
2023-12-18 09:08:55,990:INFO:Importing libraries
2023-12-18 09:08:55,990:INFO:Copying training dataset
2023-12-18 09:08:55,996:INFO:Defining folds
2023-12-18 09:08:55,996:INFO:Declaring metric variables
2023-12-18 09:08:55,997:INFO:Importing untrained model
2023-12-18 09:08:55,997:INFO:Quadratic Discriminant Analysis Imported successfully
2023-12-18 09:08:55,997:INFO:Starting cross validation
2023-12-18 09:08:55,998:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:08:56,359:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-18 09:08:56,359:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-18 09:08:56,363:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-18 09:08:56,365:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-18 09:08:56,382:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-18 09:08:56,457:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:56,458:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:56,461:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:56,463:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:56,475:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:56,486:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:56,487:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:56,491:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:56,492:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:56,504:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:56,516:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:56,516:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:56,520:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:56,521:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:56,534:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:08:56,583:INFO:Calculating mean and std
2023-12-18 09:08:56,583:INFO:Creating metrics dataframe
2023-12-18 09:08:56,587:INFO:Uploading results into container
2023-12-18 09:08:56,587:INFO:Uploading model into container now
2023-12-18 09:08:56,587:INFO:_master_model_container: 8
2023-12-18 09:08:56,587:INFO:_display_container: 2
2023-12-18 09:08:56,588:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-12-18 09:08:56,588:INFO:create_model() successfully completed......................................
2023-12-18 09:08:56,625:INFO:SubProcess create_model() end ==================================
2023-12-18 09:08:56,625:INFO:Creating metrics dataframe
2023-12-18 09:08:56,628:INFO:Initializing Ada Boost Classifier
2023-12-18 09:08:56,628:INFO:Total runtime is 0.32952459255854294 minutes
2023-12-18 09:08:56,628:INFO:SubProcess create_model() called ==================================
2023-12-18 09:08:56,628:INFO:Initializing create_model()
2023-12-18 09:08:56,628:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017F536E3EE0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017F020ED270>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:08:56,628:INFO:Checking exceptions
2023-12-18 09:08:56,628:INFO:Importing libraries
2023-12-18 09:08:56,628:INFO:Copying training dataset
2023-12-18 09:08:56,634:INFO:Defining folds
2023-12-18 09:08:56,634:INFO:Declaring metric variables
2023-12-18 09:08:56,634:INFO:Importing untrained model
2023-12-18 09:08:56,634:INFO:Ada Boost Classifier Imported successfully
2023-12-18 09:08:56,635:INFO:Starting cross validation
2023-12-18 09:08:56,636:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:09:00,134:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:00,149:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:00,160:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:00,169:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:00,175:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:00,176:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:09:00,187:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:00,190:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:09:00,197:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:00,201:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:00,201:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:00,201:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:00,213:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:09:00,225:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:00,228:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:00,230:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:00,244:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:09:00,245:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:09:00,255:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:00,256:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:00,299:INFO:Calculating mean and std
2023-12-18 09:09:00,299:INFO:Creating metrics dataframe
2023-12-18 09:09:00,302:INFO:Uploading results into container
2023-12-18 09:09:00,303:INFO:Uploading model into container now
2023-12-18 09:09:00,303:INFO:_master_model_container: 9
2023-12-18 09:09:00,303:INFO:_display_container: 2
2023-12-18 09:09:00,303:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=1306)
2023-12-18 09:09:00,303:INFO:create_model() successfully completed......................................
2023-12-18 09:09:00,342:INFO:SubProcess create_model() end ==================================
2023-12-18 09:09:00,342:INFO:Creating metrics dataframe
2023-12-18 09:09:00,346:INFO:Initializing Gradient Boosting Classifier
2023-12-18 09:09:00,346:INFO:Total runtime is 0.39149391253789273 minutes
2023-12-18 09:09:00,346:INFO:SubProcess create_model() called ==================================
2023-12-18 09:09:00,346:INFO:Initializing create_model()
2023-12-18 09:09:00,346:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017F536E3EE0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017F020ED270>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:09:00,346:INFO:Checking exceptions
2023-12-18 09:09:00,346:INFO:Importing libraries
2023-12-18 09:09:00,346:INFO:Copying training dataset
2023-12-18 09:09:00,352:INFO:Defining folds
2023-12-18 09:09:00,352:INFO:Declaring metric variables
2023-12-18 09:09:00,352:INFO:Importing untrained model
2023-12-18 09:09:00,352:INFO:Gradient Boosting Classifier Imported successfully
2023-12-18 09:09:00,352:INFO:Starting cross validation
2023-12-18 09:09:00,354:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:09:48,699:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:48,724:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:48,746:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:48,749:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:48,771:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:48,786:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:09:48,792:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:48,797:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:48,817:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:48,841:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:48,842:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:48,866:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:48,890:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:48,996:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:49,015:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:49,034:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:49,060:INFO:Calculating mean and std
2023-12-18 09:09:49,061:INFO:Creating metrics dataframe
2023-12-18 09:09:49,063:INFO:Uploading results into container
2023-12-18 09:09:49,063:INFO:Uploading model into container now
2023-12-18 09:09:49,064:INFO:_master_model_container: 10
2023-12-18 09:09:49,064:INFO:_display_container: 2
2023-12-18 09:09:49,064:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1306, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-18 09:09:49,064:INFO:create_model() successfully completed......................................
2023-12-18 09:09:49,104:INFO:SubProcess create_model() end ==================================
2023-12-18 09:09:49,104:INFO:Creating metrics dataframe
2023-12-18 09:09:49,106:INFO:Initializing Linear Discriminant Analysis
2023-12-18 09:09:49,106:INFO:Total runtime is 1.2041526635487876 minutes
2023-12-18 09:09:49,106:INFO:SubProcess create_model() called ==================================
2023-12-18 09:09:49,107:INFO:Initializing create_model()
2023-12-18 09:09:49,107:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017F536E3EE0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017F020ED270>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:09:49,107:INFO:Checking exceptions
2023-12-18 09:09:49,107:INFO:Importing libraries
2023-12-18 09:09:49,107:INFO:Copying training dataset
2023-12-18 09:09:49,111:INFO:Defining folds
2023-12-18 09:09:49,111:INFO:Declaring metric variables
2023-12-18 09:09:49,111:INFO:Importing untrained model
2023-12-18 09:09:49,111:INFO:Linear Discriminant Analysis Imported successfully
2023-12-18 09:09:49,111:INFO:Starting cross validation
2023-12-18 09:09:49,112:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:09:49,523:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:49,537:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:49,547:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:49,550:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:49,553:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:49,559:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:49,565:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:49,575:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:49,579:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:49,581:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:49,587:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:49,592:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:49,602:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:49,607:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:49,614:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:49,661:INFO:Calculating mean and std
2023-12-18 09:09:49,662:INFO:Creating metrics dataframe
2023-12-18 09:09:49,664:INFO:Uploading results into container
2023-12-18 09:09:49,665:INFO:Uploading model into container now
2023-12-18 09:09:49,665:INFO:_master_model_container: 11
2023-12-18 09:09:49,665:INFO:_display_container: 2
2023-12-18 09:09:49,665:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-12-18 09:09:49,665:INFO:create_model() successfully completed......................................
2023-12-18 09:09:49,700:INFO:SubProcess create_model() end ==================================
2023-12-18 09:09:49,700:INFO:Creating metrics dataframe
2023-12-18 09:09:49,703:INFO:Initializing Extra Trees Classifier
2023-12-18 09:09:49,703:INFO:Total runtime is 1.2141054352124534 minutes
2023-12-18 09:09:49,704:INFO:SubProcess create_model() called ==================================
2023-12-18 09:09:49,704:INFO:Initializing create_model()
2023-12-18 09:09:49,704:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017F536E3EE0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017F020ED270>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:09:49,704:INFO:Checking exceptions
2023-12-18 09:09:49,704:INFO:Importing libraries
2023-12-18 09:09:49,704:INFO:Copying training dataset
2023-12-18 09:09:49,709:INFO:Defining folds
2023-12-18 09:09:49,709:INFO:Declaring metric variables
2023-12-18 09:09:49,709:INFO:Importing untrained model
2023-12-18 09:09:49,709:INFO:Extra Trees Classifier Imported successfully
2023-12-18 09:09:49,709:INFO:Starting cross validation
2023-12-18 09:09:49,711:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:09:54,081:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:54,081:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:54,083:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:54,154:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:54,155:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:54,164:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:54,173:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:54,231:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:54,234:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:54,243:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:54,252:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:54,319:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:54,847:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:54,871:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:54,894:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:54,937:INFO:Calculating mean and std
2023-12-18 09:09:54,938:INFO:Creating metrics dataframe
2023-12-18 09:09:54,941:INFO:Uploading results into container
2023-12-18 09:09:54,942:INFO:Uploading model into container now
2023-12-18 09:09:54,942:INFO:_master_model_container: 12
2023-12-18 09:09:54,942:INFO:_display_container: 2
2023-12-18 09:09:54,943:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1306, verbose=0, warm_start=False)
2023-12-18 09:09:54,943:INFO:create_model() successfully completed......................................
2023-12-18 09:09:54,993:INFO:SubProcess create_model() end ==================================
2023-12-18 09:09:54,993:INFO:Creating metrics dataframe
2023-12-18 09:09:54,996:INFO:Initializing Light Gradient Boosting Machine
2023-12-18 09:09:54,996:INFO:Total runtime is 1.302322073777517 minutes
2023-12-18 09:09:54,996:INFO:SubProcess create_model() called ==================================
2023-12-18 09:09:54,996:INFO:Initializing create_model()
2023-12-18 09:09:54,996:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017F536E3EE0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017F020ED270>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:09:54,996:INFO:Checking exceptions
2023-12-18 09:09:54,996:INFO:Importing libraries
2023-12-18 09:09:54,996:INFO:Copying training dataset
2023-12-18 09:09:55,001:INFO:Defining folds
2023-12-18 09:09:55,001:INFO:Declaring metric variables
2023-12-18 09:09:55,001:INFO:Importing untrained model
2023-12-18 09:09:55,001:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-18 09:09:55,002:INFO:Starting cross validation
2023-12-18 09:09:55,003:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:09:58,874:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:58,935:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:58,954:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:58,985:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:58,991:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:59,006:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:59,017:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:59,029:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:59,056:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:59,066:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:59,069:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:59,119:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:59,409:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:59,448:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:59,485:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:59,531:INFO:Calculating mean and std
2023-12-18 09:09:59,532:INFO:Creating metrics dataframe
2023-12-18 09:09:59,534:INFO:Uploading results into container
2023-12-18 09:09:59,534:INFO:Uploading model into container now
2023-12-18 09:09:59,535:INFO:_master_model_container: 13
2023-12-18 09:09:59,535:INFO:_display_container: 2
2023-12-18 09:09:59,535:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1306, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-18 09:09:59,535:INFO:create_model() successfully completed......................................
2023-12-18 09:09:59,574:INFO:SubProcess create_model() end ==================================
2023-12-18 09:09:59,574:INFO:Creating metrics dataframe
2023-12-18 09:09:59,578:INFO:Initializing Dummy Classifier
2023-12-18 09:09:59,578:INFO:Total runtime is 1.3786962548891706 minutes
2023-12-18 09:09:59,578:INFO:SubProcess create_model() called ==================================
2023-12-18 09:09:59,578:INFO:Initializing create_model()
2023-12-18 09:09:59,578:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017F536E3EE0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017F020ED270>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:09:59,578:INFO:Checking exceptions
2023-12-18 09:09:59,578:INFO:Importing libraries
2023-12-18 09:09:59,578:INFO:Copying training dataset
2023-12-18 09:09:59,584:INFO:Defining folds
2023-12-18 09:09:59,584:INFO:Declaring metric variables
2023-12-18 09:09:59,584:INFO:Importing untrained model
2023-12-18 09:09:59,584:INFO:Dummy Classifier Imported successfully
2023-12-18 09:09:59,584:INFO:Starting cross validation
2023-12-18 09:09:59,586:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:09:59,981:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:09:59,991:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:10:00,002:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:10:00,007:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:10:00,010:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:10:00,012:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:10:00,020:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:10:00,030:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:10:00,037:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:10:00,037:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:10:00,041:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:10:00,042:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:10:00,049:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:10:00,049:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:10:00,054:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:10:00,059:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:10:00,066:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:10:00,066:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:10:00,071:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:10:00,078:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:10:00,118:INFO:Calculating mean and std
2023-12-18 09:10:00,118:INFO:Creating metrics dataframe
2023-12-18 09:10:00,121:INFO:Uploading results into container
2023-12-18 09:10:00,121:INFO:Uploading model into container now
2023-12-18 09:10:00,122:INFO:_master_model_container: 14
2023-12-18 09:10:00,122:INFO:_display_container: 2
2023-12-18 09:10:00,122:INFO:DummyClassifier(constant=None, random_state=1306, strategy='prior')
2023-12-18 09:10:00,122:INFO:create_model() successfully completed......................................
2023-12-18 09:10:00,165:INFO:SubProcess create_model() end ==================================
2023-12-18 09:10:00,166:INFO:Creating metrics dataframe
2023-12-18 09:10:00,170:INFO:Initializing create_model()
2023-12-18 09:10:00,170:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017F536E3EE0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1306, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:10:00,170:INFO:Checking exceptions
2023-12-18 09:10:00,171:INFO:Importing libraries
2023-12-18 09:10:00,171:INFO:Copying training dataset
2023-12-18 09:10:00,177:INFO:Defining folds
2023-12-18 09:10:00,177:INFO:Declaring metric variables
2023-12-18 09:10:00,177:INFO:Importing untrained model
2023-12-18 09:10:00,177:INFO:Declaring custom model
2023-12-18 09:10:00,177:INFO:Gradient Boosting Classifier Imported successfully
2023-12-18 09:10:00,179:INFO:Cross validation set to False
2023-12-18 09:10:00,179:INFO:Fitting Model
2023-12-18 09:10:43,627:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1306, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-18 09:10:43,627:INFO:create_model() successfully completed......................................
2023-12-18 09:10:43,671:INFO:_master_model_container: 14
2023-12-18 09:10:43,671:INFO:_display_container: 2
2023-12-18 09:10:43,672:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1306, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-18 09:10:43,672:INFO:compare_models() successfully completed......................................
2023-12-18 09:13:12,285:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 09:13:12,285:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 09:13:12,285:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 09:13:12,285:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 09:13:13,192:INFO:PyCaret ClassificationExperiment
2023-12-18 09:13:13,192:INFO:Logging name: clf-default-name
2023-12-18 09:13:13,192:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-18 09:13:13,192:INFO:version 3.2.0
2023-12-18 09:13:13,192:INFO:Initializing setup()
2023-12-18 09:13:13,192:INFO:self.USI: 9410
2023-12-18 09:13:13,192:INFO:self._variable_keys: {'memory', 'fix_imbalance', 'exp_name_log', 'html_param', 'fold_groups_param', 'exp_id', 'gpu_param', 'log_plots_param', 'y_train', 'X_train', 'gpu_n_jobs_param', 'fold_shuffle_param', 'USI', '_ml_usecase', 'y_test', 'X_test', 'is_multiclass', 'logging_param', 'idx', 'X', 'pipeline', 'target_param', 'n_jobs_param', 'fold_generator', '_available_plots', 'data', 'seed', 'y'}
2023-12-18 09:13:13,192:INFO:Checking environment
2023-12-18 09:13:13,192:INFO:python_version: 3.10.4
2023-12-18 09:13:13,192:INFO:python_build: ('tags/v3.10.4:9d38120', 'Mar 23 2022 23:13:41')
2023-12-18 09:13:13,192:INFO:machine: AMD64
2023-12-18 09:13:13,200:INFO:platform: Windows-10-10.0.19045-SP0
2023-12-18 09:13:13,203:INFO:Memory: svmem(total=34029125632, available=17602101248, percent=48.3, used=16427024384, free=17602101248)
2023-12-18 09:13:13,204:INFO:Physical Core: 14
2023-12-18 09:13:13,204:INFO:Logical Core: 20
2023-12-18 09:13:13,204:INFO:Checking libraries
2023-12-18 09:13:13,204:INFO:System:
2023-12-18 09:13:13,204:INFO:    python: 3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit (AMD64)]
2023-12-18 09:13:13,204:INFO:executable: C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\python.exe
2023-12-18 09:13:13,204:INFO:   machine: Windows-10-10.0.19045-SP0
2023-12-18 09:13:13,204:INFO:PyCaret required dependencies:
2023-12-18 09:13:13,235:INFO:                 pip: 22.0.4
2023-12-18 09:13:13,236:INFO:          setuptools: 58.1.0
2023-12-18 09:13:13,236:INFO:             pycaret: 3.2.0
2023-12-18 09:13:13,236:INFO:             IPython: 8.18.1
2023-12-18 09:13:13,236:INFO:          ipywidgets: 8.1.1
2023-12-18 09:13:13,236:INFO:                tqdm: 4.66.1
2023-12-18 09:13:13,236:INFO:               numpy: 1.25.2
2023-12-18 09:13:13,236:INFO:              pandas: 1.5.3
2023-12-18 09:13:13,236:INFO:              jinja2: 3.1.2
2023-12-18 09:13:13,236:INFO:               scipy: 1.10.1
2023-12-18 09:13:13,236:INFO:              joblib: 1.3.2
2023-12-18 09:13:13,236:INFO:             sklearn: 1.2.2
2023-12-18 09:13:13,236:INFO:                pyod: 1.1.2
2023-12-18 09:13:13,236:INFO:            imblearn: 0.11.0
2023-12-18 09:13:13,236:INFO:   category_encoders: 2.6.3
2023-12-18 09:13:13,236:INFO:            lightgbm: 4.1.0
2023-12-18 09:13:13,236:INFO:               numba: 0.58.1
2023-12-18 09:13:13,236:INFO:            requests: 2.31.0
2023-12-18 09:13:13,236:INFO:          matplotlib: 3.6.0
2023-12-18 09:13:13,236:INFO:          scikitplot: 0.3.7
2023-12-18 09:13:13,236:INFO:         yellowbrick: 1.5
2023-12-18 09:13:13,236:INFO:              plotly: 5.18.0
2023-12-18 09:13:13,236:INFO:    plotly-resampler: Not installed
2023-12-18 09:13:13,236:INFO:             kaleido: 0.2.1
2023-12-18 09:13:13,236:INFO:           schemdraw: 0.15
2023-12-18 09:13:13,236:INFO:         statsmodels: 0.14.1
2023-12-18 09:13:13,236:INFO:              sktime: 0.21.1
2023-12-18 09:13:13,236:INFO:               tbats: 1.1.3
2023-12-18 09:13:13,236:INFO:            pmdarima: 2.0.4
2023-12-18 09:13:13,236:INFO:              psutil: 5.9.7
2023-12-18 09:13:13,236:INFO:          markupsafe: 2.1.3
2023-12-18 09:13:13,236:INFO:             pickle5: Not installed
2023-12-18 09:13:13,236:INFO:         cloudpickle: 3.0.0
2023-12-18 09:13:13,236:INFO:         deprecation: 2.1.0
2023-12-18 09:13:13,236:INFO:              xxhash: 3.4.1
2023-12-18 09:13:13,236:INFO:           wurlitzer: Not installed
2023-12-18 09:13:13,236:INFO:PyCaret optional dependencies:
2023-12-18 09:13:13,250:INFO:                shap: Not installed
2023-12-18 09:13:13,250:INFO:           interpret: Not installed
2023-12-18 09:13:13,250:INFO:                umap: Not installed
2023-12-18 09:13:13,250:INFO:     ydata_profiling: Not installed
2023-12-18 09:13:13,250:INFO:  explainerdashboard: Not installed
2023-12-18 09:13:13,250:INFO:             autoviz: Not installed
2023-12-18 09:13:13,250:INFO:           fairlearn: Not installed
2023-12-18 09:13:13,250:INFO:          deepchecks: Not installed
2023-12-18 09:13:13,250:INFO:             xgboost: Not installed
2023-12-18 09:13:13,250:INFO:            catboost: Not installed
2023-12-18 09:13:13,250:INFO:              kmodes: Not installed
2023-12-18 09:13:13,250:INFO:             mlxtend: Not installed
2023-12-18 09:13:13,250:INFO:       statsforecast: Not installed
2023-12-18 09:13:13,250:INFO:        tune_sklearn: Not installed
2023-12-18 09:13:13,250:INFO:                 ray: Not installed
2023-12-18 09:13:13,250:INFO:            hyperopt: Not installed
2023-12-18 09:13:13,250:INFO:              optuna: Not installed
2023-12-18 09:13:13,250:INFO:               skopt: Not installed
2023-12-18 09:13:13,250:INFO:              mlflow: Not installed
2023-12-18 09:13:13,250:INFO:              gradio: Not installed
2023-12-18 09:13:13,250:INFO:             fastapi: Not installed
2023-12-18 09:13:13,250:INFO:             uvicorn: Not installed
2023-12-18 09:13:13,250:INFO:              m2cgen: Not installed
2023-12-18 09:13:13,250:INFO:           evidently: Not installed
2023-12-18 09:13:13,250:INFO:               fugue: Not installed
2023-12-18 09:13:13,250:INFO:           streamlit: Not installed
2023-12-18 09:13:13,250:INFO:             prophet: Not installed
2023-12-18 09:13:13,250:INFO:None
2023-12-18 09:13:13,250:INFO:Set up data.
2023-12-18 09:13:13,263:INFO:Set up folding strategy.
2023-12-18 09:13:13,263:INFO:Set up train/test split.
2023-12-18 09:13:13,284:INFO:Set up index.
2023-12-18 09:13:13,284:INFO:Assigning column types.
2023-12-18 09:13:13,287:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-18 09:13:13,310:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 09:13:13,312:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 09:13:13,330:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:13:13,330:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:13:13,353:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 09:13:13,354:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 09:13:13,368:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:13:13,368:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:13:13,368:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-18 09:13:13,391:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 09:13:13,405:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:13:13,405:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:13:13,428:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 09:13:13,442:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:13:13,442:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:13:13,442:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-18 09:13:13,479:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:13:13,479:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:13:13,517:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:13:13,517:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:13:13,525:INFO:Preparing preprocessing pipeline...
2023-12-18 09:13:13,526:INFO:Set up label encoding.
2023-12-18 09:13:13,526:INFO:Set up date feature engineering.
2023-12-18 09:13:13,526:INFO:Set up simple imputation.
2023-12-18 09:13:13,529:INFO:Set up encoding of categorical features.
2023-12-18 09:13:13,529:INFO:Set up binning of numerical features.
2023-12-18 09:13:13,530:INFO:Set up imbalanced handling.
2023-12-18 09:13:13,530:INFO:Set up feature normalization.
2023-12-18 09:13:13,530:INFO:Set up column name cleaning.
2023-12-18 09:13:13,911:INFO:Finished creating preprocessing pipeline.
2023-12-18 09:13:13,917:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MAXIMI~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['tmsp'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_i...
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-18 09:13:13,917:INFO:Creating final display dataframe.
2023-12-18 09:13:14,309:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                 Date features   
10         Categorical features   
11                   Preprocess   
12              Imputation type   
13           Numeric imputation   
14       Categorical imputation   
15     Maximum one-hot encoding   
16              Encoding method   
17                Fix imbalance   
18         Fix imbalance method   
19                    Normalize   
20             Normalize method   
21               Fold Generator   
22                  Fold Number   
23                     CPU Jobs   
24                      Use GPU   
25               Log Experiment   
26              Experiment Name   
27                          USI   

                                                Value  
0                                                3469  
1                                                 PSP  
2                                          Multiclass  
3   Goldcard: 0, Moneycard: 1, Simplecard: 2, UK_C...  
4                                          (50410, 8)  
5                                         (89207, 14)  
6                                         (74084, 14)  
7                                         (15123, 14)  
8                                                   4  
9                                                   1  
10                                                  2  
11                                               True  
12                                             simple  
13                                               mean  
14                                               mode  
15                                                 25  
16                                               None  
17                                               True  
18                                              SMOTE  
19                                               True  
20                                             zscore  
21                                    StratifiedKFold  
22                                                  5  
23                                                 -1  
24                                              False  
25                                              False  
26                                   clf-default-name  
27                                               9410  
2023-12-18 09:13:14,350:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:13:14,350:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:13:14,390:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:13:14,391:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:13:14,391:INFO:setup() successfully completed in 1.2s...............
2023-12-18 09:13:14,391:INFO:Initializing compare_models()
2023-12-18 09:13:14,391:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022539EAFEE0>, include=None, fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000022539EAFEE0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-12-18 09:13:14,391:INFO:Checking exceptions
2023-12-18 09:13:14,395:INFO:Preparing display monitor
2023-12-18 09:13:14,398:INFO:Initializing Logistic Regression
2023-12-18 09:13:14,398:INFO:Total runtime is 0.0 minutes
2023-12-18 09:13:14,398:INFO:SubProcess create_model() called ==================================
2023-12-18 09:13:14,398:INFO:Initializing create_model()
2023-12-18 09:13:14,398:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022539EAFEE0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000225686A1600>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:13:14,398:INFO:Checking exceptions
2023-12-18 09:13:14,398:INFO:Importing libraries
2023-12-18 09:13:14,398:INFO:Copying training dataset
2023-12-18 09:13:14,402:INFO:Defining folds
2023-12-18 09:13:14,402:INFO:Declaring metric variables
2023-12-18 09:13:14,402:INFO:Importing untrained model
2023-12-18 09:13:14,402:INFO:Logistic Regression Imported successfully
2023-12-18 09:13:14,402:INFO:Starting cross validation
2023-12-18 09:13:14,403:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:13:17,127:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:17,139:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:17,139:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:17,146:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:17,149:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:17,149:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:17,161:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:17,162:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:17,169:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:17,171:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:17,172:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:17,184:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:17,185:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:17,193:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:17,232:INFO:Calculating mean and std
2023-12-18 09:13:17,233:INFO:Creating metrics dataframe
2023-12-18 09:13:17,236:INFO:Uploading results into container
2023-12-18 09:13:17,237:INFO:Uploading model into container now
2023-12-18 09:13:17,237:INFO:_master_model_container: 1
2023-12-18 09:13:17,237:INFO:_display_container: 2
2023-12-18 09:13:17,237:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3469, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-18 09:13:17,237:INFO:create_model() successfully completed......................................
2023-12-18 09:13:17,274:INFO:SubProcess create_model() end ==================================
2023-12-18 09:13:17,274:INFO:Creating metrics dataframe
2023-12-18 09:13:17,276:INFO:Initializing K Neighbors Classifier
2023-12-18 09:13:17,276:INFO:Total runtime is 0.0479642391204834 minutes
2023-12-18 09:13:17,276:INFO:SubProcess create_model() called ==================================
2023-12-18 09:13:17,277:INFO:Initializing create_model()
2023-12-18 09:13:17,277:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022539EAFEE0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000225686A1600>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:13:17,277:INFO:Checking exceptions
2023-12-18 09:13:17,277:INFO:Importing libraries
2023-12-18 09:13:17,277:INFO:Copying training dataset
2023-12-18 09:13:17,281:INFO:Defining folds
2023-12-18 09:13:17,281:INFO:Declaring metric variables
2023-12-18 09:13:17,281:INFO:Importing untrained model
2023-12-18 09:13:17,282:INFO:K Neighbors Classifier Imported successfully
2023-12-18 09:13:17,282:INFO:Starting cross validation
2023-12-18 09:13:17,283:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:13:20,361:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:20,417:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:20,450:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:20,579:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:20,682:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:20,696:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:20,735:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:20,741:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:20,764:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:20,782:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:20,782:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:20,804:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:20,805:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:20,826:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:20,827:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:20,857:INFO:Calculating mean and std
2023-12-18 09:13:20,858:INFO:Creating metrics dataframe
2023-12-18 09:13:20,861:INFO:Uploading results into container
2023-12-18 09:13:20,862:INFO:Uploading model into container now
2023-12-18 09:13:20,862:INFO:_master_model_container: 2
2023-12-18 09:13:20,862:INFO:_display_container: 2
2023-12-18 09:13:20,863:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-12-18 09:13:20,863:INFO:create_model() successfully completed......................................
2023-12-18 09:13:20,904:INFO:SubProcess create_model() end ==================================
2023-12-18 09:13:20,904:INFO:Creating metrics dataframe
2023-12-18 09:13:20,906:INFO:Initializing Naive Bayes
2023-12-18 09:13:20,906:INFO:Total runtime is 0.10847581624984742 minutes
2023-12-18 09:13:20,906:INFO:SubProcess create_model() called ==================================
2023-12-18 09:13:20,906:INFO:Initializing create_model()
2023-12-18 09:13:20,906:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022539EAFEE0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000225686A1600>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:13:20,906:INFO:Checking exceptions
2023-12-18 09:13:20,906:INFO:Importing libraries
2023-12-18 09:13:20,906:INFO:Copying training dataset
2023-12-18 09:13:20,911:INFO:Defining folds
2023-12-18 09:13:20,911:INFO:Declaring metric variables
2023-12-18 09:13:20,911:INFO:Importing untrained model
2023-12-18 09:13:20,911:INFO:Naive Bayes Imported successfully
2023-12-18 09:13:20,912:INFO:Starting cross validation
2023-12-18 09:13:20,913:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:13:22,684:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:22,687:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:22,688:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:22,692:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:22,693:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:22,708:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:22,711:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:22,713:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:22,716:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:22,717:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:22,731:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:22,734:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:22,735:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:22,740:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:22,741:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:22,779:INFO:Calculating mean and std
2023-12-18 09:13:22,780:INFO:Creating metrics dataframe
2023-12-18 09:13:22,783:INFO:Uploading results into container
2023-12-18 09:13:22,784:INFO:Uploading model into container now
2023-12-18 09:13:22,784:INFO:_master_model_container: 3
2023-12-18 09:13:22,784:INFO:_display_container: 2
2023-12-18 09:13:22,784:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-12-18 09:13:22,784:INFO:create_model() successfully completed......................................
2023-12-18 09:13:22,824:INFO:SubProcess create_model() end ==================================
2023-12-18 09:13:22,824:INFO:Creating metrics dataframe
2023-12-18 09:13:22,827:INFO:Initializing Decision Tree Classifier
2023-12-18 09:13:22,827:INFO:Total runtime is 0.14048171043395996 minutes
2023-12-18 09:13:22,827:INFO:SubProcess create_model() called ==================================
2023-12-18 09:13:22,827:INFO:Initializing create_model()
2023-12-18 09:13:22,827:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022539EAFEE0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000225686A1600>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:13:22,827:INFO:Checking exceptions
2023-12-18 09:13:22,827:INFO:Importing libraries
2023-12-18 09:13:22,827:INFO:Copying training dataset
2023-12-18 09:13:22,832:INFO:Defining folds
2023-12-18 09:13:22,832:INFO:Declaring metric variables
2023-12-18 09:13:22,832:INFO:Importing untrained model
2023-12-18 09:13:22,832:INFO:Decision Tree Classifier Imported successfully
2023-12-18 09:13:22,832:INFO:Starting cross validation
2023-12-18 09:13:22,833:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:13:24,955:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:24,969:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:24,974:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:24,977:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:24,980:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:24,989:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:24,991:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:24,997:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:25,000:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:25,004:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:25,012:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:25,014:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:25,020:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:25,023:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:25,035:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:25,074:INFO:Calculating mean and std
2023-12-18 09:13:25,074:INFO:Creating metrics dataframe
2023-12-18 09:13:25,077:INFO:Uploading results into container
2023-12-18 09:13:25,077:INFO:Uploading model into container now
2023-12-18 09:13:25,078:INFO:_master_model_container: 4
2023-12-18 09:13:25,078:INFO:_display_container: 2
2023-12-18 09:13:25,078:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3469, splitter='best')
2023-12-18 09:13:25,078:INFO:create_model() successfully completed......................................
2023-12-18 09:13:25,113:INFO:SubProcess create_model() end ==================================
2023-12-18 09:13:25,113:INFO:Creating metrics dataframe
2023-12-18 09:13:25,115:INFO:Initializing SVM - Linear Kernel
2023-12-18 09:13:25,115:INFO:Total runtime is 0.17861082553863525 minutes
2023-12-18 09:13:25,115:INFO:SubProcess create_model() called ==================================
2023-12-18 09:13:25,115:INFO:Initializing create_model()
2023-12-18 09:13:25,115:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022539EAFEE0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000225686A1600>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:13:25,115:INFO:Checking exceptions
2023-12-18 09:13:25,115:INFO:Importing libraries
2023-12-18 09:13:25,115:INFO:Copying training dataset
2023-12-18 09:13:25,121:INFO:Defining folds
2023-12-18 09:13:25,121:INFO:Declaring metric variables
2023-12-18 09:13:25,121:INFO:Importing untrained model
2023-12-18 09:13:25,121:INFO:SVM - Linear Kernel Imported successfully
2023-12-18 09:13:25,121:INFO:Starting cross validation
2023-12-18 09:13:25,122:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:13:25,876:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-18 09:13:25,876:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-18 09:13:25,876:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-18 09:13:25,885:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:25,885:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:25,885:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:25,885:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:25,886:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:25,909:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:25,909:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:25,910:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:25,910:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:25,910:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:25,933:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:25,933:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:25,933:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:25,934:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:25,934:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:25,971:INFO:Calculating mean and std
2023-12-18 09:13:25,971:INFO:Creating metrics dataframe
2023-12-18 09:13:25,973:INFO:Uploading results into container
2023-12-18 09:13:25,974:INFO:Uploading model into container now
2023-12-18 09:13:25,974:INFO:_master_model_container: 5
2023-12-18 09:13:25,974:INFO:_display_container: 2
2023-12-18 09:13:25,974:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3469, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-12-18 09:13:25,974:INFO:create_model() successfully completed......................................
2023-12-18 09:13:26,009:INFO:SubProcess create_model() end ==================================
2023-12-18 09:13:26,009:INFO:Creating metrics dataframe
2023-12-18 09:13:26,011:INFO:Initializing Ridge Classifier
2023-12-18 09:13:26,011:INFO:Total runtime is 0.19354989131291706 minutes
2023-12-18 09:13:26,011:INFO:SubProcess create_model() called ==================================
2023-12-18 09:13:26,012:INFO:Initializing create_model()
2023-12-18 09:13:26,012:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022539EAFEE0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000225686A1600>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:13:26,012:INFO:Checking exceptions
2023-12-18 09:13:26,012:INFO:Importing libraries
2023-12-18 09:13:26,012:INFO:Copying training dataset
2023-12-18 09:13:26,017:INFO:Defining folds
2023-12-18 09:13:26,017:INFO:Declaring metric variables
2023-12-18 09:13:26,017:INFO:Importing untrained model
2023-12-18 09:13:26,017:INFO:Ridge Classifier Imported successfully
2023-12-18 09:13:26,017:INFO:Starting cross validation
2023-12-18 09:13:26,019:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:13:26,345:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-18 09:13:26,354:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:26,362:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-18 09:13:26,363:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-18 09:13:26,363:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-18 09:13:26,372:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:26,372:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:26,373:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:26,375:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-18 09:13:26,376:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:26,385:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:26,396:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:26,397:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:26,397:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:26,400:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:26,409:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:26,419:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:26,420:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:26,420:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:26,433:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:26,464:INFO:Calculating mean and std
2023-12-18 09:13:26,464:INFO:Creating metrics dataframe
2023-12-18 09:13:26,467:INFO:Uploading results into container
2023-12-18 09:13:26,467:INFO:Uploading model into container now
2023-12-18 09:13:26,467:INFO:_master_model_container: 6
2023-12-18 09:13:26,467:INFO:_display_container: 2
2023-12-18 09:13:26,468:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3469, solver='auto',
                tol=0.0001)
2023-12-18 09:13:26,468:INFO:create_model() successfully completed......................................
2023-12-18 09:13:26,502:INFO:SubProcess create_model() end ==================================
2023-12-18 09:13:26,502:INFO:Creating metrics dataframe
2023-12-18 09:13:26,505:INFO:Initializing Random Forest Classifier
2023-12-18 09:13:26,505:INFO:Total runtime is 0.20178791284561157 minutes
2023-12-18 09:13:26,505:INFO:SubProcess create_model() called ==================================
2023-12-18 09:13:26,505:INFO:Initializing create_model()
2023-12-18 09:13:26,505:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022539EAFEE0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000225686A1600>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:13:26,505:INFO:Checking exceptions
2023-12-18 09:13:26,505:INFO:Importing libraries
2023-12-18 09:13:26,505:INFO:Copying training dataset
2023-12-18 09:13:26,511:INFO:Defining folds
2023-12-18 09:13:26,511:INFO:Declaring metric variables
2023-12-18 09:13:26,511:INFO:Importing untrained model
2023-12-18 09:13:26,511:INFO:Random Forest Classifier Imported successfully
2023-12-18 09:13:26,511:INFO:Starting cross validation
2023-12-18 09:13:26,512:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:13:31,483:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:31,567:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:31,597:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:31,601:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:31,622:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:31,635:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:31,657:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:31,665:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:31,683:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:31,684:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:31,717:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:31,734:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:32,283:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:32,306:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:32,328:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:32,358:INFO:Calculating mean and std
2023-12-18 09:13:32,359:INFO:Creating metrics dataframe
2023-12-18 09:13:32,363:INFO:Uploading results into container
2023-12-18 09:13:32,363:INFO:Uploading model into container now
2023-12-18 09:13:32,363:INFO:_master_model_container: 7
2023-12-18 09:13:32,364:INFO:_display_container: 2
2023-12-18 09:13:32,364:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=3469, verbose=0, warm_start=False)
2023-12-18 09:13:32,364:INFO:create_model() successfully completed......................................
2023-12-18 09:13:32,406:INFO:SubProcess create_model() end ==================================
2023-12-18 09:13:32,406:INFO:Creating metrics dataframe
2023-12-18 09:13:32,408:INFO:Initializing Quadratic Discriminant Analysis
2023-12-18 09:13:32,408:INFO:Total runtime is 0.3001721700032552 minutes
2023-12-18 09:13:32,409:INFO:SubProcess create_model() called ==================================
2023-12-18 09:13:32,409:INFO:Initializing create_model()
2023-12-18 09:13:32,409:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022539EAFEE0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000225686A1600>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:13:32,409:INFO:Checking exceptions
2023-12-18 09:13:32,409:INFO:Importing libraries
2023-12-18 09:13:32,409:INFO:Copying training dataset
2023-12-18 09:13:32,413:INFO:Defining folds
2023-12-18 09:13:32,413:INFO:Declaring metric variables
2023-12-18 09:13:32,413:INFO:Importing untrained model
2023-12-18 09:13:32,414:INFO:Quadratic Discriminant Analysis Imported successfully
2023-12-18 09:13:32,414:INFO:Starting cross validation
2023-12-18 09:13:32,415:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:13:32,718:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-18 09:13:32,719:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-18 09:13:32,728:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-18 09:13:32,739:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-18 09:13:32,739:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-18 09:13:32,809:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:32,810:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:32,821:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:32,827:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:32,828:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:32,838:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:32,839:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:32,850:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:32,855:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:32,855:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:32,867:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:32,867:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:32,878:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:32,883:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:32,884:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:32,930:INFO:Calculating mean and std
2023-12-18 09:13:32,930:INFO:Creating metrics dataframe
2023-12-18 09:13:32,934:INFO:Uploading results into container
2023-12-18 09:13:32,934:INFO:Uploading model into container now
2023-12-18 09:13:32,934:INFO:_master_model_container: 8
2023-12-18 09:13:32,934:INFO:_display_container: 2
2023-12-18 09:13:32,934:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-12-18 09:13:32,934:INFO:create_model() successfully completed......................................
2023-12-18 09:13:32,970:INFO:SubProcess create_model() end ==================================
2023-12-18 09:13:32,970:INFO:Creating metrics dataframe
2023-12-18 09:13:32,973:INFO:Initializing Ada Boost Classifier
2023-12-18 09:13:32,973:INFO:Total runtime is 0.30958794355392455 minutes
2023-12-18 09:13:32,973:INFO:SubProcess create_model() called ==================================
2023-12-18 09:13:32,974:INFO:Initializing create_model()
2023-12-18 09:13:32,974:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022539EAFEE0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000225686A1600>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:13:32,974:INFO:Checking exceptions
2023-12-18 09:13:32,974:INFO:Importing libraries
2023-12-18 09:13:32,974:INFO:Copying training dataset
2023-12-18 09:13:32,980:INFO:Defining folds
2023-12-18 09:13:32,980:INFO:Declaring metric variables
2023-12-18 09:13:32,980:INFO:Importing untrained model
2023-12-18 09:13:32,980:INFO:Ada Boost Classifier Imported successfully
2023-12-18 09:13:32,980:INFO:Starting cross validation
2023-12-18 09:13:32,982:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:13:36,395:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:36,411:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:36,413:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:36,422:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:36,422:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:36,438:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:13:36,438:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:36,441:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:36,449:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:36,451:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:36,454:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:13:36,457:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:13:36,465:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:36,467:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:13:36,469:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:36,474:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:36,477:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:36,501:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:36,517:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:13:36,528:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:13:36,561:INFO:Calculating mean and std
2023-12-18 09:13:36,561:INFO:Creating metrics dataframe
2023-12-18 09:13:36,564:INFO:Uploading results into container
2023-12-18 09:13:36,564:INFO:Uploading model into container now
2023-12-18 09:13:36,564:INFO:_master_model_container: 9
2023-12-18 09:13:36,564:INFO:_display_container: 2
2023-12-18 09:13:36,565:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=3469)
2023-12-18 09:13:36,565:INFO:create_model() successfully completed......................................
2023-12-18 09:13:36,601:INFO:SubProcess create_model() end ==================================
2023-12-18 09:13:36,601:INFO:Creating metrics dataframe
2023-12-18 09:13:36,604:INFO:Initializing Gradient Boosting Classifier
2023-12-18 09:13:36,604:INFO:Total runtime is 0.3701021869977315 minutes
2023-12-18 09:13:36,604:INFO:SubProcess create_model() called ==================================
2023-12-18 09:13:36,604:INFO:Initializing create_model()
2023-12-18 09:13:36,605:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022539EAFEE0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000225686A1600>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:13:36,605:INFO:Checking exceptions
2023-12-18 09:13:36,605:INFO:Importing libraries
2023-12-18 09:13:36,605:INFO:Copying training dataset
2023-12-18 09:13:36,610:INFO:Defining folds
2023-12-18 09:13:36,610:INFO:Declaring metric variables
2023-12-18 09:13:36,610:INFO:Importing untrained model
2023-12-18 09:13:36,610:INFO:Gradient Boosting Classifier Imported successfully
2023-12-18 09:13:36,610:INFO:Starting cross validation
2023-12-18 09:13:36,612:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:14:26,718:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:26,743:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:26,758:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:14:26,769:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:26,771:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:26,797:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:26,822:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:26,951:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:26,977:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:26,990:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:14:26,999:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:27,003:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:27,025:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:27,047:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:27,250:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:27,269:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:27,289:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:27,324:INFO:Calculating mean and std
2023-12-18 09:14:27,324:INFO:Creating metrics dataframe
2023-12-18 09:14:27,326:INFO:Uploading results into container
2023-12-18 09:14:27,327:INFO:Uploading model into container now
2023-12-18 09:14:27,327:INFO:_master_model_container: 10
2023-12-18 09:14:27,327:INFO:_display_container: 2
2023-12-18 09:14:27,327:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3469, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-18 09:14:27,327:INFO:create_model() successfully completed......................................
2023-12-18 09:14:27,361:INFO:SubProcess create_model() end ==================================
2023-12-18 09:14:27,361:INFO:Creating metrics dataframe
2023-12-18 09:14:27,364:INFO:Initializing Linear Discriminant Analysis
2023-12-18 09:14:27,364:INFO:Total runtime is 1.2161030689875285 minutes
2023-12-18 09:14:27,364:INFO:SubProcess create_model() called ==================================
2023-12-18 09:14:27,364:INFO:Initializing create_model()
2023-12-18 09:14:27,364:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022539EAFEE0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000225686A1600>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:14:27,364:INFO:Checking exceptions
2023-12-18 09:14:27,364:INFO:Importing libraries
2023-12-18 09:14:27,364:INFO:Copying training dataset
2023-12-18 09:14:27,368:INFO:Defining folds
2023-12-18 09:14:27,368:INFO:Declaring metric variables
2023-12-18 09:14:27,368:INFO:Importing untrained model
2023-12-18 09:14:27,368:INFO:Linear Discriminant Analysis Imported successfully
2023-12-18 09:14:27,368:INFO:Starting cross validation
2023-12-18 09:14:27,369:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:14:27,753:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:27,776:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:27,780:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:27,782:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:27,784:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:27,784:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:27,806:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:27,813:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:27,814:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:27,814:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:27,815:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:27,836:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:27,843:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:27,844:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:27,845:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:27,891:INFO:Calculating mean and std
2023-12-18 09:14:27,891:INFO:Creating metrics dataframe
2023-12-18 09:14:27,894:INFO:Uploading results into container
2023-12-18 09:14:27,895:INFO:Uploading model into container now
2023-12-18 09:14:27,895:INFO:_master_model_container: 11
2023-12-18 09:14:27,895:INFO:_display_container: 2
2023-12-18 09:14:27,895:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-12-18 09:14:27,895:INFO:create_model() successfully completed......................................
2023-12-18 09:14:27,938:INFO:SubProcess create_model() end ==================================
2023-12-18 09:14:27,938:INFO:Creating metrics dataframe
2023-12-18 09:14:27,941:INFO:Initializing Extra Trees Classifier
2023-12-18 09:14:27,941:INFO:Total runtime is 1.2257148663202921 minutes
2023-12-18 09:14:27,941:INFO:SubProcess create_model() called ==================================
2023-12-18 09:14:27,941:INFO:Initializing create_model()
2023-12-18 09:14:27,941:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022539EAFEE0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000225686A1600>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:14:27,941:INFO:Checking exceptions
2023-12-18 09:14:27,941:INFO:Importing libraries
2023-12-18 09:14:27,941:INFO:Copying training dataset
2023-12-18 09:14:27,947:INFO:Defining folds
2023-12-18 09:14:27,947:INFO:Declaring metric variables
2023-12-18 09:14:27,947:INFO:Importing untrained model
2023-12-18 09:14:27,947:INFO:Extra Trees Classifier Imported successfully
2023-12-18 09:14:27,948:INFO:Starting cross validation
2023-12-18 09:14:27,949:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:14:32,859:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:32,930:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:32,976:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:32,991:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:33,009:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:33,015:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:33,024:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:33,029:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:33,032:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:33,058:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:33,065:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:33,066:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:33,084:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:33,093:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:33,119:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:33,184:INFO:Calculating mean and std
2023-12-18 09:14:33,185:INFO:Creating metrics dataframe
2023-12-18 09:14:33,189:INFO:Uploading results into container
2023-12-18 09:14:33,190:INFO:Uploading model into container now
2023-12-18 09:14:33,190:INFO:_master_model_container: 12
2023-12-18 09:14:33,191:INFO:_display_container: 2
2023-12-18 09:14:33,191:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3469, verbose=0, warm_start=False)
2023-12-18 09:14:33,191:INFO:create_model() successfully completed......................................
2023-12-18 09:14:33,243:INFO:SubProcess create_model() end ==================================
2023-12-18 09:14:33,243:INFO:Creating metrics dataframe
2023-12-18 09:14:33,247:INFO:Initializing Light Gradient Boosting Machine
2023-12-18 09:14:33,247:INFO:Total runtime is 1.314146590232849 minutes
2023-12-18 09:14:33,247:INFO:SubProcess create_model() called ==================================
2023-12-18 09:14:33,247:INFO:Initializing create_model()
2023-12-18 09:14:33,247:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022539EAFEE0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000225686A1600>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:14:33,247:INFO:Checking exceptions
2023-12-18 09:14:33,247:INFO:Importing libraries
2023-12-18 09:14:33,247:INFO:Copying training dataset
2023-12-18 09:14:33,254:INFO:Defining folds
2023-12-18 09:14:33,255:INFO:Declaring metric variables
2023-12-18 09:14:33,255:INFO:Importing untrained model
2023-12-18 09:14:33,255:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-18 09:14:33,255:INFO:Starting cross validation
2023-12-18 09:14:33,257:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:14:37,259:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:37,281:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:37,319:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:37,327:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:37,330:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:37,331:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:37,371:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:37,374:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:37,378:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:37,381:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:37,423:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:37,424:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:37,711:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:37,750:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:37,785:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:37,824:INFO:Calculating mean and std
2023-12-18 09:14:37,824:INFO:Creating metrics dataframe
2023-12-18 09:14:37,827:INFO:Uploading results into container
2023-12-18 09:14:37,828:INFO:Uploading model into container now
2023-12-18 09:14:37,828:INFO:_master_model_container: 13
2023-12-18 09:14:37,828:INFO:_display_container: 2
2023-12-18 09:14:37,829:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3469, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-18 09:14:37,829:INFO:create_model() successfully completed......................................
2023-12-18 09:14:37,867:INFO:SubProcess create_model() end ==================================
2023-12-18 09:14:37,867:INFO:Creating metrics dataframe
2023-12-18 09:14:37,870:INFO:Initializing Dummy Classifier
2023-12-18 09:14:37,870:INFO:Total runtime is 1.391201094786326 minutes
2023-12-18 09:14:37,870:INFO:SubProcess create_model() called ==================================
2023-12-18 09:14:37,871:INFO:Initializing create_model()
2023-12-18 09:14:37,871:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022539EAFEE0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000225686A1600>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:14:37,871:INFO:Checking exceptions
2023-12-18 09:14:37,871:INFO:Importing libraries
2023-12-18 09:14:37,871:INFO:Copying training dataset
2023-12-18 09:14:37,876:INFO:Defining folds
2023-12-18 09:14:37,876:INFO:Declaring metric variables
2023-12-18 09:14:37,876:INFO:Importing untrained model
2023-12-18 09:14:37,876:INFO:Dummy Classifier Imported successfully
2023-12-18 09:14:37,877:INFO:Starting cross validation
2023-12-18 09:14:37,878:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:14:38,235:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:38,255:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:38,259:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:38,260:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:38,269:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:38,273:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:38,276:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:14:38,285:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:38,286:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:38,287:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:38,296:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:38,299:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:38,301:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:14:38,302:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:14:38,311:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:38,311:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:14:38,313:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:38,315:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:14:38,322:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:38,325:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:14:38,366:INFO:Calculating mean and std
2023-12-18 09:14:38,366:INFO:Creating metrics dataframe
2023-12-18 09:14:38,369:INFO:Uploading results into container
2023-12-18 09:14:38,369:INFO:Uploading model into container now
2023-12-18 09:14:38,369:INFO:_master_model_container: 14
2023-12-18 09:14:38,370:INFO:_display_container: 2
2023-12-18 09:14:38,370:INFO:DummyClassifier(constant=None, random_state=3469, strategy='prior')
2023-12-18 09:14:38,370:INFO:create_model() successfully completed......................................
2023-12-18 09:14:38,412:INFO:SubProcess create_model() end ==================================
2023-12-18 09:14:38,412:INFO:Creating metrics dataframe
2023-12-18 09:14:38,416:INFO:Initializing create_model()
2023-12-18 09:14:38,416:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022539EAFEE0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=3469), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:14:38,416:INFO:Checking exceptions
2023-12-18 09:14:38,416:INFO:Importing libraries
2023-12-18 09:14:38,416:INFO:Copying training dataset
2023-12-18 09:14:38,422:INFO:Defining folds
2023-12-18 09:14:38,422:INFO:Declaring metric variables
2023-12-18 09:14:38,422:INFO:Importing untrained model
2023-12-18 09:14:38,422:INFO:Declaring custom model
2023-12-18 09:14:38,422:INFO:Ada Boost Classifier Imported successfully
2023-12-18 09:14:38,424:INFO:Cross validation set to False
2023-12-18 09:14:38,424:INFO:Fitting Model
2023-12-18 09:14:41,346:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=3469)
2023-12-18 09:14:41,346:INFO:create_model() successfully completed......................................
2023-12-18 09:14:41,385:INFO:_master_model_container: 14
2023-12-18 09:14:41,385:INFO:_display_container: 2
2023-12-18 09:14:41,385:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=3469)
2023-12-18 09:14:41,386:INFO:compare_models() successfully completed......................................
2023-12-18 09:15:55,328:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 09:15:55,329:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 09:15:55,329:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 09:15:55,329:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-18 09:15:55,849:INFO:PyCaret ClassificationExperiment
2023-12-18 09:15:55,849:INFO:Logging name: clf-default-name
2023-12-18 09:15:55,849:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-18 09:15:55,849:INFO:version 3.2.0
2023-12-18 09:15:55,849:INFO:Initializing setup()
2023-12-18 09:15:55,849:INFO:self.USI: a3f1
2023-12-18 09:15:55,849:INFO:self._variable_keys: {'_available_plots', 'logging_param', 'exp_id', 'fold_generator', 'fix_imbalance', 'target_param', 'X_train', 'gpu_param', 'fold_groups_param', 'X', 'y_train', 'y_test', 'seed', 'USI', 'X_test', 'fold_shuffle_param', 'y', 'html_param', 'gpu_n_jobs_param', 'exp_name_log', 'log_plots_param', 'n_jobs_param', '_ml_usecase', 'pipeline', 'data', 'idx', 'is_multiclass', 'memory'}
2023-12-18 09:15:55,849:INFO:Checking environment
2023-12-18 09:15:55,849:INFO:python_version: 3.10.4
2023-12-18 09:15:55,849:INFO:python_build: ('tags/v3.10.4:9d38120', 'Mar 23 2022 23:13:41')
2023-12-18 09:15:55,849:INFO:machine: AMD64
2023-12-18 09:15:55,858:INFO:platform: Windows-10-10.0.19045-SP0
2023-12-18 09:15:55,861:INFO:Memory: svmem(total=34029125632, available=17939349504, percent=47.3, used=16089776128, free=17939349504)
2023-12-18 09:15:55,861:INFO:Physical Core: 14
2023-12-18 09:15:55,861:INFO:Logical Core: 20
2023-12-18 09:15:55,861:INFO:Checking libraries
2023-12-18 09:15:55,861:INFO:System:
2023-12-18 09:15:55,861:INFO:    python: 3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit (AMD64)]
2023-12-18 09:15:55,861:INFO:executable: C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\python.exe
2023-12-18 09:15:55,861:INFO:   machine: Windows-10-10.0.19045-SP0
2023-12-18 09:15:55,861:INFO:PyCaret required dependencies:
2023-12-18 09:15:55,872:INFO:                 pip: 22.0.4
2023-12-18 09:15:55,872:INFO:          setuptools: 58.1.0
2023-12-18 09:15:55,872:INFO:             pycaret: 3.2.0
2023-12-18 09:15:55,872:INFO:             IPython: 8.18.1
2023-12-18 09:15:55,872:INFO:          ipywidgets: 8.1.1
2023-12-18 09:15:55,872:INFO:                tqdm: 4.66.1
2023-12-18 09:15:55,872:INFO:               numpy: 1.25.2
2023-12-18 09:15:55,872:INFO:              pandas: 1.5.3
2023-12-18 09:15:55,872:INFO:              jinja2: 3.1.2
2023-12-18 09:15:55,872:INFO:               scipy: 1.10.1
2023-12-18 09:15:55,873:INFO:              joblib: 1.3.2
2023-12-18 09:15:55,873:INFO:             sklearn: 1.2.2
2023-12-18 09:15:55,873:INFO:                pyod: 1.1.2
2023-12-18 09:15:55,873:INFO:            imblearn: 0.11.0
2023-12-18 09:15:55,873:INFO:   category_encoders: 2.6.3
2023-12-18 09:15:55,873:INFO:            lightgbm: 4.1.0
2023-12-18 09:15:55,873:INFO:               numba: 0.58.1
2023-12-18 09:15:55,873:INFO:            requests: 2.31.0
2023-12-18 09:15:55,873:INFO:          matplotlib: 3.6.0
2023-12-18 09:15:55,873:INFO:          scikitplot: 0.3.7
2023-12-18 09:15:55,873:INFO:         yellowbrick: 1.5
2023-12-18 09:15:55,873:INFO:              plotly: 5.18.0
2023-12-18 09:15:55,873:INFO:    plotly-resampler: Not installed
2023-12-18 09:15:55,873:INFO:             kaleido: 0.2.1
2023-12-18 09:15:55,873:INFO:           schemdraw: 0.15
2023-12-18 09:15:55,873:INFO:         statsmodels: 0.14.1
2023-12-18 09:15:55,873:INFO:              sktime: 0.21.1
2023-12-18 09:15:55,873:INFO:               tbats: 1.1.3
2023-12-18 09:15:55,873:INFO:            pmdarima: 2.0.4
2023-12-18 09:15:55,873:INFO:              psutil: 5.9.7
2023-12-18 09:15:55,873:INFO:          markupsafe: 2.1.3
2023-12-18 09:15:55,873:INFO:             pickle5: Not installed
2023-12-18 09:15:55,873:INFO:         cloudpickle: 3.0.0
2023-12-18 09:15:55,873:INFO:         deprecation: 2.1.0
2023-12-18 09:15:55,873:INFO:              xxhash: 3.4.1
2023-12-18 09:15:55,873:INFO:           wurlitzer: Not installed
2023-12-18 09:15:55,873:INFO:PyCaret optional dependencies:
2023-12-18 09:15:55,882:INFO:                shap: Not installed
2023-12-18 09:15:55,882:INFO:           interpret: Not installed
2023-12-18 09:15:55,882:INFO:                umap: Not installed
2023-12-18 09:15:55,882:INFO:     ydata_profiling: Not installed
2023-12-18 09:15:55,882:INFO:  explainerdashboard: Not installed
2023-12-18 09:15:55,882:INFO:             autoviz: Not installed
2023-12-18 09:15:55,882:INFO:           fairlearn: Not installed
2023-12-18 09:15:55,882:INFO:          deepchecks: Not installed
2023-12-18 09:15:55,882:INFO:             xgboost: Not installed
2023-12-18 09:15:55,882:INFO:            catboost: Not installed
2023-12-18 09:15:55,882:INFO:              kmodes: Not installed
2023-12-18 09:15:55,882:INFO:             mlxtend: Not installed
2023-12-18 09:15:55,882:INFO:       statsforecast: Not installed
2023-12-18 09:15:55,882:INFO:        tune_sklearn: Not installed
2023-12-18 09:15:55,882:INFO:                 ray: Not installed
2023-12-18 09:15:55,882:INFO:            hyperopt: Not installed
2023-12-18 09:15:55,882:INFO:              optuna: Not installed
2023-12-18 09:15:55,882:INFO:               skopt: Not installed
2023-12-18 09:15:55,882:INFO:              mlflow: Not installed
2023-12-18 09:15:55,882:INFO:              gradio: Not installed
2023-12-18 09:15:55,882:INFO:             fastapi: Not installed
2023-12-18 09:15:55,882:INFO:             uvicorn: Not installed
2023-12-18 09:15:55,882:INFO:              m2cgen: Not installed
2023-12-18 09:15:55,882:INFO:           evidently: Not installed
2023-12-18 09:15:55,882:INFO:               fugue: Not installed
2023-12-18 09:15:55,882:INFO:           streamlit: Not installed
2023-12-18 09:15:55,882:INFO:             prophet: Not installed
2023-12-18 09:15:55,882:INFO:None
2023-12-18 09:15:55,882:INFO:Set up data.
2023-12-18 09:15:55,894:INFO:Set up folding strategy.
2023-12-18 09:15:55,894:INFO:Set up train/test split.
2023-12-18 09:15:55,915:INFO:Set up index.
2023-12-18 09:15:55,915:INFO:Assigning column types.
2023-12-18 09:15:55,918:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-18 09:15:55,940:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 09:15:55,942:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 09:15:55,960:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:15:55,960:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:15:55,982:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-18 09:15:55,983:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 09:15:55,996:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:15:55,997:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:15:55,997:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-18 09:15:56,019:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 09:15:56,033:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:15:56,034:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:15:56,056:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-18 09:15:56,070:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:15:56,070:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:15:56,070:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-18 09:15:56,106:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:15:56,106:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:15:56,143:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:15:56,143:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:15:56,144:INFO:Preparing preprocessing pipeline...
2023-12-18 09:15:56,145:INFO:Set up label encoding.
2023-12-18 09:15:56,145:INFO:Set up date feature engineering.
2023-12-18 09:15:56,145:INFO:Set up simple imputation.
2023-12-18 09:15:56,148:INFO:Set up encoding of categorical features.
2023-12-18 09:15:56,148:INFO:Set up binning of numerical features.
2023-12-18 09:15:56,149:INFO:Set up imbalanced handling.
2023-12-18 09:15:56,149:INFO:Set up feature normalization.
2023-12-18 09:15:56,149:INFO:Set up column name cleaning.
2023-12-18 09:15:56,516:INFO:Finished creating preprocessing pipeline.
2023-12-18 09:15:56,522:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MAXIMI~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['tmsp'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_i...
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-18 09:15:56,522:INFO:Creating final display dataframe.
2023-12-18 09:15:56,875:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                 Date features   
10         Categorical features   
11                   Preprocess   
12              Imputation type   
13           Numeric imputation   
14       Categorical imputation   
15     Maximum one-hot encoding   
16              Encoding method   
17                Fix imbalance   
18         Fix imbalance method   
19                    Normalize   
20             Normalize method   
21               Fold Generator   
22                  Fold Number   
23                     CPU Jobs   
24                      Use GPU   
25               Log Experiment   
26              Experiment Name   
27                          USI   

                                                Value  
0                                                 251  
1                                                 PSP  
2                                          Multiclass  
3   Goldcard: 0, Moneycard: 1, Simplecard: 2, UK_C...  
4                                          (50410, 8)  
5                                         (89207, 14)  
6                                         (74084, 14)  
7                                         (15123, 14)  
8                                                   4  
9                                                   1  
10                                                  2  
11                                               True  
12                                             simple  
13                                               mean  
14                                               mode  
15                                                 25  
16                                               None  
17                                               True  
18                                              SMOTE  
19                                               True  
20                                             zscore  
21                                    StratifiedKFold  
22                                                  5  
23                                                 -1  
24                                              False  
25                                              False  
26                                   clf-default-name  
27                                               a3f1  
2023-12-18 09:15:56,914:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:15:56,914:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:15:56,951:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:15:56,951:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-18 09:15:56,952:INFO:setup() successfully completed in 1.11s...............
2023-12-18 09:15:56,952:INFO:Initializing create_model()
2023-12-18 09:15:56,952:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F2AB4FEE0>, estimator=ada, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-18 09:15:56,952:INFO:Checking exceptions
2023-12-18 09:15:56,954:INFO:Importing libraries
2023-12-18 09:15:56,954:INFO:Copying training dataset
2023-12-18 09:15:56,959:INFO:Defining folds
2023-12-18 09:15:56,959:INFO:Declaring metric variables
2023-12-18 09:15:56,959:INFO:Importing untrained model
2023-12-18 09:15:56,959:INFO:Ada Boost Classifier Imported successfully
2023-12-18 09:15:56,959:INFO:Starting cross validation
2023-12-18 09:15:56,960:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-18 09:16:01,987:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:16:01,989:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:16:02,005:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:16:02,008:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:16:02,009:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:16:02,010:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:16:02,024:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:16:02,028:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:16:02,032:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:16:02,032:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:16:02,033:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:16:02,035:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:16:02,041:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:16:02,044:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:16:02,050:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:16:02,053:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:16:02,053:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:16:02,066:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-18 09:16:02,075:WARNING:C:\Users\MaximilianStoepler\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'UK_Card') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-18 09:16:02,108:INFO:Calculating mean and std
2023-12-18 09:16:02,109:INFO:Creating metrics dataframe
2023-12-18 09:16:02,110:INFO:Finalizing model
2023-12-18 09:16:05,267:INFO:Uploading results into container
2023-12-18 09:16:05,268:INFO:Uploading model into container now
2023-12-18 09:16:05,270:INFO:_master_model_container: 1
2023-12-18 09:16:05,270:INFO:_display_container: 2
2023-12-18 09:16:05,270:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=251)
2023-12-18 09:16:05,270:INFO:create_model() successfully completed......................................
